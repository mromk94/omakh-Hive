{
  "files": {
    "backend/queen-ai/setup_database.py": {
      "type": "python",
      "size": 2676,
      "lines": 99,
      "functions": [
        {
          "name": "setup_database",
          "line": 24,
          "docstring": "Setup database - create all tables",
          "args": []
        },
        {
          "name": "verify_connection",
          "line": 50,
          "docstring": "Verify database connection",
          "args": []
        },
        {
          "name": "main",
          "line": 69,
          "docstring": "Main setup function",
          "args": []
        }
      ],
      "classes": [],
      "imports": [
        "asyncio",
        "sys",
        "pathlib",
        "app.config.settings",
        "app.db.base",
        "app.db",
        "structlog",
        "sqlalchemy",
        "sqlalchemy"
      ],
      "keywords": [
        "database",
        "error"
      ]
    },
    "backend/queen-ai/run_bee_tests.py": {
      "type": "python",
      "size": 13319,
      "lines": 387,
      "functions": [],
      "classes": [],
      "imports": [
        "asyncio",
        "sys",
        "pathlib",
        "app.bees.maths_bee",
        "app.bees.security_bee",
        "app.bees.data_bee",
        "app.bees.treasury_bee",
        "app.bees.manager",
        "traceback"
      ],
      "keywords": [
        "token",
        "security",
        "transaction",
        "query",
        "validation"
      ]
    },
    "backend/queen-ai/setup_env.py": {
      "type": "python",
      "size": 12081,
      "lines": 324,
      "functions": [
        {
          "name": "setup_env",
          "line": 11,
          "docstring": "Interactive .env file setup",
          "args": []
        }
      ],
      "classes": [],
      "imports": [
        "os",
        "pathlib",
        "traceback"
      ],
      "keywords": [
        "api",
        "database",
        "error",
        "password",
        "security",
        "user",
        "validation"
      ]
    },
    "backend/queen-ai/test_solana_client.py": {
      "type": "python",
      "size": 2522,
      "lines": 71,
      "functions": [],
      "classes": [],
      "imports": [
        "asyncio",
        "app.blockchain.solana_rpc_client",
        "traceback"
      ],
      "keywords": [
        "api",
        "wallet"
      ]
    },
    "backend/queen-ai/initialize_elastic.py": {
      "type": "python",
      "size": 2935,
      "lines": 95,
      "functions": [],
      "classes": [],
      "imports": [
        "asyncio",
        "os",
        "sys",
        "dotenv",
        "app.integrations.elastic_search"
      ],
      "keywords": [
        "api",
        "error"
      ]
    },
    "backend/queen-ai/test_data_pipeline_bee.py": {
      "type": "python",
      "size": 3457,
      "lines": 108,
      "functions": [],
      "classes": [],
      "imports": [
        "asyncio",
        "sys",
        "pathlib",
        "app.bees.data_pipeline_bee",
        "structlog",
        "logging"
      ],
      "keywords": [
        "query",
        "error"
      ]
    },
    "backend/queen-ai/full_pipeline_test.py": {
      "type": "python",
      "size": 21423,
      "lines": 627,
      "functions": [
        {
          "name": "print_header",
          "line": 91,
          "docstring": null,
          "args": [
            "title"
          ]
        },
        {
          "name": "info",
          "line": 25,
          "docstring": null,
          "args": [
            "self"
          ]
        },
        {
          "name": "debug",
          "line": 26,
          "docstring": null,
          "args": [
            "self"
          ]
        },
        {
          "name": "warning",
          "line": 27,
          "docstring": null,
          "args": [
            "self"
          ]
        },
        {
          "name": "error",
          "line": 28,
          "docstring": null,
          "args": [
            "self"
          ]
        },
        {
          "name": "get_logger",
          "line": 32,
          "docstring": null,
          "args": [
            "name"
          ]
        },
        {
          "name": "__init__",
          "line": 45,
          "docstring": null,
          "args": [
            "self"
          ]
        },
        {
          "name": "record_pass",
          "line": 51,
          "docstring": null,
          "args": [
            "self",
            "test_name"
          ]
        },
        {
          "name": "record_fail",
          "line": 56,
          "docstring": null,
          "args": [
            "self",
            "test_name",
            "error"
          ]
        },
        {
          "name": "summary",
          "line": 62,
          "docstring": null,
          "args": [
            "self"
          ]
        }
      ],
      "classes": [
        {
          "name": "MockLogger",
          "line": 24,
          "docstring": null,
          "methods": [
            "info",
            "debug",
            "warning",
            "error"
          ]
        },
        {
          "name": "MockStructlog",
          "line": 30,
          "docstring": null,
          "methods": [
            "get_logger"
          ]
        },
        {
          "name": "TestResults",
          "line": 44,
          "docstring": null,
          "methods": [
            "__init__",
            "record_pass",
            "record_fail",
            "summary"
          ]
        }
      ],
      "imports": [
        "asyncio",
        "sys",
        "pathlib",
        "datetime",
        "app.core.message_bus",
        "app.core.hive_board",
        "app.bees.manager",
        "app.uagents.integration"
      ],
      "keywords": [
        "security",
        "query",
        "error",
        "validation"
      ]
    },
    "backend/queen-ai/stop.py": {
      "type": "python",
      "size": 7015,
      "lines": 211,
      "functions": [
        {
          "name": "__init__",
          "line": 31,
          "docstring": null,
          "args": [
            "self",
            "force"
          ]
        },
        {
          "name": "_find_processes",
          "line": 82,
          "docstring": "Find running OMK Hive processes",
          "args": [
            "self"
          ]
        }
      ],
      "classes": [
        {
          "name": "SystemShutdownManager",
          "line": 28,
          "docstring": "Manages graceful system shutdown",
          "methods": [
            "__init__",
            "_find_processes"
          ]
        }
      ],
      "imports": [
        "asyncio",
        "sys",
        "os",
        "signal",
        "time",
        "pathlib",
        "argparse",
        "psutil",
        "structlog",
        "glob"
      ],
      "keywords": [
        "error"
      ]
    },
    "backend/queen-ai/test_llm_providers.py": {
      "type": "python",
      "size": 7586,
      "lines": 223,
      "functions": [],
      "classes": [],
      "imports": [
        "asyncio",
        "os",
        "dotenv",
        "google.generativeai",
        "openai",
        "anthropic",
        "traceback"
      ],
      "keywords": [
        "user",
        "api",
        "error",
        "auth(?:entication|orization)?"
      ]
    },
    "backend/queen-ai/test_private_sale.py": {
      "type": "python",
      "size": 13288,
      "lines": 357,
      "functions": [
        {
          "name": "info",
          "line": 13,
          "docstring": null,
          "args": [
            "self"
          ]
        },
        {
          "name": "debug",
          "line": 14,
          "docstring": null,
          "args": [
            "self"
          ]
        },
        {
          "name": "warning",
          "line": 15,
          "docstring": null,
          "args": [
            "self"
          ]
        },
        {
          "name": "error",
          "line": 16,
          "docstring": null,
          "args": [
            "self"
          ]
        },
        {
          "name": "get_logger",
          "line": 20,
          "docstring": null,
          "args": [
            "name"
          ]
        },
        {
          "name": "__init__",
          "line": 29,
          "docstring": null,
          "args": [
            "self"
          ]
        },
        {
          "name": "print_header",
          "line": 34,
          "docstring": null,
          "args": [
            "self",
            "title"
          ]
        },
        {
          "name": "assert_equal",
          "line": 39,
          "docstring": null,
          "args": [
            "self",
            "actual",
            "expected",
            "test_name"
          ]
        },
        {
          "name": "assert_true",
          "line": 51,
          "docstring": null,
          "args": [
            "self",
            "condition",
            "test_name"
          ]
        },
        {
          "name": "assert_false",
          "line": 182,
          "docstring": "Helper for false assertions",
          "args": [
            "self",
            "condition",
            "test_name"
          ]
        },
        {
          "name": "print_summary",
          "line": 326,
          "docstring": null,
          "args": [
            "self"
          ]
        }
      ],
      "classes": [
        {
          "name": "MockLogger",
          "line": 12,
          "docstring": null,
          "methods": [
            "info",
            "debug",
            "warning",
            "error"
          ]
        },
        {
          "name": "MockStructlog",
          "line": 18,
          "docstring": null,
          "methods": [
            "get_logger"
          ]
        },
        {
          "name": "PrivateSaleTests",
          "line": 28,
          "docstring": null,
          "methods": [
            "__init__",
            "print_header",
            "assert_equal",
            "assert_true",
            "assert_false",
            "print_summary"
          ]
        }
      ],
      "imports": [
        "asyncio",
        "sys",
        "pathlib",
        "app.bees.private_sale_bee",
        "sys"
      ],
      "keywords": [
        "token",
        "error"
      ]
    },
    "backend/queen-ai/start.py": {
      "type": "python",
      "size": 15356,
      "lines": 400,
      "functions": [
        {
          "name": "__init__",
          "line": 36,
          "docstring": null,
          "args": [
            "self",
            "environment"
          ]
        },
        {
          "name": "_handle_shutdown_signal",
          "line": 49,
          "docstring": "Handle shutdown signals gracefully",
          "args": [
            "self",
            "signum",
            "frame"
          ]
        }
      ],
      "classes": [
        {
          "name": "SystemLifecycleManager",
          "line": 31,
          "docstring": "Manages system startup, health checks, and graceful shutdown",
          "methods": [
            "__init__",
            "_handle_shutdown_signal"
          ]
        }
      ],
      "imports": [
        "asyncio",
        "sys",
        "os",
        "signal",
        "time",
        "pathlib",
        "typing",
        "argparse",
        "structlog",
        "app.config.settings",
        "socket",
        "app.core.stateless_architecture",
        "app.core.distributed_lock",
        "app.core.session_manager",
        "app.db.base",
        "sqlalchemy",
        "app.core.redis_message_bus",
        "app.core.redis_hive_board",
        "app.llm.abstraction",
        "app.bees.manager",
        "app.core.orchestrator",
        "app.main",
        "app.core.message_bus",
        "app.core.hive_board",
        "app.learning.bigquery_logger"
      ],
      "keywords": [
        "api",
        "database",
        "error",
        "user",
        "validation"
      ]
    },
    "backend/queen-ai/debug.py": {
      "type": "python",
      "size": 16029,
      "lines": 434,
      "functions": [
        {
          "name": "__init__",
          "line": 33,
          "docstring": null,
          "args": [
            "self"
          ]
        },
        {
          "name": "print_recommendations",
          "line": 382,
          "docstring": "Print all recommendations",
          "args": [
            "self"
          ]
        }
      ],
      "classes": [
        {
          "name": "DebugAnalyzer",
          "line": 30,
          "docstring": "Advanced debugging and diagnostics",
          "methods": [
            "__init__",
            "print_recommendations"
          ]
        }
      ],
      "imports": [
        "asyncio",
        "sys",
        "os",
        "pathlib",
        "typing",
        "argparse",
        "datetime",
        "json",
        "structlog",
        "app.config.settings",
        "psutil",
        "time",
        "app.db.base",
        "app.db.base",
        "sqlalchemy",
        "app.core.redis_message_bus",
        "app.bees.manager",
        "app.llm.abstraction",
        "app.bees.manager",
        "app.core.message_bus"
      ],
      "keywords": [
        "database",
        "password",
        "error"
      ]
    },
    "backend/queen-ai/reboot.py": {
      "type": "python",
      "size": 6289,
      "lines": 175,
      "functions": [
        {
          "name": "__init__",
          "line": 30,
          "docstring": null,
          "args": [
            "self",
            "quick",
            "environment"
          ]
        }
      ],
      "classes": [
        {
          "name": "SystemRebootManager",
          "line": 27,
          "docstring": "Manages system reboot",
          "methods": [
            "__init__"
          ]
        }
      ],
      "imports": [
        "asyncio",
        "sys",
        "time",
        "pathlib",
        "argparse",
        "structlog",
        "stop",
        "start",
        "psutil",
        "socket"
      ],
      "keywords": [
        "user",
        "error",
        "validation"
      ]
    },
    "backend/queen-ai/test_elastic_connection.py": {
      "type": "python",
      "size": 1956,
      "lines": 68,
      "functions": [],
      "classes": [],
      "imports": [
        "asyncio",
        "os",
        "dotenv",
        "elasticsearch"
      ],
      "keywords": [
        "api"
      ]
    },
    "backend/queen-ai/test_lifecycle_management.py": {
      "type": "python",
      "size": 9178,
      "lines": 285,
      "functions": [],
      "classes": [],
      "imports": [
        "asyncio",
        "time",
        "datetime",
        "app.core.stateless_architecture",
        "app.core.distributed_lock",
        "app.core.session_manager",
        "app.llm.providers.gemini",
        "app.utils.logging_config",
        "app.config.settings",
        "traceback"
      ],
      "keywords": [
        "user",
        "api",
        "database",
        "error"
      ]
    },
    "backend/queen-ai/health_check.py": {
      "type": "python",
      "size": 16600,
      "lines": 458,
      "functions": [
        {
          "name": "__init__",
          "line": 31,
          "docstring": null,
          "args": [
            "self",
            "component"
          ]
        },
        {
          "name": "add_check",
          "line": 40,
          "docstring": "Add check result",
          "args": [
            "self",
            "name",
            "passed",
            "details"
          ]
        },
        {
          "name": "add_error",
          "line": 48,
          "docstring": "Add error",
          "args": [
            "self",
            "error"
          ]
        },
        {
          "name": "add_warning",
          "line": 52,
          "docstring": "Add warning",
          "args": [
            "self",
            "warning"
          ]
        },
        {
          "name": "set_metric",
          "line": 56,
          "docstring": "Set metric",
          "args": [
            "self",
            "key",
            "value"
          ]
        },
        {
          "name": "calculate_status",
          "line": 60,
          "docstring": "Calculate overall status",
          "args": [
            "self"
          ]
        },
        {
          "name": "print_report",
          "line": 77,
          "docstring": "Print formatted report",
          "args": [
            "self"
          ]
        },
        {
          "name": "__init__",
          "line": 121,
          "docstring": null,
          "args": [
            "self"
          ]
        },
        {
          "name": "_print_summary",
          "line": 401,
          "docstring": "Print overall summary",
          "args": [
            "self",
            "duration"
          ]
        }
      ],
      "classes": [
        {
          "name": "HealthCheckResult",
          "line": 28,
          "docstring": "Health check result container",
          "methods": [
            "__init__",
            "add_check",
            "add_error",
            "add_warning",
            "set_metric",
            "calculate_status",
            "print_report"
          ]
        },
        {
          "name": "SystemHealthChecker",
          "line": 118,
          "docstring": "Comprehensive system health checker",
          "methods": [
            "__init__",
            "_print_summary"
          ]
        }
      ],
      "imports": [
        "asyncio",
        "sys",
        "time",
        "pathlib",
        "typing",
        "argparse",
        "datetime",
        "structlog",
        "app.config.settings",
        "app.db.base",
        "sqlalchemy",
        "app.core.redis_message_bus",
        "app.llm.abstraction",
        "app.bees.manager",
        "httpx",
        "psutil"
      ],
      "keywords": [
        "api",
        "security",
        "database",
        "error"
      ]
    },
    "backend/queen-ai/check_env.py": {
      "type": "python",
      "size": 6771,
      "lines": 219,
      "functions": [
        {
          "name": "check_env",
          "line": 12,
          "docstring": "Check .env configuration",
          "args": []
        }
      ],
      "classes": [],
      "imports": [
        "os",
        "pathlib",
        "dotenv",
        "traceback"
      ],
      "keywords": [
        "api",
        "password",
        "database",
        "error"
      ]
    },
    "backend/queen-ai/manage.py": {
      "type": "python",
      "size": 12434,
      "lines": 377,
      "functions": [
        {
          "name": "__init__",
          "line": 33,
          "docstring": null,
          "args": [
            "self"
          ]
        },
        {
          "name": "_run_command",
          "line": 218,
          "docstring": "Run command and return exit code",
          "args": [
            "self",
            "cmd"
          ]
        },
        {
          "name": "print_help",
          "line": 229,
          "docstring": "Print help message",
          "args": [
            "self"
          ]
        }
      ],
      "classes": [
        {
          "name": "SystemManager",
          "line": 30,
          "docstring": "Master system management interface",
          "methods": [
            "__init__",
            "_run_command",
            "print_help"
          ]
        }
      ],
      "imports": [
        "asyncio",
        "sys",
        "subprocess",
        "pathlib",
        "typing",
        "argparse",
        "structlog"
      ],
      "keywords": [
        "database",
        "error"
      ]
    },
    "backend/queen-ai/simple_bee_test.py": {
      "type": "python",
      "size": 10748,
      "lines": 295,
      "functions": [
        {
          "name": "print_header",
          "line": 33,
          "docstring": null,
          "args": [
            "title"
          ]
        },
        {
          "name": "print_test",
          "line": 39,
          "docstring": null,
          "args": [
            "name"
          ]
        },
        {
          "name": "print_result",
          "line": 43,
          "docstring": null,
          "args": [
            "key",
            "value"
          ]
        },
        {
          "name": "info",
          "line": 13,
          "docstring": null,
          "args": [
            "self"
          ]
        },
        {
          "name": "debug",
          "line": 14,
          "docstring": null,
          "args": [
            "self"
          ]
        },
        {
          "name": "warning",
          "line": 15,
          "docstring": null,
          "args": [
            "self"
          ]
        },
        {
          "name": "error",
          "line": 16,
          "docstring": null,
          "args": [
            "self"
          ]
        },
        {
          "name": "get_logger",
          "line": 20,
          "docstring": null,
          "args": [
            "name"
          ]
        }
      ],
      "classes": [
        {
          "name": "MockLogger",
          "line": 12,
          "docstring": null,
          "methods": [
            "info",
            "debug",
            "warning",
            "error"
          ]
        },
        {
          "name": "MockStructlog",
          "line": 18,
          "docstring": null,
          "methods": [
            "get_logger"
          ]
        }
      ],
      "imports": [
        "asyncio",
        "sys",
        "pathlib",
        "datetime",
        "app.bees.maths_bee",
        "app.bees.security_bee",
        "app.bees.data_bee",
        "app.bees.treasury_bee",
        "app.bees.manager",
        "traceback"
      ],
      "keywords": [
        "error",
        "token",
        "security",
        "transaction",
        "query",
        "validation"
      ]
    },
    "backend/queen-ai/main.py": {
      "type": "python",
      "size": 4985,
      "lines": 158,
      "functions": [
        {
          "name": "create_app",
          "line": 70,
          "docstring": "Create and configure the FastAPI application.",
          "args": []
        }
      ],
      "classes": [],
      "imports": [
        "asyncio",
        "contextlib",
        "fastapi",
        "fastapi.middleware.cors",
        "dotenv",
        "app.config.settings",
        "app.config.logging_config",
        "app.core.orchestrator",
        "app.database.connection",
        "sqlalchemy",
        "app.api.v1",
        "app.api.v1.auth",
        "uvicorn",
        "os",
        "app.database.connection"
      ],
      "keywords": [
        "api",
        "database",
        "auth(?:entication|orization)?"
      ]
    },
    "backend/queen-ai/status.py": {
      "type": "python",
      "size": 9768,
      "lines": 298,
      "functions": [
        {
          "name": "__init__",
          "line": 28,
          "docstring": null,
          "args": [
            "self",
            "refresh_interval"
          ]
        },
        {
          "name": "clear_screen",
          "line": 32,
          "docstring": "Clear terminal screen",
          "args": [
            "self"
          ]
        },
        {
          "name": "_create_bar",
          "line": 184,
          "docstring": "Create progress bar",
          "args": [
            "self",
            "percentage",
            "width"
          ]
        },
        {
          "name": "_get_color",
          "line": 190,
          "docstring": "Get color code based on percentage",
          "args": [
            "self",
            "percentage"
          ]
        }
      ],
      "classes": [
        {
          "name": "StatusDashboard",
          "line": 25,
          "docstring": "Real-time system status dashboard",
          "methods": [
            "__init__",
            "clear_screen",
            "_create_bar",
            "_get_color"
          ]
        }
      ],
      "imports": [
        "asyncio",
        "sys",
        "os",
        "pathlib",
        "datetime",
        "argparse",
        "structlog",
        "psutil",
        "app.db.base",
        "sqlalchemy",
        "app.core.redis_message_bus",
        "app.llm.abstraction",
        "app.config.settings",
        "app.bees.manager",
        "httpx",
        "app.llm.abstraction",
        "app.db.base"
      ],
      "keywords": [
        "api",
        "database",
        "error"
      ]
    },
    "backend/queen-ai/app/__init__.py": {
      "type": "python",
      "size": 29,
      "lines": 2,
      "functions": [],
      "classes": [],
      "imports": [],
      "keywords": []
    },
    "backend/queen-ai/integration_tests/test_blockchain_integration.py": {
      "type": "python",
      "size": 12054,
      "lines": 338,
      "functions": [
        {
          "name": "__init__",
          "line": 43,
          "docstring": null,
          "args": [
            "self"
          ]
        },
        {
          "name": "_check_requirements",
          "line": 52,
          "docstring": "Check if we have necessary configuration",
          "args": [
            "self"
          ]
        },
        {
          "name": "print_header",
          "line": 61,
          "docstring": null,
          "args": [
            "self",
            "title"
          ]
        },
        {
          "name": "record_pass",
          "line": 66,
          "docstring": null,
          "args": [
            "self",
            "test_name"
          ]
        },
        {
          "name": "record_fail",
          "line": 70,
          "docstring": null,
          "args": [
            "self",
            "test_name",
            "error"
          ]
        },
        {
          "name": "record_skip",
          "line": 75,
          "docstring": null,
          "args": [
            "self",
            "test_name",
            "reason"
          ]
        },
        {
          "name": "print_summary",
          "line": 278,
          "docstring": "Print test summary",
          "args": [
            "self"
          ]
        }
      ],
      "classes": [
        {
          "name": "BlockchainIntegrationTests",
          "line": 40,
          "docstring": "Real blockchain integration tests",
          "methods": [
            "__init__",
            "_check_requirements",
            "print_header",
            "record_pass",
            "record_fail",
            "record_skip",
            "print_summary"
          ]
        }
      ],
      "imports": [
        "asyncio",
        "sys",
        "os",
        "pathlib",
        "pytest",
        "web3",
        "eth_account",
        "app.config.settings"
      ],
      "keywords": [
        "api",
        "error",
        "wallet",
        "token",
        "transaction",
        "query"
      ]
    },
    "backend/queen-ai/integration_tests/__init__.py": {
      "type": "python",
      "size": 273,
      "lines": 13,
      "functions": [],
      "classes": [],
      "imports": [],
      "keywords": [
        "database"
      ]
    },
    "backend/queen-ai/integration_tests/test_llm_integration.py": {
      "type": "python",
      "size": 11954,
      "lines": 357,
      "functions": [
        {
          "name": "__init__",
          "line": 37,
          "docstring": null,
          "args": [
            "self"
          ]
        },
        {
          "name": "print_header",
          "line": 44,
          "docstring": null,
          "args": [
            "self",
            "title"
          ]
        },
        {
          "name": "record_pass",
          "line": 49,
          "docstring": null,
          "args": [
            "self",
            "test_name"
          ]
        },
        {
          "name": "record_fail",
          "line": 53,
          "docstring": null,
          "args": [
            "self",
            "test_name",
            "error"
          ]
        },
        {
          "name": "record_skip",
          "line": 58,
          "docstring": null,
          "args": [
            "self",
            "test_name",
            "reason"
          ]
        },
        {
          "name": "print_summary",
          "line": 278,
          "docstring": "Print test summary",
          "args": [
            "self"
          ]
        }
      ],
      "classes": [
        {
          "name": "LLMIntegrationTests",
          "line": 34,
          "docstring": "Real LLM API integration tests",
          "methods": [
            "__init__",
            "print_header",
            "record_pass",
            "record_fail",
            "record_skip",
            "print_summary"
          ]
        }
      ],
      "imports": [
        "asyncio",
        "sys",
        "os",
        "pathlib",
        "app.llm.abstraction",
        "app.config.settings"
      ],
      "keywords": [
        "api",
        "error"
      ]
    },
    "backend/queen-ai/tests/test_bees.py": {
      "type": "python",
      "size": 15115,
      "lines": 429,
      "functions": [],
      "classes": [
        {
          "name": "TestMathsBee",
          "line": 14,
          "docstring": "Test MathsBee calculations",
          "methods": []
        },
        {
          "name": "TestSecurityBee",
          "line": 69,
          "docstring": "Test SecurityBee validation",
          "methods": []
        },
        {
          "name": "TestDataBee",
          "line": 144,
          "docstring": "Test DataBee queries",
          "methods": []
        },
        {
          "name": "TestTreasuryBee",
          "line": 195,
          "docstring": "Test TreasuryBee operations",
          "methods": []
        },
        {
          "name": "TestBeeManager",
          "line": 259,
          "docstring": "Test BeeManager coordination",
          "methods": []
        },
        {
          "name": "TestInterBeeCoordination",
          "line": 314,
          "docstring": "Test coordination between multiple bees",
          "methods": []
        }
      ],
      "imports": [
        "pytest",
        "asyncio",
        "app.bees.maths_bee",
        "app.bees.security_bee",
        "app.bees.data_bee",
        "app.bees.treasury_bee",
        "app.bees.manager",
        "sys"
      ],
      "keywords": [
        "error",
        "token",
        "security",
        "query",
        "validation"
      ]
    },
    "backend/queen-ai/tests/test_database.py": {
      "type": "python",
      "size": 7113,
      "lines": 227,
      "functions": [
        {
          "name": "db_session",
          "line": 13,
          "docstring": "Create test database session",
          "args": []
        },
        {
          "name": "test_database_connection",
          "line": 28,
          "docstring": "Test that database connection works",
          "args": [
            "self"
          ]
        },
        {
          "name": "test_tables_exist",
          "line": 40,
          "docstring": "Test that all tables are created",
          "args": [
            "self",
            "db_session"
          ]
        },
        {
          "name": "test_create_user",
          "line": 63,
          "docstring": "Test creating a new user",
          "args": [
            "self",
            "db_session"
          ]
        },
        {
          "name": "test_query_user_by_email",
          "line": 86,
          "docstring": "Test querying user by email",
          "args": [
            "self",
            "db_session"
          ]
        },
        {
          "name": "test_query_demo_users",
          "line": 96,
          "docstring": "Test that demo users exist",
          "args": [
            "self",
            "db_session"
          ]
        },
        {
          "name": "test_create_otc_request",
          "line": 109,
          "docstring": "Test creating OTC request",
          "args": [
            "self",
            "db_session"
          ]
        },
        {
          "name": "test_query_system_config",
          "line": 137,
          "docstring": "Test querying system configuration",
          "args": [
            "self",
            "db_session"
          ]
        },
        {
          "name": "test_password_hashing",
          "line": 155,
          "docstring": "Test password hashing and verification",
          "args": [
            "self"
          ]
        },
        {
          "name": "test_jwt_token_creation",
          "line": 164,
          "docstring": "Test JWT token creation",
          "args": [
            "self"
          ]
        },
        {
          "name": "test_jwt_token_decoding",
          "line": 173,
          "docstring": "Test JWT token decoding",
          "args": [
            "self"
          ]
        },
        {
          "name": "test_invalid_token_decoding",
          "line": 184,
          "docstring": "Test decoding invalid token",
          "args": [
            "self"
          ]
        },
        {
          "name": "test_user_otc_relation",
          "line": 194,
          "docstring": "Test linking OTC request to user",
          "args": [
            "self",
            "db_session"
          ]
        }
      ],
      "classes": [
        {
          "name": "TestDatabaseConnection",
          "line": 25,
          "docstring": "Test database connection",
          "methods": [
            "test_database_connection",
            "test_tables_exist"
          ]
        },
        {
          "name": "TestUserModel",
          "line": 60,
          "docstring": "Test User model CRUD operations",
          "methods": [
            "test_create_user",
            "test_query_user_by_email",
            "test_query_demo_users"
          ]
        },
        {
          "name": "TestOTCRequestModel",
          "line": 106,
          "docstring": "Test OTC Request model",
          "methods": [
            "test_create_otc_request"
          ]
        },
        {
          "name": "TestSystemConfigModel",
          "line": 134,
          "docstring": "Test System Config model",
          "methods": [
            "test_query_system_config"
          ]
        },
        {
          "name": "TestAuthentication",
          "line": 152,
          "docstring": "Test authentication functions",
          "methods": [
            "test_password_hashing",
            "test_jwt_token_creation",
            "test_jwt_token_decoding",
            "test_invalid_token_decoding"
          ]
        },
        {
          "name": "TestDatabaseRelations",
          "line": 191,
          "docstring": "Test database relationships",
          "methods": [
            "test_user_otc_relation"
          ]
        }
      ],
      "imports": [
        "pytest",
        "sqlalchemy.orm",
        "datetime",
        "app.database.connection",
        "app.database.models",
        "app.database.auth",
        "sqlalchemy",
        "sqlalchemy"
      ],
      "keywords": [
        "database",
        "password",
        "token",
        "query",
        "user",
        "auth(?:entication|orization)?"
      ]
    },
    "backend/queen-ai/tests/__init__.py": {
      "type": "python",
      "size": 21,
      "lines": 2,
      "functions": [],
      "classes": [],
      "imports": [],
      "keywords": []
    },
    "backend/queen-ai/tests/test_integration.py": {
      "type": "python",
      "size": 7796,
      "lines": 246,
      "functions": [
        {
          "name": "test_db",
          "line": 21,
          "docstring": "Setup test database",
          "args": []
        },
        {
          "name": "test_database_initialized_on_startup",
          "line": 31,
          "docstring": "Test that database tables exist when app starts",
          "args": [
            "self"
          ]
        },
        {
          "name": "test_seeded_data_exists",
          "line": 41,
          "docstring": "Test that seeded data is available",
          "args": [
            "self",
            "test_db"
          ]
        },
        {
          "name": "test_otc_request_saved_to_database",
          "line": 60,
          "docstring": "Test that OTC requests are saved to database",
          "args": [
            "self",
            "test_db"
          ]
        },
        {
          "name": "test_whale_purchase_flagged",
          "line": 95,
          "docstring": "Test that whale purchases are flagged for approval",
          "args": [
            "self",
            "test_db"
          ]
        },
        {
          "name": "test_login_creates_session",
          "line": 130,
          "docstring": "Test that login updates last_login in database",
          "args": [
            "self"
          ]
        },
        {
          "name": "test_new_user_registration_in_database",
          "line": 159,
          "docstring": "Test that registration creates user in database",
          "args": [
            "self"
          ]
        },
        {
          "name": "test_health_endpoint_returns_200",
          "line": 193,
          "docstring": "Test health check endpoint",
          "args": [
            "self"
          ]
        },
        {
          "name": "test_database_session_cleanup",
          "line": 206,
          "docstring": "Test that database sessions are properly closed",
          "args": [
            "self"
          ]
        },
        {
          "name": "test_admin_user_has_admin_role",
          "line": 229,
          "docstring": "Test that admin user has correct role",
          "args": [
            "self",
            "test_db"
          ]
        },
        {
          "name": "test_demo_users_have_user_role",
          "line": 236,
          "docstring": "Test that demo users have user role",
          "args": [
            "self",
            "test_db"
          ]
        }
      ],
      "classes": [
        {
          "name": "TestDatabaseIntegration",
          "line": 28,
          "docstring": "Test that database is properly integrated into the app",
          "methods": [
            "test_database_initialized_on_startup",
            "test_seeded_data_exists"
          ]
        },
        {
          "name": "TestOTCFlowIntegration",
          "line": 57,
          "docstring": "Test complete OTC purchase flow with database",
          "methods": [
            "test_otc_request_saved_to_database",
            "test_whale_purchase_flagged"
          ]
        },
        {
          "name": "TestUserAuthenticationIntegration",
          "line": 127,
          "docstring": "Test authentication with database",
          "methods": [
            "test_login_creates_session",
            "test_new_user_registration_in_database"
          ]
        },
        {
          "name": "TestHealthCheck",
          "line": 190,
          "docstring": "Test health check endpoint",
          "methods": [
            "test_health_endpoint_returns_200"
          ]
        },
        {
          "name": "TestDatabaseConnectionResilience",
          "line": 203,
          "docstring": "Test database connection handling",
          "methods": [
            "test_database_session_cleanup"
          ]
        },
        {
          "name": "TestRoleBasedAccess",
          "line": 226,
          "docstring": "Test role-based access control",
          "methods": [
            "test_admin_user_has_admin_role",
            "test_demo_users_have_user_role"
          ]
        }
      ],
      "imports": [
        "pytest",
        "fastapi.testclient",
        "sqlalchemy.orm",
        "datetime",
        "time",
        "sys",
        "main",
        "app.database.connection",
        "app.database.models"
      ],
      "keywords": [
        "api",
        "database",
        "error",
        "password",
        "login",
        "query",
        "user",
        "auth(?:entication|orization)?"
      ]
    },
    "backend/queen-ai/tests/test_auth_endpoints.py": {
      "type": "python",
      "size": 7733,
      "lines": 253,
      "functions": [
        {
          "name": "test_db",
          "line": 20,
          "docstring": "Setup test database",
          "args": []
        },
        {
          "name": "test_admin_login_success",
          "line": 30,
          "docstring": "Test successful admin login",
          "args": [
            "self"
          ]
        },
        {
          "name": "test_demo_user_login_success",
          "line": 49,
          "docstring": "Test successful demo user login",
          "args": [
            "self"
          ]
        },
        {
          "name": "test_login_wrong_password",
          "line": 67,
          "docstring": "Test login with wrong password",
          "args": [
            "self"
          ]
        },
        {
          "name": "test_login_nonexistent_user",
          "line": 80,
          "docstring": "Test login with non-existent user",
          "args": [
            "self"
          ]
        },
        {
          "name": "test_register_new_user",
          "line": 95,
          "docstring": "Test successful user registration",
          "args": [
            "self"
          ]
        },
        {
          "name": "test_register_duplicate_email",
          "line": 114,
          "docstring": "Test registration with existing email",
          "args": [
            "self"
          ]
        },
        {
          "name": "test_get_current_user_with_valid_token",
          "line": 131,
          "docstring": "Test getting current user with valid token",
          "args": [
            "self"
          ]
        },
        {
          "name": "test_get_current_user_without_token",
          "line": 157,
          "docstring": "Test getting current user without token",
          "args": [
            "self"
          ]
        },
        {
          "name": "test_get_current_user_with_invalid_token",
          "line": 163,
          "docstring": "Test getting current user with invalid token",
          "args": [
            "self"
          ]
        },
        {
          "name": "test_logout_with_valid_token",
          "line": 175,
          "docstring": "Test logout with valid token",
          "args": [
            "self"
          ]
        },
        {
          "name": "test_complete_flow",
          "line": 200,
          "docstring": "Test complete auth flow: register -> login -> get user -> logout",
          "args": [
            "self"
          ]
        }
      ],
      "classes": [
        {
          "name": "TestLoginEndpoint",
          "line": 27,
          "docstring": "Test login endpoint",
          "methods": [
            "test_admin_login_success",
            "test_demo_user_login_success",
            "test_login_wrong_password",
            "test_login_nonexistent_user"
          ]
        },
        {
          "name": "TestRegisterEndpoint",
          "line": 92,
          "docstring": "Test registration endpoint",
          "methods": [
            "test_register_new_user",
            "test_register_duplicate_email"
          ]
        },
        {
          "name": "TestGetCurrentUserEndpoint",
          "line": 128,
          "docstring": "Test get current user endpoint",
          "methods": [
            "test_get_current_user_with_valid_token",
            "test_get_current_user_without_token",
            "test_get_current_user_with_invalid_token"
          ]
        },
        {
          "name": "TestLogoutEndpoint",
          "line": 172,
          "docstring": "Test logout endpoint",
          "methods": [
            "test_logout_with_valid_token"
          ]
        },
        {
          "name": "TestAuthenticationFlow",
          "line": 197,
          "docstring": "Test complete authentication flow",
          "methods": [
            "test_complete_flow"
          ]
        }
      ],
      "imports": [
        "pytest",
        "fastapi.testclient",
        "sqlalchemy.orm",
        "sys",
        "main",
        "app.database.connection",
        "app.database.models",
        "datetime",
        "time"
      ],
      "keywords": [
        "api",
        "database",
        "password",
        "login",
        "token",
        "user",
        "auth(?:entication|orization)?"
      ]
    },
    "backend/queen-ai/alembic/env.py": {
      "type": "python",
      "size": 2098,
      "lines": 82,
      "functions": [
        {
          "name": "run_migrations_offline",
          "line": 34,
          "docstring": "Run migrations in 'offline' mode.\n\nThis configures the context with just a URL\nand not an Engine, though an Engine is acceptable\nhere as well. By skipping the Engine creation\nwe don't even need a DBAPI to be available.",
          "args": []
        },
        {
          "name": "run_migrations_online",
          "line": 55,
          "docstring": "Run migrations in 'online' mode.\n\nIn this scenario we need to create an Engine\nand associate a connection with the context.",
          "args": []
        }
      ],
      "classes": [],
      "imports": [
        "logging.config",
        "sqlalchemy",
        "alembic",
        "sys",
        "pathlib",
        "app.config.settings",
        "app.db.base",
        "app.db"
      ],
      "keywords": [
        "database"
      ]
    },
    "backend/queen-ai/tests/security/test_output_filter.py": {
      "type": "python",
      "size": 13308,
      "lines": 333,
      "functions": [
        {
          "name": "output_filter",
          "line": 14,
          "docstring": "Create an OutputFilter instance",
          "args": [
            "self"
          ]
        },
        {
          "name": "test_redact_openai_key",
          "line": 20,
          "docstring": "Test OpenAI API key redaction",
          "args": [
            "self",
            "output_filter"
          ]
        },
        {
          "name": "test_redact_anthropic_key",
          "line": 27,
          "docstring": "Test Anthropic API key redaction",
          "args": [
            "self",
            "output_filter"
          ]
        },
        {
          "name": "test_redact_google_key",
          "line": 34,
          "docstring": "Test Google API key redaction",
          "args": [
            "self",
            "output_filter"
          ]
        },
        {
          "name": "test_redact_jwt_token",
          "line": 41,
          "docstring": "Test JWT token redaction",
          "args": [
            "self",
            "output_filter"
          ]
        },
        {
          "name": "test_redact_private_key_header",
          "line": 48,
          "docstring": "Test private key header redaction",
          "args": [
            "self",
            "output_filter"
          ]
        },
        {
          "name": "test_redact_ethereum_private_key",
          "line": 55,
          "docstring": "Test Ethereum private key redaction",
          "args": [
            "self",
            "output_filter"
          ]
        },
        {
          "name": "test_multiple_secrets",
          "line": 62,
          "docstring": "Test redaction of multiple secret types",
          "args": [
            "self",
            "output_filter"
          ]
        },
        {
          "name": "test_mask_email",
          "line": 76,
          "docstring": "Test email address masking",
          "args": [
            "self",
            "output_filter"
          ]
        },
        {
          "name": "test_mask_credit_card",
          "line": 84,
          "docstring": "Test credit card masking",
          "args": [
            "self",
            "output_filter"
          ]
        },
        {
          "name": "test_mask_ssn",
          "line": 91,
          "docstring": "Test SSN masking",
          "args": [
            "self",
            "output_filter"
          ]
        },
        {
          "name": "test_detect_rm_rf",
          "line": 100,
          "docstring": "Test detection of rm -rf",
          "args": [
            "self",
            "output_filter"
          ]
        },
        {
          "name": "test_detect_eval",
          "line": 107,
          "docstring": "Test detection of eval()",
          "args": [
            "self",
            "output_filter"
          ]
        },
        {
          "name": "test_detect_exec",
          "line": 114,
          "docstring": "Test detection of exec()",
          "args": [
            "self",
            "output_filter"
          ]
        },
        {
          "name": "test_detect_subprocess",
          "line": 121,
          "docstring": "Test detection of subprocess",
          "args": [
            "self",
            "output_filter"
          ]
        },
        {
          "name": "test_detect_sql_drop",
          "line": 128,
          "docstring": "Test detection of SQL DROP",
          "args": [
            "self",
            "output_filter"
          ]
        },
        {
          "name": "test_safe_code",
          "line": 135,
          "docstring": "Test that safe code is not flagged",
          "args": [
            "self",
            "output_filter"
          ]
        },
        {
          "name": "test_validate_safe_code_proposal",
          "line": 147,
          "docstring": "Test validation of safe code proposal",
          "args": [
            "self",
            "output_filter"
          ]
        },
        {
          "name": "test_validate_malicious_code_proposal",
          "line": 157,
          "docstring": "Test validation of malicious code proposal",
          "args": [
            "self",
            "output_filter"
          ]
        },
        {
          "name": "test_validate_code_with_secrets",
          "line": 164,
          "docstring": "Test code proposal containing secrets",
          "args": [
            "self",
            "output_filter"
          ]
        },
        {
          "name": "test_filter_response_with_secrets",
          "line": 177,
          "docstring": "Test filtering response containing secrets",
          "args": [
            "self",
            "output_filter"
          ]
        },
        {
          "name": "test_filter_response_with_pii",
          "line": 184,
          "docstring": "Test filtering response with PII",
          "args": [
            "self",
            "output_filter"
          ]
        },
        {
          "name": "test_filter_response_no_pii_masking",
          "line": 190,
          "docstring": "Test filtering without PII masking (for admins)",
          "args": [
            "self",
            "output_filter"
          ]
        },
        {
          "name": "test_validate_safety_clean_text",
          "line": 198,
          "docstring": "Test safety validation of clean text",
          "args": [
            "self",
            "output_filter"
          ]
        },
        {
          "name": "test_validate_safety_with_secrets",
          "line": 205,
          "docstring": "Test safety validation catches secrets",
          "args": [
            "self",
            "output_filter"
          ]
        },
        {
          "name": "test_validate_safety_strict_mode",
          "line": 212,
          "docstring": "Test strict mode catches system paths",
          "args": [
            "self",
            "output_filter"
          ]
        },
        {
          "name": "test_statistics_tracking",
          "line": 224,
          "docstring": "Test that statistics are tracked",
          "args": [
            "self",
            "output_filter"
          ]
        },
        {
          "name": "test_reset_statistics",
          "line": 237,
          "docstring": "Test statistics reset",
          "args": [
            "self",
            "output_filter"
          ]
        },
        {
          "name": "test_empty_text",
          "line": 251,
          "docstring": "Test filtering empty text",
          "args": [
            "self",
            "output_filter"
          ]
        },
        {
          "name": "test_none_text",
          "line": 256,
          "docstring": "Test handling of None",
          "args": [
            "self",
            "output_filter"
          ]
        },
        {
          "name": "test_very_long_text",
          "line": 261,
          "docstring": "Test filtering very long text",
          "args": [
            "self",
            "output_filter"
          ]
        },
        {
          "name": "test_multiple_same_secret",
          "line": 269,
          "docstring": "Test multiple occurrences of same secret",
          "args": [
            "self",
            "output_filter"
          ]
        },
        {
          "name": "output_filter",
          "line": 286,
          "docstring": null,
          "args": [
            "self"
          ]
        },
        {
          "name": "test_full_filtering_workflow",
          "line": 289,
          "docstring": "Test complete filtering workflow",
          "args": [
            "self",
            "output_filter"
          ]
        },
        {
          "name": "test_code_proposal_full_check",
          "line": 308,
          "docstring": "Test full code proposal validation",
          "args": [
            "self",
            "output_filter"
          ]
        }
      ],
      "classes": [
        {
          "name": "TestOutputFilter",
          "line": 10,
          "docstring": "Test suite for OutputFilter",
          "methods": [
            "output_filter",
            "test_redact_openai_key",
            "test_redact_anthropic_key",
            "test_redact_google_key",
            "test_redact_jwt_token",
            "test_redact_private_key_header",
            "test_redact_ethereum_private_key",
            "test_multiple_secrets",
            "test_mask_email",
            "test_mask_credit_card",
            "test_mask_ssn",
            "test_detect_rm_rf",
            "test_detect_eval",
            "test_detect_exec",
            "test_detect_subprocess",
            "test_detect_sql_drop",
            "test_safe_code",
            "test_validate_safe_code_proposal",
            "test_validate_malicious_code_proposal",
            "test_validate_code_with_secrets",
            "test_filter_response_with_secrets",
            "test_filter_response_with_pii",
            "test_filter_response_no_pii_masking",
            "test_validate_safety_clean_text",
            "test_validate_safety_with_secrets",
            "test_validate_safety_strict_mode",
            "test_statistics_tracking",
            "test_reset_statistics",
            "test_empty_text",
            "test_none_text",
            "test_very_long_text",
            "test_multiple_same_secret"
          ]
        },
        {
          "name": "TestOutputFilterIntegration",
          "line": 282,
          "docstring": "Integration tests for OutputFilter",
          "methods": [
            "output_filter",
            "test_full_filtering_workflow",
            "test_code_proposal_full_check"
          ]
        }
      ],
      "imports": [
        "pytest",
        "app.core.security.output_filter"
      ],
      "keywords": [
        "api",
        "token",
        "security",
        "query",
        "user",
        "auth(?:entication|orization)?",
        "validation"
      ]
    },
    "backend/queen-ai/tests/security/__init__.py": {
      "type": "python",
      "size": 30,
      "lines": 4,
      "functions": [],
      "classes": [],
      "imports": [],
      "keywords": [
        "security"
      ]
    },
    "backend/queen-ai/tests/security/test_prompt_protection.py": {
      "type": "python",
      "size": 12975,
      "lines": 331,
      "functions": [
        {
          "name": "protection_gate",
          "line": 14,
          "docstring": "Create a PromptProtectionGate instance",
          "args": [
            "self"
          ]
        },
        {
          "name": "test_sanitize_normal_text",
          "line": 20,
          "docstring": "Test that normal text passes through unchanged",
          "args": [
            "self",
            "protection_gate"
          ]
        },
        {
          "name": "test_remove_invisible_unicode",
          "line": 26,
          "docstring": "Test removal of invisible Unicode characters",
          "args": [
            "self",
            "protection_gate"
          ]
        },
        {
          "name": "test_normalize_whitespace",
          "line": 34,
          "docstring": "Test excessive whitespace normalization",
          "args": [
            "self",
            "protection_gate"
          ]
        },
        {
          "name": "test_detect_invisible_chars",
          "line": 42,
          "docstring": "Test detection of invisible Unicode characters",
          "args": [
            "self",
            "protection_gate"
          ]
        },
        {
          "name": "test_no_invisible_chars",
          "line": 50,
          "docstring": "Test that normal text has no invisible characters",
          "args": [
            "self",
            "protection_gate"
          ]
        },
        {
          "name": "test_detect_instruction_override",
          "line": 58,
          "docstring": "Test detection of instruction override attempts",
          "args": [
            "self",
            "protection_gate"
          ]
        },
        {
          "name": "test_detect_jailbreak",
          "line": 72,
          "docstring": "Test detection of jailbreak attempts",
          "args": [
            "self",
            "protection_gate"
          ]
        },
        {
          "name": "test_detect_info_extraction",
          "line": 87,
          "docstring": "Test detection of information extraction attempts",
          "args": [
            "self",
            "protection_gate"
          ]
        },
        {
          "name": "test_detect_context_poison",
          "line": 101,
          "docstring": "Test detection of context poisoning attempts",
          "args": [
            "self",
            "protection_gate"
          ]
        },
        {
          "name": "test_detect_code_execution",
          "line": 114,
          "docstring": "Test detection of code execution attempts",
          "args": [
            "self",
            "protection_gate"
          ]
        },
        {
          "name": "test_legitimate_questions",
          "line": 129,
          "docstring": "Test that legitimate questions pass through",
          "args": [
            "self",
            "protection_gate"
          ]
        },
        {
          "name": "test_technical_questions",
          "line": 144,
          "docstring": "Test technical questions don't trigger false positives",
          "args": [
            "self",
            "protection_gate"
          ]
        },
        {
          "name": "test_strict_mode_lower_threshold",
          "line": 159,
          "docstring": "Test that strict mode has lower thresholds",
          "args": [
            "self",
            "protection_gate"
          ]
        },
        {
          "name": "test_risk_score_capped_at_100",
          "line": 173,
          "docstring": "Test that risk scores don't exceed 100",
          "args": [
            "self",
            "protection_gate"
          ]
        },
        {
          "name": "test_risk_score_increases_with_invisible_chars",
          "line": 180,
          "docstring": "Test that invisible characters increase risk score",
          "args": [
            "self",
            "protection_gate"
          ]
        },
        {
          "name": "test_statistics_tracking",
          "line": 192,
          "docstring": "Test that statistics are tracked correctly",
          "args": [
            "self",
            "protection_gate"
          ]
        },
        {
          "name": "test_reset_statistics",
          "line": 205,
          "docstring": "Test statistics reset",
          "args": [
            "self",
            "protection_gate"
          ]
        },
        {
          "name": "test_unicode_normalization",
          "line": 219,
          "docstring": "Test Unicode normalization",
          "args": [
            "self",
            "protection_gate"
          ]
        },
        {
          "name": "test_empty_string",
          "line": 232,
          "docstring": "Test handling of empty string",
          "args": [
            "self",
            "protection_gate"
          ]
        },
        {
          "name": "test_very_long_text",
          "line": 238,
          "docstring": "Test handling of very long text",
          "args": [
            "self",
            "protection_gate"
          ]
        },
        {
          "name": "test_special_characters",
          "line": 245,
          "docstring": "Test that special characters don't cause issues",
          "args": [
            "self",
            "protection_gate"
          ]
        },
        {
          "name": "test_case_insensitive_matching",
          "line": 253,
          "docstring": "Test that pattern matching is case-insensitive",
          "args": [
            "self",
            "protection_gate"
          ]
        },
        {
          "name": "test_multiple_patterns",
          "line": 265,
          "docstring": "Test detection of multiple patterns in same text",
          "args": [
            "self",
            "protection_gate"
          ]
        },
        {
          "name": "protection_gate",
          "line": 281,
          "docstring": null,
          "args": [
            "self"
          ]
        },
        {
          "name": "test_full_workflow",
          "line": 284,
          "docstring": "Test complete workflow: sanitize \u2192 detect \u2192 score",
          "args": [
            "self",
            "protection_gate"
          ]
        },
        {
          "name": "test_benign_workflow",
          "line": 301,
          "docstring": "Test workflow with benign input",
          "args": [
            "self",
            "protection_gate"
          ]
        },
        {
          "name": "test_performance",
          "line": 314,
          "docstring": "Test that detection is fast enough",
          "args": [
            "self",
            "protection_gate"
          ]
        }
      ],
      "classes": [
        {
          "name": "TestPromptProtectionGate",
          "line": 10,
          "docstring": "Test suite for PromptProtectionGate",
          "methods": [
            "protection_gate",
            "test_sanitize_normal_text",
            "test_remove_invisible_unicode",
            "test_normalize_whitespace",
            "test_detect_invisible_chars",
            "test_no_invisible_chars",
            "test_detect_instruction_override",
            "test_detect_jailbreak",
            "test_detect_info_extraction",
            "test_detect_context_poison",
            "test_detect_code_execution",
            "test_legitimate_questions",
            "test_technical_questions",
            "test_strict_mode_lower_threshold",
            "test_risk_score_capped_at_100",
            "test_risk_score_increases_with_invisible_chars",
            "test_statistics_tracking",
            "test_reset_statistics",
            "test_unicode_normalization",
            "test_empty_string",
            "test_very_long_text",
            "test_special_characters",
            "test_case_insensitive_matching",
            "test_multiple_patterns"
          ]
        },
        {
          "name": "TestPromptProtectionIntegration",
          "line": 277,
          "docstring": "Integration tests for PromptProtectionGate",
          "methods": [
            "protection_gate",
            "test_full_workflow",
            "test_benign_workflow",
            "test_performance"
          ]
        }
      ],
      "imports": [
        "pytest",
        "app.core.security.prompt_protection",
        "time"
      ],
      "keywords": [
        "api",
        "security",
        "token"
      ]
    },
    "backend/queen-ai/app/database/auth.py": {
      "type": "python",
      "size": 3584,
      "lines": 112,
      "functions": [
        {
          "name": "verify_password",
          "line": 24,
          "docstring": "Verify password against hash",
          "args": [
            "plain_password",
            "hashed_password"
          ]
        },
        {
          "name": "get_password_hash",
          "line": 28,
          "docstring": "Hash password",
          "args": [
            "password"
          ]
        },
        {
          "name": "create_access_token",
          "line": 35,
          "docstring": "Create JWT access token",
          "args": [
            "data",
            "expires_delta"
          ]
        },
        {
          "name": "decode_token",
          "line": 46,
          "docstring": "Decode and validate JWT token",
          "args": [
            "token"
          ]
        },
        {
          "name": "authenticate_user",
          "line": 104,
          "docstring": "Authenticate user with email and password",
          "args": [
            "db",
            "email",
            "password"
          ]
        }
      ],
      "classes": [],
      "imports": [
        "bcrypt",
        "jose",
        "datetime",
        "typing",
        "fastapi",
        "fastapi.security",
        "sqlalchemy.orm",
        "os",
        "connection",
        "models"
      ],
      "keywords": [
        "password",
        "token",
        "security",
        "query",
        "user",
        "auth(?:entication|orization)?"
      ]
    },
    "backend/queen-ai/app/database/models.py": {
      "type": "python",
      "size": 7407,
      "lines": 237,
      "functions": [],
      "classes": [
        {
          "name": "UserRole",
          "line": 12,
          "docstring": null,
          "methods": []
        },
        {
          "name": "OTCStatus",
          "line": 17,
          "docstring": null,
          "methods": []
        },
        {
          "name": "PaymentToken",
          "line": 24,
          "docstring": null,
          "methods": []
        },
        {
          "name": "User",
          "line": 32,
          "docstring": null,
          "methods": []
        },
        {
          "name": "OTCRequest",
          "line": 63,
          "docstring": null,
          "methods": []
        },
        {
          "name": "SystemConfig",
          "line": 101,
          "docstring": null,
          "methods": []
        },
        {
          "name": "Transaction",
          "line": 112,
          "docstring": null,
          "methods": []
        },
        {
          "name": "QueenAILog",
          "line": 141,
          "docstring": null,
          "methods": []
        },
        {
          "name": "Property",
          "line": 159,
          "docstring": null,
          "methods": []
        },
        {
          "name": "PropertyInvestment",
          "line": 196,
          "docstring": null,
          "methods": []
        },
        {
          "name": "Analytics",
          "line": 219,
          "docstring": null,
          "methods": []
        }
      ],
      "imports": [
        "sqlalchemy",
        "sqlalchemy.sql",
        "datetime",
        "enum",
        "connection"
      ],
      "keywords": [
        "user",
        "transaction",
        "database",
        "token"
      ]
    },
    "backend/queen-ai/app/database/__init__.py": {
      "type": "python",
      "size": 0,
      "lines": 1,
      "functions": [],
      "classes": [],
      "imports": [],
      "keywords": []
    },
    "backend/queen-ai/app/database/connection.py": {
      "type": "python",
      "size": 2896,
      "lines": 89,
      "functions": [
        {
          "name": "get_db",
          "line": 52,
          "docstring": "Dependency for FastAPI to get database session",
          "args": []
        },
        {
          "name": "init_db",
          "line": 62,
          "docstring": "Initialize database - create all tables",
          "args": []
        }
      ],
      "classes": [],
      "imports": [
        "sqlalchemy",
        "sqlalchemy.ext.declarative",
        "sqlalchemy.orm",
        "typing",
        "os",
        "dotenv",
        "structlog",
        "urllib.parse",
        "sqlalchemy"
      ],
      "keywords": [
        "database",
        "password",
        "error"
      ]
    },
    "backend/queen-ai/app/database/seed.py": {
      "type": "python",
      "size": 4779,
      "lines": 148,
      "functions": [
        {
          "name": "seed_users",
          "line": 10,
          "docstring": "Create admin and demo users",
          "args": [
            "db"
          ]
        },
        {
          "name": "seed_system_config",
          "line": 74,
          "docstring": "Create initial system configuration",
          "args": [
            "db"
          ]
        },
        {
          "name": "seed_all",
          "line": 142,
          "docstring": "Run all seeding",
          "args": [
            "db"
          ]
        }
      ],
      "classes": [],
      "imports": [
        "sqlalchemy.orm",
        "models",
        "auth",
        "datetime",
        "json"
      ],
      "keywords": [
        "database",
        "wallet",
        "password",
        "token",
        "query",
        "user",
        "auth(?:entication|orization)?"
      ]
    },
    "backend/queen-ai/app/database/init_db.py": {
      "type": "python",
      "size": 1075,
      "lines": 44,
      "functions": [
        {
          "name": "main",
          "line": 14,
          "docstring": null,
          "args": []
        }
      ],
      "classes": [],
      "imports": [
        "sys",
        "pathlib",
        "app.database.connection",
        "app.database.seed",
        "traceback"
      ],
      "keywords": [
        "database",
        "password",
        "login",
        "error"
      ]
    },
    "backend/queen-ai/app/tools/__init__.py": {
      "type": "python",
      "size": 241,
      "lines": 11,
      "functions": [],
      "classes": [],
      "imports": [
        "database_query_tool",
        "codebase_navigator"
      ],
      "keywords": []
    },
    "backend/queen-ai/app/tools/codebase_navigator.py": {
      "type": "python",
      "size": 16919,
      "lines": 457,
      "functions": [
        {
          "name": "__init__",
          "line": 31,
          "docstring": null,
          "args": [
            "self",
            "project_root"
          ]
        },
        {
          "name": "_load_index",
          "line": 54,
          "docstring": "Load existing index from disk",
          "args": [
            "self"
          ]
        },
        {
          "name": "_save_index",
          "line": 64,
          "docstring": "Save index to disk",
          "args": [
            "self"
          ]
        },
        {
          "name": "_extract_keywords",
          "line": 314,
          "docstring": "Extract relevant keywords from code",
          "args": [
            "self",
            "content"
          ]
        },
        {
          "name": "_calculate_relevance",
          "line": 376,
          "docstring": "Calculate relevance score for a file",
          "args": [
            "self",
            "file_path",
            "search_words"
          ]
        }
      ],
      "classes": [
        {
          "name": "CodebaseNavigator",
          "line": 20,
          "docstring": "Navigate and search the codebase intelligently\n\nFeatures:\n- Index all Python and TypeScript files\n- Find code by natural language description\n- Locate potential bug locations\n- Track file dependencies",
          "methods": [
            "__init__",
            "_load_index",
            "_save_index",
            "_extract_keywords",
            "_calculate_relevance"
          ]
        }
      ],
      "imports": [
        "os",
        "ast",
        "re",
        "structlog",
        "typing",
        "pathlib",
        "datetime",
        "json"
      ],
      "keywords": [
        "error",
        "password",
        "login",
        "auth(?:entication|orization)?",
        "validation"
      ]
    },
    "backend/queen-ai/app/tools/database_query_tool.py": {
      "type": "python",
      "size": 14825,
      "lines": 410,
      "functions": [
        {
          "name": "__init__",
          "line": 30,
          "docstring": null,
          "args": [
            "self"
          ]
        },
        {
          "name": "_get_db",
          "line": 33,
          "docstring": "Get database session",
          "args": [
            "self"
          ]
        },
        {
          "name": "close",
          "line": 39,
          "docstring": "Close database session",
          "args": [
            "self"
          ]
        },
        {
          "name": "_parse_natural_language",
          "line": 358,
          "docstring": "Parse natural language query into parameters",
          "args": [
            "self",
            "query"
          ]
        },
        {
          "name": "_extract_numbers",
          "line": 398,
          "docstring": "Extract all numbers from text",
          "args": [
            "self",
            "text"
          ]
        },
        {
          "name": "_extract_number",
          "line": 406,
          "docstring": "Extract first number from text",
          "args": [
            "self",
            "text"
          ]
        }
      ],
      "classes": [
        {
          "name": "DatabaseQueryTool",
          "line": 20,
          "docstring": "Powerful database query tool for Queen AI\n\nAllows natural language queries like:\n- \"How many female users in Tokyo with $500-$1950 in wallet?\"\n- \"Show me top 10 most active users this week\"\n- \"What's the average wallet balance by region?\"",
          "methods": [
            "__init__",
            "_get_db",
            "close",
            "_parse_natural_language",
            "_extract_numbers",
            "_extract_number"
          ]
        }
      ],
      "imports": [
        "structlog",
        "typing",
        "datetime",
        "sqlalchemy",
        "sqlalchemy.orm",
        "app.db.base",
        "app.db.models",
        "re"
      ],
      "keywords": [
        "database",
        "error",
        "wallet",
        "query",
        "user"
      ]
    },
    "backend/queen-ai/app/llm/memory.py": {
      "type": "python",
      "size": 4202,
      "lines": 121,
      "functions": [
        {
          "name": "__init__",
          "line": 24,
          "docstring": null,
          "args": [
            "self",
            "max_exchanges"
          ]
        },
        {
          "name": "_load_memory",
          "line": 30,
          "docstring": "Load memory from disk",
          "args": [
            "self"
          ]
        },
        {
          "name": "_save_memory",
          "line": 43,
          "docstring": "Save memory to disk",
          "args": [
            "self"
          ]
        },
        {
          "name": "get_context_string",
          "line": 108,
          "docstring": "Get recent exchanges as formatted string for LLM context",
          "args": [
            "self",
            "limit"
          ]
        }
      ],
      "classes": [
        {
          "name": "ConversationMemory",
          "line": 13,
          "docstring": "Persistent conversation memory that survives provider switches\n\nFeatures:\n- Stores conversation history\n- Survives LLM provider changes\n- Sliding window for context management\n- Importance-based retention",
          "methods": [
            "__init__",
            "_load_memory",
            "_save_memory",
            "get_context_string"
          ]
        }
      ],
      "imports": [
        "typing",
        "datetime",
        "json",
        "pathlib",
        "structlog"
      ],
      "keywords": [
        "user",
        "query",
        "error"
      ]
    },
    "backend/queen-ai/app/llm/abstraction.py": {
      "type": "python",
      "size": 12033,
      "lines": 344,
      "functions": [
        {
          "name": "__init__",
          "line": 44,
          "docstring": null,
          "args": [
            "self"
          ]
        },
        {
          "name": "_calculate_cost",
          "line": 287,
          "docstring": "Calculate cost for this generation",
          "args": [
            "self",
            "provider",
            "prompt",
            "response"
          ]
        },
        {
          "name": "_track_cost",
          "line": 311,
          "docstring": "Track cost metrics",
          "args": [
            "self",
            "provider",
            "cost"
          ]
        },
        {
          "name": "get_costs",
          "line": 328,
          "docstring": "Get cost tracking data",
          "args": [
            "self"
          ]
        },
        {
          "name": "get_available_providers",
          "line": 332,
          "docstring": "Get list of available providers",
          "args": [
            "self"
          ]
        }
      ],
      "classes": [
        {
          "name": "LLMProvider",
          "line": 18,
          "docstring": "Base class for LLM providers",
          "methods": []
        },
        {
          "name": "LLMAbstraction",
          "line": 32,
          "docstring": "Unified LLM interface with provider switching\n\nFeatures:\n- Multi-provider support (Gemini, OpenAI, Anthropic)\n- Seamless switching without state loss\n- Memory persistence across providers\n- Cost tracking\n- Automatic failover",
          "methods": [
            "__init__",
            "_calculate_cost",
            "_track_cost",
            "get_costs",
            "get_available_providers"
          ]
        }
      ],
      "imports": [
        "typing",
        "structlog",
        "abc",
        "app.config.settings",
        "app.llm.providers.gemini",
        "app.llm.providers.openai",
        "app.llm.providers.anthropic",
        "app.llm.memory"
      ],
      "keywords": [
        "user",
        "token",
        "error"
      ]
    },
    "backend/queen-ai/app/llm/__init__.py": {
      "type": "python",
      "size": 70,
      "lines": 4,
      "functions": [],
      "classes": [],
      "imports": [
        "abstraction"
      ],
      "keywords": []
    },
    "backend/queen-ai/app/llm/system_knowledge.py": {
      "type": "python",
      "size": 16232,
      "lines": 390,
      "functions": [
        {
          "name": "__init__",
          "line": 35,
          "docstring": null,
          "args": [
            "self",
            "knowledge_file"
          ]
        },
        {
          "name": "_load_knowledge",
          "line": 40,
          "docstring": "Load knowledge base from disk",
          "args": [
            "self"
          ]
        },
        {
          "name": "_initialize_omk_knowledge",
          "line": 55,
          "docstring": "Initialize with OMK Hive project knowledge",
          "args": [
            "self"
          ]
        },
        {
          "name": "_save_knowledge",
          "line": 226,
          "docstring": "Save knowledge base to disk",
          "args": [
            "self"
          ]
        },
        {
          "name": "get_project_structure",
          "line": 239,
          "docstring": "Get complete project structure",
          "args": [
            "self"
          ]
        },
        {
          "name": "get_frontend_info",
          "line": 243,
          "docstring": "Get frontend-specific information",
          "args": [
            "self"
          ]
        },
        {
          "name": "get_backend_info",
          "line": 247,
          "docstring": "Get backend-specific information",
          "args": [
            "self"
          ]
        },
        {
          "name": "get_theme",
          "line": 251,
          "docstring": "Get theme and styling information",
          "args": [
            "self"
          ]
        },
        {
          "name": "get_patterns",
          "line": 255,
          "docstring": "Get implementation patterns",
          "args": [
            "self"
          ]
        },
        {
          "name": "get_known_issues",
          "line": 259,
          "docstring": "Get known issues and their solutions",
          "args": [
            "self"
          ]
        },
        {
          "name": "add_implementation",
          "line": 263,
          "docstring": "Record a new implementation",
          "args": [
            "self",
            "implementation"
          ]
        },
        {
          "name": "add_correction",
          "line": 279,
          "docstring": "Record a correction/lesson learned",
          "args": [
            "self",
            "correction"
          ]
        },
        {
          "name": "add_pattern",
          "line": 292,
          "docstring": "Record a new pattern discovered",
          "args": [
            "self",
            "pattern"
          ]
        },
        {
          "name": "update_structure",
          "line": 305,
          "docstring": "Update specific knowledge path",
          "args": [
            "self",
            "path",
            "value"
          ]
        },
        {
          "name": "get_context_for_claude",
          "line": 318,
          "docstring": "Generate context string for Claude's system prompt",
          "args": [
            "self"
          ]
        },
        {
          "name": "_format_known_issues",
          "line": 372,
          "docstring": "Format known issues for context",
          "args": [
            "self",
            "known_issues"
          ]
        },
        {
          "name": "mark_reviewed",
          "line": 380,
          "docstring": "Mark knowledge as reviewed (increments review count)",
          "args": [
            "self"
          ]
        }
      ],
      "classes": [
        {
          "name": "SystemKnowledge",
          "line": 17,
          "docstring": "Persistent knowledge base for project structure and patterns\n\nPurpose:\n- Remember project structure (directories, ports, patterns)\n- Remember architectural decisions\n- Remember integration points\n- Learn from past implementations\n- Avoid repeated codebase reviews\n\nUpdates automatically when:\n- Claude performs codebase review\n- New features are implemented\n- Patterns change\n- Admin provides corrections",
          "methods": [
            "__init__",
            "_load_knowledge",
            "_initialize_omk_knowledge",
            "_save_knowledge",
            "get_project_structure",
            "get_frontend_info",
            "get_backend_info",
            "get_theme",
            "get_patterns",
            "get_known_issues",
            "add_implementation",
            "add_correction",
            "add_pattern",
            "update_structure",
            "get_context_for_claude",
            "_format_known_issues",
            "mark_reviewed"
          ]
        }
      ],
      "imports": [
        "typing",
        "datetime",
        "pathlib",
        "json",
        "structlog"
      ],
      "keywords": [
        "api",
        "database",
        "error",
        "security",
        "validation"
      ]
    },
    "backend/queen-ai/app/bees/security_bee.py": {
      "type": "python",
      "size": 7924,
      "lines": 224,
      "functions": [
        {
          "name": "__init__",
          "line": 24,
          "docstring": null,
          "args": [
            "self",
            "bee_id"
          ]
        }
      ],
      "classes": [
        {
          "name": "SecurityBee",
          "line": 11,
          "docstring": "Specialized bee for security operations\n\nResponsibilities:\n- Address validation\n- Transaction risk assessment\n- Signature verification\n- Blacklist checking\n- Rate limit validation\n- Anomaly detection",
          "methods": [
            "__init__"
          ]
        }
      ],
      "imports": [
        "typing",
        "structlog",
        "app.bees.base"
      ],
      "keywords": [
        "database",
        "error",
        "security",
        "transaction",
        "validation"
      ]
    },
    "backend/queen-ai/app/bees/enhanced_security_bee.py": {
      "type": "python",
      "size": 16606,
      "lines": 471,
      "functions": [
        {
          "name": "__init__",
          "line": 32,
          "docstring": null,
          "args": [
            "self",
            "bee_id"
          ]
        },
        {
          "name": "_make_decision",
          "line": 193,
          "docstring": "Make final decision: ALLOW, BLOCK, or QUARANTINE\n\nArgs:\n    detection_result: PromptProtection detection result\n    context: SecurityContext\n    is_critical: Whether endpoint is critical\n    generates_code: Whether LLM generates code\n    \nReturns:\n    Decision string",
          "args": [
            "self",
            "detection_result",
            "context",
            "is_critical",
            "generates_code"
          ]
        },
        {
          "name": "_classify_attack_type",
          "line": 240,
          "docstring": "Classify attack type from matched patterns",
          "args": [
            "self",
            "matched_patterns"
          ]
        },
        {
          "name": "get_quarantined_threats",
          "line": 458,
          "docstring": "Get recent quarantined threats",
          "args": [
            "self",
            "limit"
          ]
        },
        {
          "name": "get_security_stats",
          "line": 462,
          "docstring": "Get comprehensive security statistics",
          "args": [
            "self"
          ]
        }
      ],
      "classes": [
        {
          "name": "EnhancedSecurityBee",
          "line": 19,
          "docstring": "Enhanced security bee with LLM protection\n\nNew responsibilities:\n- Validate LLM inputs for prompt injection\n- Coordinate security gates\n- Detect multi-turn attacks\n- Manage security contexts\n- Quarantine threats\n- Alert admins",
          "methods": [
            "__init__",
            "_make_decision",
            "_classify_attack_type",
            "get_quarantined_threats",
            "get_security_stats"
          ]
        }
      ],
      "imports": [
        "typing",
        "datetime",
        "structlog",
        "app.bees.security_bee",
        "app.core.security.prompt_protection",
        "app.core.security.output_filter",
        "app.core.security.context_manager",
        "app.core.security.image_scanner"
      ],
      "keywords": [
        "user",
        "security",
        "error",
        "validation"
      ]
    },
    "backend/queen-ai/app/bees/pattern_bee.py": {
      "type": "python",
      "size": 12843,
      "lines": 339,
      "functions": [
        {
          "name": "__init__",
          "line": 25,
          "docstring": null,
          "args": [
            "self",
            "bee_id"
          ]
        }
      ],
      "classes": [
        {
          "name": "PatternBee",
          "line": 12,
          "docstring": "Specialized bee for pattern recognition\n\nResponsibilities:\n- Trend detection (price, volume, liquidity)\n- Anomaly detection\n- Seasonal pattern recognition\n- Historical pattern matching\n- Predictive analytics\n- Market cycle identification",
          "methods": [
            "__init__"
          ]
        }
      ],
      "imports": [
        "typing",
        "datetime",
        "structlog",
        "app.bees.base"
      ],
      "keywords": [
        "database",
        "error"
      ]
    },
    "backend/queen-ai/app/bees/user_experience_bee.py": {
      "type": "python",
      "size": 29155,
      "lines": 657,
      "functions": [
        {
          "name": "__init__",
          "line": 34,
          "docstring": null,
          "args": [
            "self",
            "bee_id"
          ]
        },
        {
          "name": "_generate_session_id",
          "line": 653,
          "docstring": "Generate unique session ID",
          "args": [
            "self"
          ]
        }
      ],
      "classes": [
        {
          "name": "UserExperienceBee",
          "line": 22,
          "docstring": "Conversational UX Bee - The Voice of the Hive\n\nProvides immersive, chat-based user experience:\n- Multilingual greetings\n- Contextual AI responses\n- Conversational onboarding\n- Information presentation as dialogue\n- Personalized user journeys",
          "methods": [
            "__init__",
            "_generate_session_id"
          ]
        }
      ],
      "imports": [
        "typing",
        "structlog",
        "datetime",
        "app.bees.base",
        "secrets"
      ],
      "keywords": [
        "error",
        "wallet",
        "login",
        "token",
        "security",
        "transaction",
        "user"
      ]
    },
    "backend/queen-ai/app/bees/visualization_bee.py": {
      "type": "python",
      "size": 22149,
      "lines": 613,
      "functions": [
        {
          "name": "__init__",
          "line": 38,
          "docstring": null,
          "args": [
            "self",
            "bee_id"
          ]
        },
        {
          "name": "_get_timeframe_points",
          "line": 596,
          "docstring": "Convert timeframe to number of data points",
          "args": [
            "self",
            "timeframe"
          ]
        },
        {
          "name": "_is_cache_valid",
          "line": 606,
          "docstring": "Check if cached dashboard data is still valid",
          "args": [
            "self"
          ]
        }
      ],
      "classes": [
        {
          "name": "VisualizationBee",
          "line": 17,
          "docstring": "Visualization & Dashboard Bee\n\nResponsibilities:\n- Generate dashboard data for frontend\n- Create time-series data for charts\n- Produce simulation scenarios\n- Format data for visualization libraries\n- Generate reports and analytics summaries\n- Create real-time monitoring feeds\n- Produce comparative analysis charts\n\nOutput Formats:\n- Chart.js compatible datasets\n- D3.js compatible data structures\n- Recharts compatible formats\n- CSV/JSON exports\n- Real-time WebSocket feeds",
          "methods": [
            "__init__",
            "_get_timeframe_points",
            "_is_cache_valid"
          ]
        }
      ],
      "imports": [
        "typing",
        "structlog",
        "datetime",
        "json",
        "app.bees.base",
        "random",
        "random"
      ],
      "keywords": [
        "api",
        "token",
        "error"
      ]
    },
    "backend/queen-ai/app/bees/__init__.py": {
      "type": "python",
      "size": 95,
      "lines": 5,
      "functions": [],
      "classes": [],
      "imports": [
        "manager",
        "base"
      ],
      "keywords": []
    },
    "backend/queen-ai/app/bees/governance_bee.py": {
      "type": "python",
      "size": 20008,
      "lines": 535,
      "functions": [
        {
          "name": "__init__",
          "line": 37,
          "docstring": null,
          "args": [
            "self",
            "bee_id"
          ]
        }
      ],
      "classes": [
        {
          "name": "GovernanceBee",
          "line": 16,
          "docstring": "Governance Management Bee\n\nResponsibilities:\n- Create and validate governance proposals\n- Track voting and quorum requirements\n- Execute approved proposals (with Queen permission)\n- Manage governance parameters (voting periods, quorum, etc.)\n- Track stakeholder participation\n- Generate governance reports and analytics\n- Enforce governance rules and timelock periods\n\nGovernance Categories:\n- Treasury Spending (budget allocations, grants)\n- Protocol Parameters (fees, limits, rates)\n- Smart Contract Upgrades (with timelock)\n- Emergency Actions (with multi-sig)\n- Ecosystem Grants & Partnerships",
          "methods": [
            "__init__"
          ]
        }
      ],
      "imports": [
        "typing",
        "structlog",
        "datetime",
        "app.bees.base"
      ],
      "keywords": [
        "database",
        "error",
        "token",
        "query",
        "validation"
      ]
    },
    "backend/queen-ai/app/bees/private_sale_bee.py": {
      "type": "python",
      "size": 20214,
      "lines": 510,
      "functions": [
        {
          "name": "__init__",
          "line": 44,
          "docstring": null,
          "args": [
            "self",
            "bee_id"
          ]
        }
      ],
      "classes": [
        {
          "name": "PrivateSaleBee",
          "line": 16,
          "docstring": "Private Sale Management Bee\n\nResponsibilities:\n- Calculate token prices based on tiered structure\n- Process private investor purchases\n- Track sales across all tiers\n- Validate investor eligibility\n- Generate sales reports\n- Work with Queen for approval on large purchases\n\nExact Pricing Structure (10 tiers, 10M tokens each):\n- Tier 1:  0-10M   @ $0.100 = $1,000,000\n- Tier 2:  10-20M  @ $0.105 = $1,050,000\n- Tier 3:  20-30M  @ $0.110 = $1,100,000\n- Tier 4:  30-40M  @ $0.115 = $1,150,000\n- Tier 5:  40-50M  @ $0.120 = $1,200,000\n- Tier 6:  50-60M  @ $0.125 = $1,250,000\n- Tier 7:  60-70M  @ $0.130 = $1,300,000\n- Tier 8:  70-80M  @ $0.135 = $1,350,000\n- Tier 9:  80-90M  @ $0.140 = $1,400,000\n- Tier 10: 90-100M @ $0.145 = $1,450,000\n\nTotal if 100M sold: $12,250,000\nWeighted average: $0.1225 / OMK",
          "methods": [
            "__init__"
          ]
        }
      ],
      "imports": [
        "typing",
        "structlog",
        "datetime",
        "app.bees.base",
        "json",
        "os"
      ],
      "keywords": [
        "database",
        "error",
        "token",
        "security",
        "query",
        "auth(?:entication|orization)?",
        "validation"
      ]
    },
    "backend/queen-ai/app/bees/tokenization_bee.py": {
      "type": "python",
      "size": 11392,
      "lines": 300,
      "functions": [
        {
          "name": "__init__",
          "line": 28,
          "docstring": null,
          "args": [
            "self",
            "bee_id"
          ]
        }
      ],
      "classes": [
        {
          "name": "TokenizationBee",
          "line": 15,
          "docstring": "Specialized bee for asset tokenization\n\nResponsibilities:\n- Convert real-world assets to tokens\n- Manage fractionalized ownership\n- Handle NFT minting and transfers\n- Track asset lifecycle and valuations\n- Proof of ownership verification\n- Mortgage/part-payment systems",
          "methods": [
            "__init__"
          ]
        }
      ],
      "imports": [
        "typing",
        "structlog",
        "datetime",
        "app.bees.base"
      ],
      "keywords": [
        "transaction",
        "token",
        "query",
        "error"
      ]
    },
    "backend/queen-ai/app/bees/data_bee.py": {
      "type": "python",
      "size": 24941,
      "lines": 638,
      "functions": [
        {
          "name": "__init__",
          "line": 42,
          "docstring": null,
          "args": [
            "self",
            "bee_id"
          ]
        },
        {
          "name": "set_elastic_client",
          "line": 66,
          "docstring": "Set Elastic Search client (called by BeeManager)",
          "args": [
            "self",
            "elastic_client"
          ]
        },
        {
          "name": "_generate_recommendations",
          "line": 530,
          "docstring": "Generate actionable recommendations from data",
          "args": [
            "self",
            "bee_stats",
            "blockchain_stats"
          ]
        }
      ],
      "classes": [
        {
          "name": "DataBee",
          "line": 31,
          "docstring": "Enterprise Data Operations Bee\n\nProvides unified access to:\n1. Elastic Search - Real-time activity logs\n2. BigQuery - Historical blockchain data  \n3. Analytics - Aggregations and insights\n4. RAG - Conversational data queries",
          "methods": [
            "__init__",
            "set_elastic_client",
            "_generate_recommendations"
          ]
        }
      ],
      "imports": [
        "typing",
        "os",
        "structlog",
        "datetime",
        "app.bees.base",
        "google.cloud"
      ],
      "keywords": [
        "transaction",
        "error",
        "query"
      ]
    },
    "backend/queen-ai/app/bees/logic_bee.py": {
      "type": "python",
      "size": 13301,
      "lines": 350,
      "functions": [
        {
          "name": "__init__",
          "line": 24,
          "docstring": null,
          "args": [
            "self",
            "bee_id"
          ]
        },
        {
          "name": "_score_maths_input",
          "line": 270,
          "docstring": "Score mathematical analysis (0-100)",
          "args": [
            "self",
            "maths_input"
          ]
        },
        {
          "name": "_score_security_input",
          "line": 286,
          "docstring": "Score security analysis (0-100)",
          "args": [
            "self",
            "security_input"
          ]
        },
        {
          "name": "_score_data_input",
          "line": 301,
          "docstring": "Score data analysis (0-100)",
          "args": [
            "self",
            "data_input"
          ]
        },
        {
          "name": "_score_treasury_input",
          "line": 312,
          "docstring": "Score treasury health (0-100)",
          "args": [
            "self",
            "treasury_input"
          ]
        },
        {
          "name": "_score_pattern_input",
          "line": 331,
          "docstring": "Score pattern analysis (0-100)",
          "args": [
            "self",
            "pattern_input"
          ]
        },
        {
          "name": "_generate_reasoning",
          "line": 342,
          "docstring": "Generate human-readable reasoning",
          "args": [
            "self",
            "decision",
            "score",
            "factors"
          ]
        }
      ],
      "classes": [
        {
          "name": "LogicBee",
          "line": 11,
          "docstring": "Specialized bee for decision making\n\nResponsibilities:\n- Aggregate inputs from multiple bees\n- Build consensus on decisions\n- Apply decision rules and policies\n- Risk-reward analysis\n- Multi-criteria decision making\n- Conflict resolution between bees",
          "methods": [
            "__init__",
            "_score_maths_input",
            "_score_security_input",
            "_score_data_input",
            "_score_treasury_input",
            "_score_pattern_input",
            "_generate_reasoning"
          ]
        }
      ],
      "imports": [
        "typing",
        "structlog",
        "app.bees.base"
      ],
      "keywords": [
        "security",
        "error"
      ]
    },
    "backend/queen-ai/app/bees/liquidity_sentinel_bee.py": {
      "type": "python",
      "size": 28913,
      "lines": 727,
      "functions": [
        {
          "name": "__init__",
          "line": 34,
          "docstring": null,
          "args": [
            "self",
            "bee_id"
          ]
        },
        {
          "name": "set_blockchain_bee",
          "line": 706,
          "docstring": "Connect to BlockchainBee for execution",
          "args": [
            "self",
            "blockchain_bee"
          ]
        },
        {
          "name": "set_pattern_bee",
          "line": 712,
          "docstring": "Connect to PatternBee for predictive models",
          "args": [
            "self",
            "pattern_bee"
          ]
        },
        {
          "name": "register_pool",
          "line": 717,
          "docstring": "Register a pool for monitoring",
          "args": [
            "self",
            "pool_id",
            "pool_data"
          ]
        },
        {
          "name": "unregister_pool",
          "line": 722,
          "docstring": "Unregister a pool from monitoring",
          "args": [
            "self",
            "pool_id"
          ]
        }
      ],
      "classes": [
        {
          "name": "LiquiditySentinelBee",
          "line": 21,
          "docstring": "Specialized bee for liquidity monitoring and price control\n\nResponsibilities:\n- Monitor price movements across all pools\n- Track LP ratios and pool health\n- Predict volatility using AI models\n- Call for liquidity top-ups or buybacks\n- Coordinate with Pattern Recognition Bee\n- Alert Queen of critical price events",
          "methods": [
            "__init__",
            "set_blockchain_bee",
            "set_pattern_bee",
            "register_pool",
            "unregister_pool"
          ]
        }
      ],
      "imports": [
        "typing",
        "decimal",
        "structlog",
        "app.bees.base"
      ],
      "keywords": [
        "token",
        "error"
      ]
    },
    "backend/queen-ai/app/bees/purchase_bee.py": {
      "type": "python",
      "size": 10251,
      "lines": 279,
      "functions": [
        {
          "name": "__init__",
          "line": 28,
          "docstring": null,
          "args": [
            "self",
            "bee_id"
          ]
        },
        {
          "name": "_estimate_time",
          "line": 270,
          "docstring": "Estimate confirmation time",
          "args": [
            "self",
            "urgency"
          ]
        }
      ],
      "classes": [
        {
          "name": "PurchaseBee",
          "line": 15,
          "docstring": "Specialized bee for purchase/swap operations\n\nResponsibilities:\n- Facilitate user swaps and orders\n- Route optimization (internal vs external DEXs)\n- Gas usage tracking and optimization\n- Slippage monitoring and protection\n- Transaction health monitoring\n- Multi-DEX route comparison",
          "methods": [
            "__init__",
            "_estimate_time"
          ]
        }
      ],
      "imports": [
        "typing",
        "structlog",
        "app.bees.base"
      ],
      "keywords": [
        "error",
        "token",
        "transaction",
        "query",
        "user"
      ]
    },
    "backend/queen-ai/app/bees/maths_bee.py": {
      "type": "python",
      "size": 8156,
      "lines": 210,
      "functions": [
        {
          "name": "__init__",
          "line": 23,
          "docstring": null,
          "args": [
            "self",
            "bee_id"
          ]
        }
      ],
      "classes": [
        {
          "name": "MathsBee",
          "line": 11,
          "docstring": "Specialized bee for mathematical operations\n\nResponsibilities:\n- AMM pool calculations (x*y=k)\n- Slippage analysis\n- Rebalance amount calculations\n- APY calculations\n- Reward distributions",
          "methods": [
            "__init__"
          ]
        }
      ],
      "imports": [
        "typing",
        "structlog",
        "app.bees.base"
      ],
      "keywords": [
        "token",
        "error"
      ]
    },
    "backend/queen-ai/app/bees/data_pipeline_bee.py": {
      "type": "python",
      "size": 17047,
      "lines": 415,
      "functions": [
        {
          "name": "__init__",
          "line": 44,
          "docstring": null,
          "args": [
            "self",
            "bee_id"
          ]
        }
      ],
      "classes": [
        {
          "name": "DataPipelineBee",
          "line": 32,
          "docstring": "Automated Data Pipeline Bee\n\nHandles the complete data pipeline:\n1. Collect blockchain data\n2. Convert to CSV\n3. Upload to GCS\n4. Monitor Fivetran\n5. Report status",
          "methods": [
            "__init__"
          ]
        }
      ],
      "imports": [
        "typing",
        "os",
        "json",
        "csv",
        "structlog",
        "datetime",
        "pathlib",
        "app.bees.base",
        "google.cloud",
        "sys",
        "app.integrations.data_collectors.blockchain_transactions",
        "app.integrations.data_collectors.dex_pools",
        "app.integrations.data_collectors.price_oracles"
      ],
      "keywords": [
        "api",
        "error"
      ]
    },
    "backend/queen-ai/app/bees/monitoring_bee.py": {
      "type": "python",
      "size": 18268,
      "lines": 452,
      "functions": [
        {
          "name": "__init__",
          "line": 29,
          "docstring": null,
          "args": [
            "self",
            "bee_id"
          ]
        }
      ],
      "classes": [
        {
          "name": "MonitoringBee",
          "line": 15,
          "docstring": "Specialized bee for hive monitoring\n\nResponsibilities:\n- Monitor hive health (all bees)\n- Security monitoring and threat detection\n- Safety checks and compliance\n- Performance monitoring\n- Resource usage tracking\n- Alert generation for critical issues\n- System diagnostics",
          "methods": [
            "__init__"
          ]
        }
      ],
      "imports": [
        "typing",
        "datetime",
        "structlog",
        "app.bees.base"
      ],
      "keywords": [
        "security",
        "transaction",
        "error",
        "auth(?:entication|orization)?"
      ]
    },
    "backend/queen-ai/app/bees/bridge_bee.py": {
      "type": "python",
      "size": 20240,
      "lines": 593,
      "functions": [
        {
          "name": "__init__",
          "line": 36,
          "docstring": null,
          "args": [
            "self",
            "bee_id"
          ]
        }
      ],
      "classes": [
        {
          "name": "BridgeBee",
          "line": 23,
          "docstring": "Cross-chain bridge orchestrator and monitor\n\nFeatures:\n- Continuous bridge monitoring\n- Stuck transaction detection\n- Automatic recovery attempts\n- Queen AI alerts for critical issues\n- Bridge health monitoring\n- Liquidity management",
          "methods": [
            "__init__"
          ]
        }
      ],
      "imports": [
        "asyncio",
        "typing",
        "datetime",
        "structlog",
        "app.bees.base",
        "app.blockchain.bridge"
      ],
      "keywords": [
        "transaction",
        "error"
      ]
    },
    "backend/queen-ai/app/bees/stake_bot_bee.py": {
      "type": "python",
      "size": 14545,
      "lines": 368,
      "functions": [
        {
          "name": "__init__",
          "line": 28,
          "docstring": null,
          "args": [
            "self",
            "bee_id"
          ]
        }
      ],
      "classes": [
        {
          "name": "StakeBotBee",
          "line": 15,
          "docstring": "Specialized bee for staking operations\n\nResponsibilities:\n- Manage staking pools\n- Adjust rewards in real-time\n- Evaluate TVL vs yield ratio\n- Automatically adjust APY for sustainability\n- Calculate lock period multipliers\n- Distribute daily rewards",
          "methods": [
            "__init__"
          ]
        }
      ],
      "imports": [
        "typing",
        "structlog",
        "app.bees.base"
      ],
      "keywords": [
        "user",
        "query",
        "error"
      ]
    },
    "backend/queen-ai/app/bees/blockchain_bee.py": {
      "type": "python",
      "size": 37975,
      "lines": 1018,
      "functions": [
        {
          "name": "__init__",
          "line": 52,
          "docstring": null,
          "args": [
            "self",
            "bee_id"
          ]
        }
      ],
      "classes": [
        {
          "name": "BlockchainBee",
          "line": 38,
          "docstring": "Multi-chain blockchain orchestrator with automated trading\n\nResponsibilities:\n- Execute blockchain transactions (ETH, SOL)\n- Automated token swaps\n- Liquidity provision/removal\n- Cross-chain bridge operations\n- Gas/fee optimization\n- Transaction monitoring\n- Queen AI-triggered operations",
          "methods": [
            "__init__"
          ]
        }
      ],
      "imports": [
        "typing",
        "decimal",
        "structlog",
        "app.bees.base",
        "app.blockchain",
        "app.blockchain.dex",
        "app.blockchain.oracles"
      ],
      "keywords": [
        "transaction",
        "token",
        "wallet",
        "error"
      ]
    },
    "backend/queen-ai/app/bees/manager.py": {
      "type": "python",
      "size": 11659,
      "lines": 281,
      "functions": [
        {
          "name": "__init__",
          "line": 44,
          "docstring": null,
          "args": [
            "self",
            "llm_abstraction",
            "elastic_search"
          ]
        }
      ],
      "classes": [
        {
          "name": "BeeManager",
          "line": 32,
          "docstring": "Manages lifecycle and coordination of all bee agents\n\nResponsibilities:\n- Initialize bees\n- Provide LLM access to bees that need it\n- Route tasks to appropriate bees\n- Monitor bee health\n- Handle bee failures",
          "methods": [
            "__init__"
          ]
        }
      ],
      "imports": [
        "typing",
        "structlog",
        "app.bees.base",
        "app.bees.maths_bee",
        "app.bees.security_bee",
        "app.bees.data_bee",
        "app.bees.treasury_bee",
        "app.bees.blockchain_bee",
        "app.bees.logic_bee",
        "app.bees.pattern_bee",
        "app.bees.purchase_bee",
        "app.bees.liquidity_sentinel_bee",
        "app.bees.stake_bot_bee",
        "app.bees.tokenization_bee",
        "app.bees.monitoring_bee",
        "app.bees.private_sale_bee",
        "app.bees.governance_bee",
        "app.bees.visualization_bee",
        "app.bees.bridge_bee",
        "app.bees.data_pipeline_bee",
        "app.bees.onboarding_bee",
        "app.bees.user_experience_bee",
        "app.integrations.elastic_search"
      ],
      "keywords": [
        "database",
        "error",
        "token",
        "security",
        "query",
        "user"
      ]
    },
    "backend/queen-ai/app/bees/base.py": {
      "type": "python",
      "size": 7670,
      "lines": 218,
      "functions": [
        {
          "name": "__init__",
          "line": 32,
          "docstring": null,
          "args": [
            "self",
            "bee_id",
            "name",
            "llm_enabled"
          ]
        },
        {
          "name": "set_llm",
          "line": 48,
          "docstring": "Set LLM abstraction layer for this bee\n\nCalled by BeeManager to provide LLM access to bees that need it",
          "args": [
            "self",
            "llm_abstraction"
          ]
        },
        {
          "name": "get_stats",
          "line": 209,
          "docstring": "Get bee statistics",
          "args": [
            "self"
          ]
        }
      ],
      "classes": [
        {
          "name": "BaseBee",
          "line": 14,
          "docstring": "Base class for all bee agents\n\nEach bee specializes in a specific task:\n- MathsBee: AMM calculations, pool analysis\n- SecurityBee: Validation, risk assessment\n- DataBee: Blockchain queries, data aggregation\n- TreasuryBee: Treasury management\n- GovernanceBee: DAO governance, proposals, voting\n\nFeatures:\n- Optional LLM access for intelligent reasoning\n- Task processing with metrics\n- Health monitoring\n- Error handling",
          "methods": [
            "__init__",
            "set_llm",
            "get_stats"
          ]
        }
      ],
      "imports": [
        "typing",
        "abc",
        "datetime",
        "structlog"
      ],
      "keywords": [
        "error",
        "validation"
      ]
    },
    "backend/queen-ai/app/bees/treasury_bee.py": {
      "type": "python",
      "size": 13210,
      "lines": 334,
      "functions": [
        {
          "name": "__init__",
          "line": 34,
          "docstring": null,
          "args": [
            "self",
            "bee_id"
          ]
        },
        {
          "name": "_get_health_recommendations",
          "line": 220,
          "docstring": "Generate health recommendations",
          "args": [
            "self",
            "health_score",
            "runway_months"
          ]
        }
      ],
      "classes": [
        {
          "name": "TreasuryBee",
          "line": 12,
          "docstring": "Specialized bee for treasury operations\n\nResponsibilities:\n- Budget tracking by category\n- Spending proposal validation\n- Treasury health monitoring\n- Fund allocation recommendations\n- Monthly spending reports",
          "methods": [
            "__init__",
            "_get_health_recommendations"
          ]
        }
      ],
      "imports": [
        "typing",
        "structlog",
        "datetime",
        "app.bees.base"
      ],
      "keywords": [
        "query",
        "error",
        "validation"
      ]
    },
    "backend/queen-ai/app/bees/onboarding_bee.py": {
      "type": "python",
      "size": 19427,
      "lines": 550,
      "functions": [
        {
          "name": "__init__",
          "line": 37,
          "docstring": null,
          "args": [
            "self",
            "bee_id"
          ]
        },
        {
          "name": "_is_valid_email",
          "line": 495,
          "docstring": "Validate email format",
          "args": [
            "self",
            "email"
          ]
        },
        {
          "name": "_hash_password",
          "line": 500,
          "docstring": "Hash password with salt",
          "args": [
            "self",
            "password"
          ]
        },
        {
          "name": "_verify_password",
          "line": 506,
          "docstring": "Verify password against hash",
          "args": [
            "self",
            "password",
            "password_hash"
          ]
        },
        {
          "name": "_generate_user_id",
          "line": 515,
          "docstring": "Generate unique user ID",
          "args": [
            "self"
          ]
        },
        {
          "name": "_create_session",
          "line": 519,
          "docstring": "Create user session",
          "args": [
            "self",
            "email"
          ]
        },
        {
          "name": "_sanitize_user",
          "line": 534,
          "docstring": "Remove sensitive data from user object",
          "args": [
            "self",
            "user"
          ]
        },
        {
          "name": "_get_user_type_breakdown",
          "line": 543,
          "docstring": "Get breakdown of user types",
          "args": [
            "self"
          ]
        }
      ],
      "classes": [
        {
          "name": "OnboardingBee",
          "line": 26,
          "docstring": "User Onboarding & Management Bee\n\nHandles all user-related operations:\n- Registration & authentication\n- Profile management\n- Database operations\n- Wallet management",
          "methods": [
            "__init__",
            "_is_valid_email",
            "_hash_password",
            "_verify_password",
            "_generate_user_id",
            "_create_session",
            "_sanitize_user",
            "_get_user_type_breakdown"
          ]
        }
      ],
      "imports": [
        "typing",
        "structlog",
        "datetime",
        "hashlib",
        "secrets",
        "re",
        "app.bees.base"
      ],
      "keywords": [
        "database",
        "error",
        "wallet",
        "password",
        "login",
        "query",
        "user",
        "auth(?:entication|orization)?",
        "validation"
      ]
    },
    "backend/queen-ai/app/core/distributed_lock.py": {
      "type": "python",
      "size": 7583,
      "lines": 241,
      "functions": [
        {
          "name": "critical_section",
          "line": 223,
          "docstring": "Decorator to make a function a critical section\n\nUsage:\n    @critical_section(\"process_proposal\")\n    async def process_proposal(proposal_id):\n        # Only one instance executes this at a time\n        ...",
          "args": [
            "lock_name",
            "timeout"
          ]
        },
        {
          "name": "__init__",
          "line": 32,
          "docstring": null,
          "args": [
            "self"
          ]
        },
        {
          "name": "decorator",
          "line": 233,
          "docstring": null,
          "args": [
            "func"
          ]
        }
      ],
      "classes": [
        {
          "name": "DistributedLock",
          "line": 19,
          "docstring": "Distributed lock using Redis\n\nEnsures only one instance can perform critical operations at a time.\nAutomatically releases locks on timeout to prevent deadlocks.\n\nUsage:\n    async with distributed_lock.acquire(\"operation_name\"):\n        # Critical section - only one instance executes this\n        await perform_operation()",
          "methods": [
            "__init__"
          ]
        }
      ],
      "imports": [
        "asyncio",
        "time",
        "uuid",
        "typing",
        "contextlib",
        "structlog",
        "app.core.redis_message_bus"
      ],
      "keywords": [
        "error"
      ]
    },
    "backend/queen-ai/app/core/message_bus.py": {
      "type": "python",
      "size": 9217,
      "lines": 289,
      "functions": [
        {
          "name": "__init__",
          "line": 19,
          "docstring": null,
          "args": [
            "self",
            "sender",
            "recipient",
            "message_type",
            "payload",
            "priority"
          ]
        },
        {
          "name": "__init__",
          "line": 51,
          "docstring": null,
          "args": [
            "self"
          ]
        },
        {
          "name": "register_bee",
          "line": 63,
          "docstring": "Register a bee to receive messages",
          "args": [
            "self",
            "bee_name"
          ]
        },
        {
          "name": "get_message_history",
          "line": 181,
          "docstring": "Get message history for analysis/learning",
          "args": [
            "self",
            "sender",
            "recipient",
            "message_type",
            "limit"
          ]
        },
        {
          "name": "get_communication_stats",
          "line": 215,
          "docstring": "Get communication statistics",
          "args": [
            "self"
          ]
        }
      ],
      "classes": [
        {
          "name": "Message",
          "line": 16,
          "docstring": "Message structure for inter-bee communication",
          "methods": [
            "__init__"
          ]
        },
        {
          "name": "MessageBus",
          "line": 38,
          "docstring": "Central message bus for Queen-Bee communication\n\nFeatures:\n- Asynchronous message passing\n- Priority queuing (critical > high > normal)\n- Broadcast messaging\n- Request-response pattern\n- Message logging for learning\n- No restrictions on communication",
          "methods": [
            "__init__",
            "register_bee",
            "get_message_history",
            "get_communication_stats"
          ]
        }
      ],
      "imports": [
        "asyncio",
        "typing",
        "datetime",
        "collections",
        "structlog"
      ],
      "keywords": [
        "security",
        "query"
      ]
    },
    "backend/queen-ai/app/core/state_manager.py": {
      "type": "python",
      "size": 3101,
      "lines": 97,
      "functions": [
        {
          "name": "__init__",
          "line": 26,
          "docstring": null,
          "args": [
            "self"
          ]
        },
        {
          "name": "get_state",
          "line": 94,
          "docstring": "Get current state",
          "args": [
            "self"
          ]
        }
      ],
      "classes": [
        {
          "name": "StateManager",
          "line": 15,
          "docstring": "Manages Queen AI's persistent state\n\nTracks:\n- Daily transfer usage (rate limiting)\n- Operation history\n- Decision metrics\n- System health status",
          "methods": [
            "__init__",
            "get_state"
          ]
        }
      ],
      "imports": [
        "typing",
        "datetime",
        "structlog",
        "json",
        "pathlib",
        "app.config.settings"
      ],
      "keywords": [
        "error"
      ]
    },
    "backend/queen-ai/app/core/enhanced_claude_integration.py": {
      "type": "python",
      "size": 14709,
      "lines": 423,
      "functions": [
        {
          "name": "__init__",
          "line": 20,
          "docstring": null,
          "args": [
            "self",
            "api_key",
            "system_manager"
          ]
        },
        {
          "name": "_build_system_context",
          "line": 124,
          "docstring": "Build comprehensive system context for Claude",
          "args": [
            "self",
            "task_context"
          ]
        },
        {
          "name": "_format_conversation",
          "line": 183,
          "docstring": "Format conversation history for API",
          "args": [
            "self",
            "new_message"
          ]
        },
        {
          "name": "_extract_thinking",
          "line": 202,
          "docstring": "Extract thinking section from response",
          "args": [
            "self",
            "content"
          ]
        },
        {
          "name": "_extract_response",
          "line": 210,
          "docstring": "Extract actual response (without thinking tags)",
          "args": [
            "self",
            "content"
          ]
        },
        {
          "name": "_check_focus",
          "line": 217,
          "docstring": "Check if Claude is staying focused on the task\nReturns True if focused, False if drifting",
          "args": [
            "self",
            "response"
          ]
        },
        {
          "name": "_generate_focus_reminder",
          "line": 239,
          "docstring": "Generate a reminder to help Claude stay focused",
          "args": [
            "self"
          ]
        },
        {
          "name": "remind_of_rules",
          "line": 313,
          "docstring": "Remind Claude of core rules mid-conversation",
          "args": [
            "self"
          ]
        },
        {
          "name": "get_thinking_summary",
          "line": 343,
          "docstring": "Get summary of Claude's thinking patterns",
          "args": [
            "self"
          ]
        },
        {
          "name": "clear_conversation",
          "line": 356,
          "docstring": "Clear conversation history",
          "args": [
            "self",
            "keep_rules"
          ]
        },
        {
          "name": "__init__",
          "line": 377,
          "docstring": null,
          "args": [
            "self",
            "claude"
          ]
        },
        {
          "name": "get_regulation_report",
          "line": 416,
          "docstring": "Get report on Queen's regulation",
          "args": [
            "self"
          ]
        }
      ],
      "classes": [
        {
          "name": "ThinkingClaude",
          "line": 14,
          "docstring": "Claude with extended thinking and reasoning capabilities\nIncludes self-regulation and contextual awareness",
          "methods": [
            "__init__",
            "_build_system_context",
            "_format_conversation",
            "_extract_thinking",
            "_extract_response",
            "_check_focus",
            "_generate_focus_reminder",
            "remind_of_rules",
            "get_thinking_summary",
            "clear_conversation"
          ]
        },
        {
          "name": "QueenRegulator",
          "line": 371,
          "docstring": "Queen's self-regulation system\nMonitors Claude and keeps her focused and effective",
          "methods": [
            "__init__",
            "get_regulation_report"
          ]
        }
      ],
      "imports": [
        "anthropic",
        "typing",
        "datetime",
        "json",
        "app.core.queen_system_manager",
        "re",
        "re"
      ],
      "keywords": [
        "user",
        "security",
        "error",
        "api"
      ]
    },
    "backend/queen-ai/app/core/system_reboot_manager.py": {
      "type": "python",
      "size": 11833,
      "lines": 346,
      "functions": [
        {
          "name": "__init__",
          "line": 25,
          "docstring": null,
          "args": [
            "self",
            "project_root"
          ]
        },
        {
          "name": "request_reboot",
          "line": 32,
          "docstring": "Request a system reboot\nReturns reboot request that needs admin approval",
          "args": [
            "self",
            "reason",
            "component",
            "requester"
          ]
        },
        {
          "name": "_find_backend_process",
          "line": 223,
          "docstring": "Find backend process",
          "args": [
            "self"
          ]
        },
        {
          "name": "_find_frontend_process",
          "line": 234,
          "docstring": "Find frontend process",
          "args": [
            "self"
          ]
        },
        {
          "name": "_start_backend",
          "line": 245,
          "docstring": "Start backend service",
          "args": [
            "self"
          ]
        },
        {
          "name": "_start_frontend",
          "line": 270,
          "docstring": "Start frontend service",
          "args": [
            "self"
          ]
        },
        {
          "name": "_log_reboot",
          "line": 295,
          "docstring": "Log reboot to file",
          "args": [
            "self",
            "reboot_data"
          ]
        },
        {
          "name": "get_reboot_history",
          "line": 314,
          "docstring": "Get reboot history",
          "args": [
            "self",
            "limit"
          ]
        },
        {
          "name": "cancel_reboot",
          "line": 327,
          "docstring": "Cancel pending reboot",
          "args": [
            "self",
            "reboot_id",
            "admin_id"
          ]
        }
      ],
      "classes": [
        {
          "name": "SystemRebootManager",
          "line": 16,
          "docstring": "Manages system reboots safely\n- Requires admin approval\n- Backs up state\n- Graceful shutdown\n- Restart services",
          "methods": [
            "__init__",
            "request_reboot",
            "_find_backend_process",
            "_find_frontend_process",
            "_start_backend",
            "_start_frontend",
            "_log_reboot",
            "get_reboot_history",
            "cancel_reboot"
          ]
        }
      ],
      "imports": [
        "os",
        "subprocess",
        "signal",
        "psutil",
        "typing",
        "datetime",
        "pathlib",
        "json"
      ],
      "keywords": [
        "error"
      ]
    },
    "backend/queen-ai/app/core/hive_board.py": {
      "type": "python",
      "size": 12990,
      "lines": 427,
      "functions": [
        {
          "name": "__init__",
          "line": 27,
          "docstring": null,
          "args": [
            "self",
            "author",
            "category",
            "title",
            "content",
            "tags",
            "priority",
            "expires_in_hours"
          ]
        },
        {
          "name": "__init__",
          "line": 67,
          "docstring": null,
          "args": [
            "self"
          ]
        },
        {
          "name": "_calculate_relevance",
          "line": 360,
          "docstring": "Calculate search relevance score",
          "args": [
            "self",
            "post",
            "query"
          ]
        }
      ],
      "classes": [
        {
          "name": "InformationPost",
          "line": 24,
          "docstring": "A single post on the hive board",
          "methods": [
            "__init__"
          ]
        },
        {
          "name": "HiveInformationBoard",
          "line": 54,
          "docstring": "Shared information board for all bees\n\nFeatures:\n- Post information for all bees to see\n- Query information by category/tag/author\n- Subscribe to categories for real-time updates\n- Automatic cleanup of expired posts\n- Access tracking for learning\n- Search functionality",
          "methods": [
            "__init__",
            "_calculate_relevance"
          ]
        }
      ],
      "imports": [
        "asyncio",
        "typing",
        "datetime",
        "collections",
        "structlog"
      ],
      "keywords": [
        "security",
        "query",
        "error"
      ]
    },
    "backend/queen-ai/app/core/redis_hive_board.py": {
      "type": "python",
      "size": 11497,
      "lines": 359,
      "functions": [
        {
          "name": "__init__",
          "line": 41,
          "docstring": null,
          "args": [
            "self"
          ]
        }
      ],
      "classes": [
        {
          "name": "RedisHiveBoard",
          "line": 23,
          "docstring": "Redis-backed shared knowledge board for bees\n\nRedis Data Structures:\n- post:{post_id} - Hash (post data)\n- posts:by_category:{category} - Sorted Set (by timestamp)\n- posts:by_author:{author} - Sorted Set (by timestamp)\n- posts:all - Sorted Set (all posts by timestamp)\n- post_id:counter - String (auto-increment counter)",
          "methods": [
            "__init__"
          ]
        }
      ],
      "imports": [
        "json",
        "typing",
        "datetime",
        "structlog",
        "app.config.settings",
        "redis.asyncio"
      ],
      "keywords": [
        "transaction",
        "error",
        "query"
      ]
    },
    "backend/queen-ai/app/core/autonomous_fixer.py": {
      "type": "python",
      "size": 18647,
      "lines": 545,
      "functions": [
        {
          "name": "__init__",
          "line": 30,
          "docstring": null,
          "args": [
            "self",
            "approach_id",
            "description",
            "files",
            "risk_level"
          ]
        },
        {
          "name": "__init__",
          "line": 47,
          "docstring": null,
          "args": [
            "self",
            "project_root"
          ]
        },
        {
          "name": "_format_previous_approaches",
          "line": 327,
          "docstring": "Format previous approaches for context",
          "args": [
            "self",
            "approaches"
          ]
        },
        {
          "name": "_select_best_approach",
          "line": 392,
          "docstring": "Select the best fix approach based on test results",
          "args": [
            "self",
            "approaches",
            "test_results"
          ]
        }
      ],
      "classes": [
        {
          "name": "FixApproach",
          "line": 28,
          "docstring": "Represents one potential fix approach",
          "methods": [
            "__init__"
          ]
        },
        {
          "name": "AutonomousFixer",
          "line": 40,
          "docstring": "Autonomous bug fixing system\n\nThis is the core of Queen's self-healing capability.",
          "methods": [
            "__init__",
            "_format_previous_approaches",
            "_select_best_approach"
          ]
        }
      ],
      "imports": [
        "asyncio",
        "structlog",
        "typing",
        "datetime",
        "pathlib",
        "uuid",
        "app.core.bug_analyzer",
        "app.core.code_proposal_system",
        "app.core.enhanced_sandbox_system",
        "app.integrations.claude_integration",
        "app.tools.codebase_navigator",
        "json",
        "re"
      ],
      "keywords": [
        "error"
      ]
    },
    "backend/queen-ai/app/core/security.py": {
      "type": "python",
      "size": 8807,
      "lines": 316,
      "functions": [
        {
          "name": "require_api_key",
          "line": 289,
          "docstring": "Decorator for requiring API key (non-FastAPI functions)",
          "args": [
            "func"
          ]
        },
        {
          "name": "require_admin",
          "line": 304,
          "docstring": "Decorator for requiring admin access",
          "args": [
            "func"
          ]
        },
        {
          "name": "__init__",
          "line": 38,
          "docstring": null,
          "args": [
            "self"
          ]
        },
        {
          "name": "verify_api_key",
          "line": 45,
          "docstring": "Verify API key\n\nReturns:\n    True if valid",
          "args": [
            "self",
            "api_key"
          ]
        },
        {
          "name": "is_admin",
          "line": 63,
          "docstring": "Check if API key has admin privileges",
          "args": [
            "self",
            "api_key"
          ]
        },
        {
          "name": "check_rate_limit",
          "line": 67,
          "docstring": "Check rate limit for identifier (IP or API key)\n\nArgs:\n    identifier: IP address or API key\n    max_requests: Max requests allowed\n    window_seconds: Time window in seconds\n\nReturns:\n    True if within limit, False if exceeded",
          "args": [
            "self",
            "identifier",
            "max_requests",
            "window_seconds"
          ]
        },
        {
          "name": "block_ip",
          "line": 110,
          "docstring": "Block an IP address",
          "args": [
            "self",
            "ip_address"
          ]
        },
        {
          "name": "unblock_ip",
          "line": 115,
          "docstring": "Unblock an IP address",
          "args": [
            "self",
            "ip_address"
          ]
        },
        {
          "name": "is_blocked",
          "line": 121,
          "docstring": "Check if IP is blocked",
          "args": [
            "self",
            "ip_address"
          ]
        },
        {
          "name": "create_timelock",
          "line": 125,
          "docstring": "Create timelock for proposal\n\nProposals cannot be executed until timelock expires",
          "args": [
            "self",
            "proposal_id",
            "delay_hours"
          ]
        },
        {
          "name": "check_timelock",
          "line": 144,
          "docstring": "Check if timelock has expired\n\nReturns:\n    True if can execute, False if still locked",
          "args": [
            "self",
            "proposal_id"
          ]
        },
        {
          "name": "enable_emergency_mode",
          "line": 163,
          "docstring": "Enable emergency mode - blocks all non-admin operations\n\nUse for critical security incidents",
          "args": [
            "self",
            "reason"
          ]
        },
        {
          "name": "disable_emergency_mode",
          "line": 175,
          "docstring": "Disable emergency mode",
          "args": [
            "self"
          ]
        },
        {
          "name": "is_emergency_mode",
          "line": 180,
          "docstring": "Check if emergency mode is active",
          "args": [
            "self"
          ]
        },
        {
          "name": "generate_api_key",
          "line": 184,
          "docstring": "Generate new API key",
          "args": [
            "self"
          ]
        },
        {
          "name": "hash_api_key",
          "line": 188,
          "docstring": "Hash API key for storage",
          "args": [
            "self",
            "api_key"
          ]
        },
        {
          "name": "audit_log",
          "line": 192,
          "docstring": "Log security-sensitive action\n\nAll governance and critical actions should be logged",
          "args": [
            "self",
            "action",
            "user",
            "details"
          ]
        },
        {
          "name": "verify_multisig",
          "line": 211,
          "docstring": "Verify multisig signatures\n\nFor critical operations like contract upgrades\n\nArgs:\n    signatures: List of signatures\n    required_signatures: Minimum required\n\nReturns:\n    True if valid",
          "args": [
            "self",
            "signatures",
            "required_signatures"
          ]
        }
      ],
      "classes": [
        {
          "name": "SecurityManager",
          "line": 24,
          "docstring": "Security & Governance Manager\n\nFeatures:\n- API key authentication\n- Rate limiting\n- IP whitelisting\n- Multisig verification\n- Timelock enforcement\n- Audit logging\n- Emergency controls",
          "methods": [
            "__init__",
            "verify_api_key",
            "is_admin",
            "check_rate_limit",
            "block_ip",
            "unblock_ip",
            "is_blocked",
            "create_timelock",
            "check_timelock",
            "enable_emergency_mode",
            "disable_emergency_mode",
            "is_emergency_mode",
            "generate_api_key",
            "hash_api_key",
            "audit_log",
            "verify_multisig"
          ]
        }
      ],
      "imports": [
        "typing",
        "datetime",
        "hashlib",
        "secrets",
        "structlog",
        "functools",
        "fastapi",
        "fastapi.security",
        "app.config.settings"
      ],
      "keywords": [
        "database",
        "api",
        "security",
        "user",
        "auth(?:entication|orization)?"
      ]
    },
    "backend/queen-ai/app/core/redis_message_bus.py": {
      "type": "python",
      "size": 11628,
      "lines": 367,
      "functions": [
        {
          "name": "__init__",
          "line": 43,
          "docstring": null,
          "args": [
            "self"
          ]
        },
        {
          "name": "register_bee",
          "line": 91,
          "docstring": "Register a bee (create queue if doesn't exist)",
          "args": [
            "self",
            "bee_name"
          ]
        }
      ],
      "classes": [
        {
          "name": "RedisMessageBus",
          "line": 24,
          "docstring": "Redis-backed message bus for persistent inter-bee communication\n\nFeatures:\n- Persistent message queues (survives restarts)\n- Priority queuing\n- Message broadcasting\n- Request-response pattern\n- Message history for learning\n- TTL for message expiration\n\nRedis Data Structures:\n- queue:{bee_name} - List (LPUSH/RPOP for FIFO queue)\n- queue:{bee_name}:priority - List (high priority messages)\n- messages:history - Sorted Set (for audit trail)\n- subscriptions:{channel} - Pub/Sub channels",
          "methods": [
            "__init__",
            "register_bee"
          ]
        }
      ],
      "imports": [
        "asyncio",
        "json",
        "typing",
        "datetime",
        "structlog",
        "app.config.settings",
        "redis.asyncio"
      ],
      "keywords": [
        "error"
      ]
    },
    "backend/queen-ai/app/core/session_manager.py": {
      "type": "python",
      "size": 7782,
      "lines": 258,
      "functions": [
        {
          "name": "__init__",
          "line": 25,
          "docstring": null,
          "args": [
            "self"
          ]
        }
      ],
      "classes": [
        {
          "name": "SessionManager",
          "line": 15,
          "docstring": "Distributed session manager using Redis\n\nEnsures user sessions continue seamlessly even when:\n- Instance is terminated (scale down)\n- Request is routed to different instance (load balancing)\n- Instance is replaced (rolling update)",
          "methods": [
            "__init__"
          ]
        }
      ],
      "imports": [
        "json",
        "typing",
        "datetime",
        "structlog",
        "app.core.redis_message_bus"
      ],
      "keywords": [
        "user",
        "error"
      ]
    },
    "backend/queen-ai/app/core/__init__.py": {
      "type": "python",
      "size": 288,
      "lines": 12,
      "functions": [],
      "classes": [],
      "imports": [
        "orchestrator",
        "bug_analyzer",
        "autonomous_fixer",
        "code_proposal_system"
      ],
      "keywords": []
    },
    "backend/queen-ai/app/core/decision_engine.py": {
      "type": "python",
      "size": 11525,
      "lines": 309,
      "functions": [
        {
          "name": "__init__",
          "line": 34,
          "docstring": null,
          "args": [
            "self",
            "llm"
          ]
        },
        {
          "name": "_calculate_rebalance_amount",
          "line": 293,
          "docstring": "Calculate amount needed to rebalance pool",
          "args": [
            "self",
            "pool_data"
          ]
        },
        {
          "name": "_calculate_liquidity_addition",
          "line": 300,
          "docstring": "Calculate amount to add for liquidity",
          "args": [
            "self",
            "pool_data",
            "volume_24h"
          ]
        }
      ],
      "classes": [
        {
          "name": "DecisionEngine",
          "line": 20,
          "docstring": "Autonomous decision-making engine\n\nAnalyzes system state and market conditions to make\noperational decisions within Queen's authority:\n\n1. DEX Liquidity Management\n2. Staking Rewards (40M OMK ecosystem pool)\n3. Airdrops & Campaigns (25M OMK ecosystem pool)\n4. Cross-chain bridge operations\n5. Treasury proposals",
          "methods": [
            "__init__",
            "_calculate_rebalance_amount",
            "_calculate_liquidity_addition"
          ]
        }
      ],
      "imports": [
        "typing",
        "datetime",
        "structlog",
        "app.config.settings"
      ],
      "keywords": [
        "user",
        "error",
        "validation"
      ]
    },
    "backend/queen-ai/app/core/enhanced_sandbox_system.py": {
      "type": "python",
      "size": 20177,
      "lines": 557,
      "functions": [
        {
          "name": "__init__",
          "line": 24,
          "docstring": null,
          "args": [
            "self",
            "proposal_id",
            "project_root"
          ]
        },
        {
          "name": "_create_directories",
          "line": 96,
          "docstring": "Create sandbox directory structure",
          "args": [
            "self"
          ]
        },
        {
          "name": "_copy_codebase",
          "line": 102,
          "docstring": "Copy relevant codebase to sandbox",
          "args": [
            "self"
          ]
        },
        {
          "name": "_should_copy_file",
          "line": 141,
          "docstring": "Check if file should be copied to sandbox",
          "args": [
            "self",
            "path"
          ]
        },
        {
          "name": "_has_frontend_changes",
          "line": 467,
          "docstring": "Check if frontend files were modified",
          "args": [
            "self"
          ]
        },
        {
          "name": "get_diff",
          "line": 499,
          "docstring": "Get diff between original and modified file",
          "args": [
            "self",
            "file_path"
          ]
        },
        {
          "name": "cleanup",
          "line": 527,
          "docstring": "Clean up sandbox environment",
          "args": [
            "self",
            "keep_logs"
          ]
        },
        {
          "name": "_save_metadata",
          "line": 546,
          "docstring": "Save sandbox metadata",
          "args": [
            "self"
          ]
        },
        {
          "name": "get_metadata",
          "line": 551,
          "docstring": "Get sandbox metadata",
          "args": [
            "self"
          ]
        }
      ],
      "classes": [
        {
          "name": "SandboxEnvironment",
          "line": 18,
          "docstring": "Complete sandbox environment for testing code changes\nIncludes virtual environment, dependencies, and isolation",
          "methods": [
            "__init__",
            "_create_directories",
            "_copy_codebase",
            "_should_copy_file",
            "_has_frontend_changes",
            "get_diff",
            "cleanup",
            "_save_metadata",
            "get_metadata"
          ]
        }
      ],
      "imports": [
        "os",
        "json",
        "shutil",
        "subprocess",
        "venv",
        "typing",
        "datetime",
        "pathlib",
        "ast",
        "difflib"
      ],
      "keywords": [
        "error",
        "validation"
      ]
    },
    "backend/queen-ai/app/core/bug_analyzer.py": {
      "type": "python",
      "size": 6987,
      "lines": 230,
      "functions": [
        {
          "name": "__init__",
          "line": 28,
          "docstring": null,
          "args": [
            "self"
          ]
        },
        {
          "name": "_format_locations",
          "line": 152,
          "docstring": "Format file locations for display",
          "args": [
            "self",
            "locations"
          ]
        },
        {
          "name": "_parse_claude_analysis",
          "line": 162,
          "docstring": "Parse Claude's analysis response",
          "args": [
            "self",
            "claude_response"
          ]
        }
      ],
      "classes": [
        {
          "name": "BugAnalyzer",
          "line": 17,
          "docstring": "Analyze bug reports and suggest potential fixes\n\nWorkflow:\n1. Parse bug description\n2. Find likely locations in codebase\n3. Analyze relevant code\n4. Generate potential fixes",
          "methods": [
            "__init__",
            "_format_locations",
            "_parse_claude_analysis"
          ]
        }
      ],
      "imports": [
        "structlog",
        "typing",
        "datetime",
        "app.tools.codebase_navigator",
        "app.integrations.claude_integration",
        "json",
        "re"
      ],
      "keywords": [
        "user",
        "error"
      ]
    },
    "backend/queen-ai/app/core/orchestrator.py": {
      "type": "python",
      "size": 22978,
      "lines": 603,
      "functions": [
        {
          "name": "__init__",
          "line": 41,
          "docstring": null,
          "args": [
            "self"
          ]
        }
      ],
      "classes": [
        {
          "name": "QueenOrchestrator",
          "line": 28,
          "docstring": "Central AI orchestration system\n\nResponsibilities:\n- Coordinate all bee agents\n- Make autonomous decisions\n- Generate and submit blockchain proposals\n- Monitor system health\n- Route tasks to appropriate bees\n- Manage cross-chain operations",
          "methods": [
            "__init__"
          ]
        }
      ],
      "imports": [
        "asyncio",
        "typing",
        "datetime",
        "structlog",
        "app.config.settings",
        "app.utils.blockchain",
        "app.core.state_manager",
        "app.core.decision_engine",
        "app.llm.abstraction",
        "app.bees.manager",
        "app.core.message_bus",
        "app.core.hive_board",
        "app.uagents.integration",
        "app.agents.market_data_agent"
      ],
      "keywords": [
        "api",
        "security",
        "query",
        "error"
      ]
    },
    "backend/queen-ai/app/core/queen_system_manager.py": {
      "type": "python",
      "size": 22148,
      "lines": 630,
      "functions": [
        {
          "name": "__init__",
          "line": 71,
          "docstring": null,
          "args": [
            "self",
            "project_root"
          ]
        },
        {
          "name": "_load_system_index",
          "line": 103,
          "docstring": "Load or create system index - Queen's knowledge of the codebase",
          "args": [
            "self"
          ]
        },
        {
          "name": "index_system",
          "line": 122,
          "docstring": "Index the entire system - gives Queen comprehensive knowledge\nReturns: Complete system map",
          "args": [
            "self"
          ]
        },
        {
          "name": "_index_directory",
          "line": 148,
          "docstring": "Index a directory recursively",
          "args": [
            "self",
            "directory"
          ]
        },
        {
          "name": "_should_ignore",
          "line": 175,
          "docstring": "Check if file should be ignored during indexing",
          "args": [
            "self",
            "path"
          ]
        },
        {
          "name": "_count_lines",
          "line": 183,
          "docstring": "Count lines in a file",
          "args": [
            "self",
            "file_path"
          ]
        },
        {
          "name": "_index_dependencies",
          "line": 191,
          "docstring": "Index project dependencies",
          "args": [
            "self"
          ]
        },
        {
          "name": "_index_api_endpoints",
          "line": 210,
          "docstring": "Index all API endpoints",
          "args": [
            "self"
          ]
        },
        {
          "name": "_extract_endpoints",
          "line": 221,
          "docstring": "Extract API endpoints from a Python file",
          "args": [
            "self",
            "file_path"
          ]
        },
        {
          "name": "_load_queen_memory",
          "line": 244,
          "docstring": "Load Queen's persistent memory",
          "args": [
            "self"
          ]
        },
        {
          "name": "_get_default_rules",
          "line": 262,
          "docstring": "Queen's core operating rules",
          "args": [
            "self"
          ]
        },
        {
          "name": "_get_default_do_nots",
          "line": 277,
          "docstring": "Things Queen must NEVER do",
          "args": [
            "self"
          ]
        },
        {
          "name": "_get_system_goals",
          "line": 292,
          "docstring": "System's primary goals",
          "args": [
            "self"
          ]
        },
        {
          "name": "save_queen_memory",
          "line": 305,
          "docstring": "Save Queen's memory to disk",
          "args": [
            "self"
          ]
        },
        {
          "name": "add_todo",
          "line": 311,
          "docstring": "Add task to Queen's TODO list",
          "args": [
            "self",
            "task",
            "priority"
          ]
        },
        {
          "name": "complete_todo",
          "line": 321,
          "docstring": "Mark task as complete",
          "args": [
            "self",
            "task_id"
          ]
        },
        {
          "name": "_load_protected_files",
          "line": 332,
          "docstring": "Load list of protected files",
          "args": [
            "self"
          ]
        },
        {
          "name": "is_file_protected",
          "line": 336,
          "docstring": "Check if a file is protected from modification",
          "args": [
            "self",
            "file_path"
          ]
        },
        {
          "name": "can_modify_file",
          "line": 348,
          "docstring": "Check if Queen can modify a file\nReturns: (can_modify, reason)",
          "args": [
            "self",
            "file_path"
          ]
        },
        {
          "name": "can_fetch_url",
          "line": 369,
          "docstring": "Check if URL is safe to fetch\nReturns: (is_safe, reason)",
          "args": [
            "self",
            "url"
          ]
        },
        {
          "name": "_calculate_file_hash",
          "line": 495,
          "docstring": "Calculate SHA256 hash of a file",
          "args": [
            "self",
            "file_path"
          ]
        },
        {
          "name": "can_execute_command",
          "line": 505,
          "docstring": "Check if a command is safe to execute\nReturns: (is_safe, reason)",
          "args": [
            "self",
            "command"
          ]
        },
        {
          "name": "log_action",
          "line": 579,
          "docstring": "Log Queen's actions for audit trail",
          "args": [
            "self",
            "action",
            "details"
          ]
        },
        {
          "name": "get_context_summary",
          "line": 600,
          "docstring": "Generate a context summary for Queen\nThis reminds her of rules, goals, and current state",
          "args": [
            "self"
          ]
        }
      ],
      "classes": [
        {
          "name": "QueenSystemManager",
          "line": 65,
          "docstring": "Comprehensive manager for Queen's autonomous development capabilities\nwith full safety, contextual awareness, and system intelligence",
          "methods": [
            "__init__",
            "_load_system_index",
            "index_system",
            "_index_directory",
            "_should_ignore",
            "_count_lines",
            "_index_dependencies",
            "_index_api_endpoints",
            "_extract_endpoints",
            "_load_queen_memory",
            "_get_default_rules",
            "_get_default_do_nots",
            "_get_system_goals",
            "save_queen_memory",
            "add_todo",
            "complete_todo",
            "_load_protected_files",
            "is_file_protected",
            "can_modify_file",
            "can_fetch_url",
            "_calculate_file_hash",
            "can_execute_command",
            "log_action",
            "get_context_summary"
          ]
        }
      ],
      "imports": [
        "os",
        "json",
        "subprocess",
        "shutil",
        "hashlib",
        "requests",
        "typing",
        "datetime",
        "pathlib",
        "enum",
        "venv",
        "ast",
        "re",
        "urllib.parse"
      ],
      "keywords": [
        "api",
        "error",
        "security",
        "user",
        "auth(?:entication|orization)?",
        "validation"
      ]
    },
    "backend/queen-ai/app/core/code_proposal_system.py": {
      "type": "python",
      "size": 19895,
      "lines": 544,
      "functions": [
        {
          "name": "__init__",
          "line": 33,
          "docstring": null,
          "args": [
            "self",
            "project_root"
          ]
        },
        {
          "name": "create_proposal",
          "line": 57,
          "docstring": "Create a new code proposal from Queen\n\nArgs:\n    proposal_data: Proposal JSON from Queen\n    queen_session_id: Session ID for tracking\n    \nReturns:\n    Dict with proposal ID and status",
          "args": [
            "self",
            "proposal_data",
            "queen_session_id"
          ]
        },
        {
          "name": "approve_proposal",
          "line": 246,
          "docstring": "Admin approves a proposal\n\nArgs:\n    proposal_id: Proposal ID\n    admin_id: Admin who approved\n    notes: Optional approval notes\n    \nReturns:\n    Dict with approval status",
          "args": [
            "self",
            "proposal_id",
            "admin_id",
            "notes"
          ]
        },
        {
          "name": "reject_proposal",
          "line": 280,
          "docstring": "Admin rejects a proposal",
          "args": [
            "self",
            "proposal_id",
            "admin_id",
            "reason"
          ]
        },
        {
          "name": "rollback",
          "line": 357,
          "docstring": "Rollback a proposal that was applied to production",
          "args": [
            "self",
            "proposal_id",
            "admin_id"
          ]
        },
        {
          "name": "get_all_proposals",
          "line": 396,
          "docstring": "Get all proposals, optionally filtered by status",
          "args": [
            "self",
            "status"
          ]
        },
        {
          "name": "get_proposal",
          "line": 408,
          "docstring": "Get a specific proposal",
          "args": [
            "self",
            "proposal_id"
          ]
        },
        {
          "name": "_copy_to_sandbox",
          "line": 414,
          "docstring": "Copy relevant code to sandbox",
          "args": [
            "self",
            "sandbox_path"
          ]
        },
        {
          "name": "_run_linting",
          "line": 430,
          "docstring": "Run Python linting",
          "args": [
            "self",
            "sandbox_path"
          ]
        },
        {
          "name": "_run_python_tests",
          "line": 452,
          "docstring": "Run Python tests if they exist",
          "args": [
            "self",
            "sandbox_path"
          ]
        },
        {
          "name": "_check_syntax",
          "line": 474,
          "docstring": "Check Python syntax",
          "args": [
            "self",
            "sandbox_path",
            "files"
          ]
        },
        {
          "name": "_create_backup",
          "line": 493,
          "docstring": "Create backup of files before modifying",
          "args": [
            "self",
            "files_to_backup"
          ]
        },
        {
          "name": "_restore_backup",
          "line": 508,
          "docstring": "Restore files from backup",
          "args": [
            "self",
            "backup_id"
          ]
        },
        {
          "name": "_save_proposal",
          "line": 522,
          "docstring": "Save proposal to disk",
          "args": [
            "self",
            "proposal"
          ]
        },
        {
          "name": "_load_proposals",
          "line": 528,
          "docstring": "Load all proposals from disk",
          "args": [
            "self"
          ]
        }
      ],
      "classes": [
        {
          "name": "ProposalStatus",
          "line": 16,
          "docstring": null,
          "methods": []
        },
        {
          "name": "CodeProposalSystem",
          "line": 28,
          "docstring": "Manages the complete lifecycle of Queen's code proposals",
          "methods": [
            "__init__",
            "create_proposal",
            "approve_proposal",
            "reject_proposal",
            "rollback",
            "get_all_proposals",
            "get_proposal",
            "_copy_to_sandbox",
            "_run_linting",
            "_run_python_tests",
            "_check_syntax",
            "_create_backup",
            "_restore_backup",
            "_save_proposal",
            "_load_proposals"
          ]
        }
      ],
      "imports": [
        "os",
        "json",
        "subprocess",
        "shutil",
        "typing",
        "datetime",
        "pathlib",
        "enum",
        "uuid"
      ],
      "keywords": [
        "error"
      ]
    },
    "backend/queen-ai/app/core/emergency_controls.py": {
      "type": "python",
      "size": 9586,
      "lines": 311,
      "functions": [
        {
          "name": "__init__",
          "line": 51,
          "docstring": null,
          "args": [
            "self"
          ]
        },
        {
          "name": "trigger_emergency_shutdown",
          "line": 60,
          "docstring": "Emergency shutdown - halt all operations\n\nRequires manual restart after resolution",
          "args": [
            "self",
            "reason",
            "triggered_by",
            "severity"
          ]
        },
        {
          "name": "pause_system",
          "line": 93,
          "docstring": "Pause system - stop new operations but maintain state\n\nLess severe than shutdown, can be resumed",
          "args": [
            "self",
            "reason"
          ]
        },
        {
          "name": "resume_system",
          "line": 114,
          "docstring": "Resume paused system",
          "args": [
            "self"
          ]
        },
        {
          "name": "pause_bee",
          "line": 123,
          "docstring": "Pause specific bee\n\nBee will not receive or process tasks",
          "args": [
            "self",
            "bee_name",
            "reason"
          ]
        },
        {
          "name": "resume_bee",
          "line": 145,
          "docstring": "Resume paused bee",
          "args": [
            "self",
            "bee_name"
          ]
        },
        {
          "name": "is_bee_paused",
          "line": 151,
          "docstring": "Check if bee is paused",
          "args": [
            "self",
            "bee_name"
          ]
        },
        {
          "name": "disable_feature",
          "line": 155,
          "docstring": "Disable specific feature\n\nExamples: \"staking\", \"governance\", \"private_sale\"",
          "args": [
            "self",
            "feature",
            "reason"
          ]
        },
        {
          "name": "enable_feature",
          "line": 168,
          "docstring": "Re-enable feature",
          "args": [
            "self",
            "feature"
          ]
        },
        {
          "name": "is_feature_enabled",
          "line": 174,
          "docstring": "Check if feature is enabled",
          "args": [
            "self",
            "feature"
          ]
        },
        {
          "name": "record_failure",
          "line": 178,
          "docstring": "Record operation failure for circuit breaker with time-based reset\n\nReturns:\n    True if circuit breaker triggered (too many failures)",
          "args": [
            "self",
            "operation"
          ]
        },
        {
          "name": "reset_circuit_breaker",
          "line": 227,
          "docstring": "Reset circuit breaker for operation",
          "args": [
            "self",
            "operation"
          ]
        },
        {
          "name": "record_success",
          "line": 237,
          "docstring": "Record successful operation (for HALF_OPEN state)",
          "args": [
            "self",
            "operation"
          ]
        },
        {
          "name": "can_operate",
          "line": 246,
          "docstring": "Check if system can perform operations",
          "args": [
            "self"
          ]
        },
        {
          "name": "get_state",
          "line": 250,
          "docstring": "Get current emergency state",
          "args": [
            "self"
          ]
        },
        {
          "name": "override_decision",
          "line": 260,
          "docstring": "Override an AI decision\n\nFor when human intervention is needed",
          "args": [
            "self",
            "decision_id",
            "override_value",
            "reason",
            "overridden_by"
          ]
        },
        {
          "name": "force_recovery",
          "line": 290,
          "docstring": "Force system recovery from shutdown\n\nADMIN ONLY - requires manual intervention",
          "args": [
            "self"
          ]
        }
      ],
      "classes": [
        {
          "name": "EmergencyLevel",
          "line": 14,
          "docstring": "Emergency severity levels",
          "methods": []
        },
        {
          "name": "SystemState",
          "line": 22,
          "docstring": "System operational states",
          "methods": []
        },
        {
          "name": "EmergencyControls",
          "line": 31,
          "docstring": "Emergency Control System\n\nFeatures:\n- Emergency shutdown (all operations halt)\n- Pause specific bees\n- Override AI decisions\n- Circuit breaker for failed operations\n- Emergency notifications\n- State recovery\n\nUse Cases:\n- Security breach detected\n- Smart contract vulnerability found\n- Anomalous AI behavior\n- Market manipulation detected\n- System instability",
          "methods": [
            "__init__",
            "trigger_emergency_shutdown",
            "pause_system",
            "resume_system",
            "pause_bee",
            "resume_bee",
            "is_bee_paused",
            "disable_feature",
            "enable_feature",
            "is_feature_enabled",
            "record_failure",
            "reset_circuit_breaker",
            "record_success",
            "can_operate",
            "get_state",
            "override_decision",
            "force_recovery"
          ]
        }
      ],
      "imports": [
        "typing",
        "datetime",
        "enum",
        "structlog",
        "datetime"
      ],
      "keywords": [
        "security",
        "error"
      ]
    },
    "backend/queen-ai/app/core/stateless_architecture.py": {
      "type": "python",
      "size": 13215,
      "lines": 377,
      "functions": [
        {
          "name": "__init__",
          "line": 36,
          "docstring": null,
          "args": [
            "self"
          ]
        },
        {
          "name": "_generate_instance_id",
          "line": 48,
          "docstring": "Generate unique instance ID",
          "args": [
            "self"
          ]
        },
        {
          "name": "_setup_shutdown_handlers",
          "line": 65,
          "docstring": "Setup handlers for graceful shutdown",
          "args": [
            "self"
          ]
        },
        {
          "name": "_handle_shutdown_signal",
          "line": 72,
          "docstring": "Handle shutdown signal",
          "args": [
            "self",
            "signum",
            "frame"
          ]
        },
        {
          "name": "is_shutting_down",
          "line": 357,
          "docstring": "Check if instance is shutting down",
          "args": [
            "self"
          ]
        },
        {
          "name": "add_pending_operation",
          "line": 361,
          "docstring": "Add operation to pending queue for persistence",
          "args": [
            "self",
            "operation"
          ]
        },
        {
          "name": "register_session",
          "line": 365,
          "docstring": "Register active session for persistence",
          "args": [
            "self",
            "session_id",
            "session_data"
          ]
        },
        {
          "name": "remove_session",
          "line": 369,
          "docstring": "Remove session when completed",
          "args": [
            "self",
            "session_id"
          ]
        }
      ],
      "classes": [
        {
          "name": "StatelessArchitectureManager",
          "line": 26,
          "docstring": "Manages stateless architecture for cloud auto-scaling\n\nEnsures no data loss when instances are:\n- Created (scale up)\n- Destroyed (scale down)\n- Replaced (rolling updates)",
          "methods": [
            "__init__",
            "_generate_instance_id",
            "_setup_shutdown_handlers",
            "_handle_shutdown_signal",
            "is_shutting_down",
            "add_pending_operation",
            "register_session",
            "remove_session"
          ]
        }
      ],
      "imports": [
        "asyncio",
        "time",
        "typing",
        "datetime",
        "structlog",
        "os",
        "signal",
        "uuid",
        "socket",
        "app.db.base",
        "app.core.redis_message_bus",
        "app.learning.bigquery_logger",
        "app.db.base",
        "app.core.redis_message_bus",
        "app.core.redis_message_bus",
        "app.db.base",
        "app.db.models",
        "app.core.redis_message_bus",
        "app.core.redis_message_bus"
      ],
      "keywords": [
        "database",
        "query",
        "error"
      ]
    },
    "backend/queen-ai/app/config/logging_config.py": {
      "type": "python",
      "size": 1829,
      "lines": 63,
      "functions": [
        {
          "name": "setup_logging",
          "line": 11,
          "docstring": "Configure structured logging with structlog",
          "args": []
        },
        {
          "name": "get_logger",
          "line": 60,
          "docstring": "Get a structured logger instance",
          "args": [
            "name"
          ]
        }
      ],
      "classes": [],
      "imports": [
        "logging",
        "sys",
        "structlog",
        "typing",
        "settings"
      ],
      "keywords": []
    },
    "backend/queen-ai/app/config/__init__.py": {
      "type": "python",
      "size": 55,
      "lines": 4,
      "functions": [],
      "classes": [],
      "imports": [
        "settings"
      ],
      "keywords": []
    },
    "backend/queen-ai/app/config/settings.py": {
      "type": "python",
      "size": 3916,
      "lines": 115,
      "functions": [],
      "classes": [
        {
          "name": "Settings",
          "line": 9,
          "docstring": "Application settings from environment variables",
          "methods": []
        },
        {
          "name": "Config",
          "line": 109,
          "docstring": null,
          "methods": []
        }
      ],
      "imports": [
        "pydantic_settings",
        "typing",
        "os"
      ],
      "keywords": [
        "api",
        "security",
        "database"
      ]
    },
    "backend/queen-ai/app/learning/observer.py": {
      "type": "python",
      "size": 12418,
      "lines": 405,
      "functions": [
        {
          "name": "__init__",
          "line": 50,
          "docstring": null,
          "args": [
            "self"
          ]
        },
        {
          "name": "_anonymize_user_id",
          "line": 78,
          "docstring": "Anonymize user ID using SHA-256 hash\n\nOne-way hash ensures privacy while allowing pattern analysis",
          "args": [
            "self",
            "user_id"
          ]
        },
        {
          "name": "pause_collection",
          "line": 337,
          "docstring": "Pause data collection (admin control)",
          "args": [
            "self"
          ]
        },
        {
          "name": "resume_collection",
          "line": 342,
          "docstring": "Resume data collection",
          "args": [
            "self"
          ]
        },
        {
          "name": "is_collecting",
          "line": 347,
          "docstring": "Check if actively collecting data",
          "args": [
            "self"
          ]
        }
      ],
      "classes": [
        {
          "name": "LearningObserver",
          "line": 19,
          "docstring": "Learning Function Observer\n\nPurpose:\n- Passively observe all system interactions\n- Log to BigQuery for future model training\n- Privacy-preserving (anonymize user data)\n- Non-blocking (async background logging)\n- Respects user preferences (GDPR compliant)\n\nWhat Gets Logged:\n- All LLM conversations (prompts + responses)\n- Bee decisions and reasoning\n- User queries and satisfaction\n- Pattern detections and outcomes\n- System events and behaviors\n\nWhat Doesn't Get Logged:\n- Private keys or sensitive credentials\n- Personally identifiable information (PII)\n- User IP addresses\n- Financial account details\n\nData is used ONLY for:\n- Training future self-hosted OMK Hive model\n- Improving bee decision quality\n- Pattern recognition enhancement\n- System optimization",
          "methods": [
            "__init__",
            "_anonymize_user_id",
            "pause_collection",
            "resume_collection",
            "is_collecting"
          ]
        }
      ],
      "imports": [
        "asyncio",
        "typing",
        "datetime",
        "hashlib",
        "structlog",
        "app.learning.bigquery_logger",
        "app.config.settings",
        "uuid",
        "uuid",
        "uuid"
      ],
      "keywords": [
        "user",
        "query",
        "error",
        "validation"
      ]
    },
    "backend/queen-ai/app/learning/__init__.py": {
      "type": "python",
      "size": 308,
      "lines": 10,
      "functions": [],
      "classes": [],
      "imports": [
        "app.learning.observer",
        "app.learning.bigquery_logger"
      ],
      "keywords": []
    },
    "backend/queen-ai/app/learning/bigquery_logger.py": {
      "type": "python",
      "size": 18594,
      "lines": 499,
      "functions": [
        {
          "name": "__init__",
          "line": 43,
          "docstring": null,
          "args": [
            "self"
          ]
        }
      ],
      "classes": [
        {
          "name": "BigQueryLogger",
          "line": 24,
          "docstring": "BigQuery data logger for learning function\n\nTables:\n- llm_conversations: All LLM interactions\n- bee_decisions: Bee decision logs\n- user_interactions: User behavior\n- system_events: System-level events\n- pattern_data: Pattern recognition training data\n\nFeatures:\n- Async batch inserts (cost optimization)\n- Automatic schema creation\n- Partitioned tables (by date)\n- Data retention policies\n- Privacy-preserving (anonymized)",
          "methods": [
            "__init__"
          ]
        }
      ],
      "imports": [
        "typing",
        "datetime",
        "structlog",
        "app.config.settings",
        "google.cloud",
        "google.api_core"
      ],
      "keywords": [
        "error",
        "transaction",
        "query",
        "user",
        "validation"
      ]
    },
    "backend/queen-ai/app/uagents/__init__.py": {
      "type": "python",
      "size": 187,
      "lines": 9,
      "functions": [],
      "classes": [],
      "imports": [
        "app.uagents.integration"
      ],
      "keywords": []
    },
    "backend/queen-ai/app/uagents/integration.py": {
      "type": "python",
      "size": 15756,
      "lines": 443,
      "functions": [
        {
          "name": "__init__",
          "line": 85,
          "docstring": null,
          "args": [
            "self",
            "bee_manager"
          ]
        },
        {
          "name": "get_stats",
          "line": 432,
          "docstring": "Get ASI integration statistics",
          "args": [
            "self"
          ]
        }
      ],
      "classes": [
        {
          "name": "ASIIntegration",
          "line": 67,
          "docstring": "Fetch.ai ASI Integration Manager\n\nConnects OMK Hive to the Artificial Superintelligence ecosystem:\n- Registers Queen and Bees as uAgents\n- Enables AI-to-AI communication\n- Participates in AI marketplace\n- Discovers and uses external AI services\n- Shares hive services with other agents\n\nArchitecture:\n- Queen Agent: Main orchestrator agent\n- Bee Agents: Specialized service agents\n- Protocols: Communication standards\n- Almanac: Agent discovery service",
          "methods": [
            "__init__",
            "get_stats"
          ]
        },
        {
          "name": "PoolHealthQuery",
          "line": 34,
          "docstring": "Query for pool health information",
          "methods": []
        },
        {
          "name": "PoolHealthResponse",
          "line": 39,
          "docstring": "Response with pool health data",
          "methods": []
        },
        {
          "name": "GovernanceProposal",
          "line": 47,
          "docstring": "Governance proposal sharing between agents",
          "methods": []
        },
        {
          "name": "StakingInfo",
          "line": 54,
          "docstring": "Staking information request/response",
          "methods": []
        },
        {
          "name": "TreasuryStatus",
          "line": 60,
          "docstring": "Treasury health status",
          "methods": []
        }
      ],
      "imports": [
        "asyncio",
        "typing",
        "structlog",
        "datetime",
        "app.config.settings",
        "uagents",
        "uagents.setup"
      ],
      "keywords": [
        "error",
        "wallet",
        "security",
        "query",
        "validation"
      ]
    },
    "backend/queen-ai/app/agents/market_data_agent.py": {
      "type": "python",
      "size": 18587,
      "lines": 438,
      "functions": [
        {
          "name": "__init__",
          "line": 34,
          "docstring": null,
          "args": [
            "self",
            "queen_instance"
          ]
        },
        {
          "name": "_calculate_liquidity",
          "line": 359,
          "docstring": "Calculate liquidity pool data",
          "args": [
            "self",
            "omk_data"
          ]
        },
        {
          "name": "set_omk_contract",
          "line": 378,
          "docstring": "Admin sets OMK contract address - switches to on-chain mode",
          "args": [
            "self",
            "address",
            "chain"
          ]
        },
        {
          "name": "set_otc_price",
          "line": 385,
          "docstring": "Admin sets OTC price - takes precedence",
          "args": [
            "self",
            "price"
          ]
        },
        {
          "name": "get_config",
          "line": 391,
          "docstring": "Get current agent configuration",
          "args": [
            "self"
          ]
        },
        {
          "name": "_get_fallback_crypto_data",
          "line": 405,
          "docstring": "Fallback crypto data when API fails",
          "args": [
            "self"
          ]
        },
        {
          "name": "_get_fallback_omk_data",
          "line": 415,
          "docstring": "Fallback OMK data",
          "args": [
            "self"
          ]
        },
        {
          "name": "_get_complete_fallback_data",
          "line": 428,
          "docstring": "Complete fallback when everything fails",
          "args": [
            "self"
          ]
        }
      ],
      "classes": [
        {
          "name": "MarketDataAgent",
          "line": 23,
          "docstring": "Autonomous agent for comprehensive market data management\n\nData Sources:\n- CoinGecko API: Crypto prices and market data\n- CryptoPanic API: Crypto news\n- Blockchain RPC: On-chain OMK data (when contract exists)\n- Queen's Bees: OTC data calculation",
          "methods": [
            "__init__",
            "_calculate_liquidity",
            "set_omk_contract",
            "set_otc_price",
            "get_config",
            "_get_fallback_crypto_data",
            "_get_fallback_omk_data",
            "_get_complete_fallback_data"
          ]
        }
      ],
      "imports": [
        "aiohttp",
        "asyncio",
        "typing",
        "datetime",
        "structlog",
        "decimal",
        "os"
      ],
      "keywords": [
        "api",
        "query",
        "token",
        "error"
      ]
    },
    "backend/queen-ai/app/agents/__init__.py": {
      "type": "python",
      "size": 279,
      "lines": 11,
      "functions": [],
      "classes": [],
      "imports": [
        "app.agents.market_data_agent"
      ],
      "keywords": []
    },
    "backend/queen-ai/app/utils/logging_config.py": {
      "type": "python",
      "size": 11845,
      "lines": 411,
      "functions": [
        {
          "name": "configure_logging",
          "line": 17,
          "docstring": "Configure structured logging for the entire application\n\nFeatures:\n- Structured logging with structlog\n- Automatic log rotation\n- Different formats for console vs file\n- Cloud logging integration (GCP)\n- Performance-optimized\n\nArgs:\n    log_level: Logging level (DEBUG, INFO, WARNING, ERROR, CRITICAL)\n    log_dir: Directory for log files\n    enable_json: Enable JSON formatting\n    enable_cloud: Enable cloud logging (GCP)",
          "args": [
            "log_level",
            "log_dir",
            "enable_json",
            "enable_cloud"
          ]
        },
        {
          "name": "_setup_file_handlers",
          "line": 95,
          "docstring": "Setup rotating file handlers",
          "args": [
            "log_path",
            "log_level"
          ]
        },
        {
          "name": "_setup_cloud_logging",
          "line": 157,
          "docstring": "Setup Google Cloud Logging",
          "args": []
        },
        {
          "name": "get_logger",
          "line": 187,
          "docstring": "Get a logger instance\n\nUsage:\n    logger = get_logger(__name__)\n    logger.info(\"Message\", key=\"value\")",
          "args": [
            "name"
          ]
        },
        {
          "name": "log_performance",
          "line": 198,
          "docstring": "Log performance metrics",
          "args": [
            "func_name",
            "duration_ms"
          ]
        },
        {
          "name": "log_api_request",
          "line": 211,
          "docstring": "Log API requests",
          "args": [
            "method",
            "path",
            "status_code",
            "duration_ms"
          ]
        },
        {
          "name": "log_security_event",
          "line": 226,
          "docstring": "Log security events",
          "args": [
            "event_type",
            "severity"
          ]
        },
        {
          "name": "log_llm_interaction",
          "line": 240,
          "docstring": "Log LLM interactions",
          "args": [
            "provider",
            "model",
            "prompt_tokens",
            "completion_tokens",
            "cost",
            "duration_ms"
          ]
        },
        {
          "name": "log_bee_action",
          "line": 264,
          "docstring": "Log bee actions",
          "args": [
            "bee_name",
            "action",
            "success",
            "duration_ms"
          ]
        },
        {
          "name": "log_decision",
          "line": 285,
          "docstring": "Log Queen AI decisions",
          "args": [
            "decision_type",
            "decision",
            "confidence",
            "reasoning"
          ]
        },
        {
          "name": "log_blockchain_transaction",
          "line": 305,
          "docstring": "Log blockchain transactions",
          "args": [
            "tx_type",
            "tx_hash",
            "status",
            "gas_used"
          ]
        },
        {
          "name": "log_function_call",
          "line": 326,
          "docstring": "Decorator to automatically log function calls\n\nUsage:\n    @log_function_call()\n    async def my_function(arg1, arg2):\n        ...",
          "args": [
            "logger_name"
          ]
        },
        {
          "name": "decorator",
          "line": 338,
          "docstring": null,
          "args": [
            "func"
          ]
        },
        {
          "name": "sync_wrapper",
          "line": 372,
          "docstring": null,
          "args": []
        }
      ],
      "classes": [],
      "imports": [
        "logging",
        "sys",
        "pathlib",
        "datetime",
        "structlog",
        "structlog.stdlib",
        "typing",
        "app.config.settings",
        "logging.handlers",
        "functools",
        "time",
        "google.cloud.logging",
        "google.cloud.logging.handlers",
        "asyncio"
      ],
      "keywords": [
        "api",
        "security",
        "transaction",
        "error"
      ]
    },
    "backend/queen-ai/app/utils/__init__.py": {
      "type": "python",
      "size": 79,
      "lines": 4,
      "functions": [],
      "classes": [],
      "imports": [
        "blockchain"
      ],
      "keywords": []
    },
    "backend/queen-ai/app/utils/deployment_helpers.py": {
      "type": "python",
      "size": 11377,
      "lines": 391,
      "functions": [
        {
          "name": "generate_deployment_script",
          "line": 20,
          "docstring": "Generate a Hardhat deployment script for a specific contract\n\nArgs:\n    contract_name: Name of the contract to deploy\n    constructor_args: Constructor arguments as a list\n    deployment_id: Unique deployment ID\n    \nReturns:\n    Path to the generated script",
          "args": [
            "contract_name",
            "constructor_args",
            "deployment_id"
          ]
        },
        {
          "name": "execute_hardhat_deployment",
          "line": 66,
          "docstring": "Execute a Hardhat deployment script\n\nArgs:\n    script_path: Path to the deployment script\n    network: Network to deploy to (localhost, sepolia, mainnet)\n    timeout: Timeout in seconds\n    \nReturns:\n    Deployment result dictionary",
          "args": [
            "script_path",
            "network",
            "timeout"
          ]
        },
        {
          "name": "parse_deployment_output",
          "line": 140,
          "docstring": "Parse deployment output to extract contract address and transaction hash\n\nArgs:\n    output: Raw stdout from Hardhat deployment\n    \nReturns:\n    Parsed deployment result",
          "args": [
            "output"
          ]
        },
        {
          "name": "cleanup_deployment_script",
          "line": 202,
          "docstring": "Clean up generated deployment script after execution\n\nArgs:\n    script_path: Path to the script to delete\n    \nReturns:\n    True if deleted, False otherwise",
          "args": [
            "script_path"
          ]
        },
        {
          "name": "verify_contract_on_etherscan",
          "line": 223,
          "docstring": "Verify contract on Etherscan\n\nArgs:\n    contract_address: Deployed contract address\n    contract_name: Name of the contract\n    constructor_args: Constructor arguments\n    network: Network name\n    timeout: Timeout in seconds\n    \nReturns:\n    Verification result",
          "args": [
            "contract_address",
            "contract_name",
            "constructor_args",
            "network",
            "timeout"
          ]
        },
        {
          "name": "get_network_explorer_url",
          "line": 299,
          "docstring": "Get Etherscan URL for a contract\n\nArgs:\n    network: Network name\n    address: Contract address\n    \nReturns:\n    Etherscan URL",
          "args": [
            "network",
            "address"
          ]
        },
        {
          "name": "get_deployment_info_path",
          "line": 324,
          "docstring": "Get path to deployment info file\n\nArgs:\n    network: Network name\n    contract_name: Contract name\n    \nReturns:\n    Path to deployment info JSON file",
          "args": [
            "network",
            "contract_name"
          ]
        },
        {
          "name": "save_deployment_info",
          "line": 338,
          "docstring": "Save deployment information to file\n\nArgs:\n    network: Network name\n    contract_name: Contract name\n    deployment_data: Deployment data to save\n    \nReturns:\n    True if saved successfully",
          "args": [
            "network",
            "contract_name",
            "deployment_data"
          ]
        },
        {
          "name": "load_deployment_info",
          "line": 369,
          "docstring": "Load deployment information from file\n\nArgs:\n    network: Network name\n    contract_name: Contract name\n    \nReturns:\n    Deployment data or None if not found",
          "args": [
            "network",
            "contract_name"
          ]
        }
      ],
      "classes": [],
      "imports": [
        "os",
        "re",
        "json",
        "subprocess",
        "pathlib",
        "typing",
        "datetime",
        "structlog"
      ],
      "keywords": [
        "transaction",
        "error"
      ]
    },
    "backend/queen-ai/app/utils/blockchain.py": {
      "type": "python",
      "size": 16293,
      "lines": 452,
      "functions": [
        {
          "name": "__init__",
          "line": 29,
          "docstring": null,
          "args": [
            "self"
          ]
        }
      ],
      "classes": [
        {
          "name": "BlockchainConnector",
          "line": 18,
          "docstring": "Connects Queen AI to Ethereum blockchain\n\nManages interactions with:\n- BeeSpawner (register/update bees)\n- All governance contracts (submit proposals)\n- System Dashboard (read metrics)\n- Bridge (manage cross-chain)",
          "methods": [
            "__init__"
          ]
        }
      ],
      "imports": [
        "typing",
        "web3",
        "web3.contract",
        "eth_account",
        "structlog",
        "pathlib",
        "json",
        "app.config.settings"
      ],
      "keywords": [
        "transaction",
        "error",
        "wallet"
      ]
    },
    "backend/queen-ai/app/models/database.py": {
      "type": "python",
      "size": 11333,
      "lines": 370,
      "functions": [
        {
          "name": "load_json",
          "line": 22,
          "docstring": "Load JSON file",
          "args": [
            "file_path",
            "default"
          ]
        },
        {
          "name": "save_json",
          "line": 33,
          "docstring": "Save JSON file",
          "args": [
            "file_path",
            "data"
          ]
        },
        {
          "name": "get_all_users",
          "line": 43,
          "docstring": "Get all users",
          "args": []
        },
        {
          "name": "get_user_by_id",
          "line": 47,
          "docstring": "Get user by ID",
          "args": [
            "user_id"
          ]
        },
        {
          "name": "get_user_by_email",
          "line": 75,
          "docstring": "Get user by email",
          "args": [
            "email"
          ]
        },
        {
          "name": "update_user",
          "line": 80,
          "docstring": "Update user data",
          "args": [
            "user_id",
            "data"
          ]
        },
        {
          "name": "create_user",
          "line": 114,
          "docstring": "Create new user",
          "args": [
            "user_data"
          ]
        },
        {
          "name": "get_all_otc_requests",
          "line": 130,
          "docstring": "Get all OTC requests, optionally filtered by status",
          "args": [
            "status"
          ]
        },
        {
          "name": "get_otc_request_by_id",
          "line": 139,
          "docstring": "Get OTC request by ID",
          "args": [
            "request_id"
          ]
        },
        {
          "name": "create_otc_request",
          "line": 144,
          "docstring": "Create new OTC request",
          "args": [
            "request_data"
          ]
        },
        {
          "name": "update_otc_request",
          "line": 159,
          "docstring": "Update OTC request",
          "args": [
            "request_id",
            "updates"
          ]
        },
        {
          "name": "approve_otc_request",
          "line": 172,
          "docstring": "Approve OTC request",
          "args": [
            "request_id",
            "approved_by"
          ]
        },
        {
          "name": "reject_otc_request",
          "line": 180,
          "docstring": "Reject OTC request",
          "args": [
            "request_id",
            "reason",
            "rejected_by"
          ]
        },
        {
          "name": "get_analytics",
          "line": 191,
          "docstring": "Get analytics data",
          "args": []
        },
        {
          "name": "update_analytics",
          "line": 216,
          "docstring": "Update analytics data",
          "args": [
            "data"
          ]
        },
        {
          "name": "log_transaction",
          "line": 222,
          "docstring": "Log transaction for analytics",
          "args": [
            "tx_data"
          ]
        },
        {
          "name": "log_user_signup",
          "line": 237,
          "docstring": "Log a user signup",
          "args": [
            "user_data"
          ]
        },
        {
          "name": "get_system_config",
          "line": 255,
          "docstring": "Get system configuration",
          "args": []
        },
        {
          "name": "update_system_config",
          "line": 288,
          "docstring": "Update system configuration",
          "args": [
            "updates"
          ]
        },
        {
          "name": "get_active_otc_flow",
          "line": 296,
          "docstring": "Get active OTC flow based on config",
          "args": []
        },
        {
          "name": "initialize_database",
          "line": 313,
          "docstring": "Initialize database files",
          "args": []
        },
        {
          "name": "get_all_private_investors",
          "line": 342,
          "docstring": "Get all private investors",
          "args": []
        },
        {
          "name": "create_private_investor",
          "line": 346,
          "docstring": "Create new private investor",
          "args": [
            "data"
          ]
        },
        {
          "name": "get_private_investor",
          "line": 359,
          "docstring": "Get private investor by ID",
          "args": [
            "investor_id"
          ]
        },
        {
          "name": "update_private_investor",
          "line": 363,
          "docstring": "Update private investor",
          "args": [
            "investor_id",
            "data"
          ]
        }
      ],
      "classes": [],
      "imports": [
        "json",
        "os",
        "typing",
        "datetime",
        "pathlib",
        "app.database.connection",
        "app.database.models",
        "app.database.connection",
        "app.database.models",
        "datetime"
      ],
      "keywords": [
        "database",
        "error",
        "transaction",
        "query",
        "user"
      ]
    },
    "backend/queen-ai/app/models/system_config.py": {
      "type": "python",
      "size": 2034,
      "lines": 75,
      "functions": [
        {
          "name": "get_config",
          "line": 50,
          "docstring": "Get current system configuration",
          "args": []
        },
        {
          "name": "update_config",
          "line": 54,
          "docstring": "Update system configuration",
          "args": []
        },
        {
          "name": "get_active_otc_flow",
          "line": 62,
          "docstring": "Determine which OTC flow to show users",
          "args": []
        }
      ],
      "classes": [
        {
          "name": "OTCPhase",
          "line": 11,
          "docstring": "OTC Sale Phases",
          "methods": []
        },
        {
          "name": "SystemConfig",
          "line": 17,
          "docstring": "Global system configuration",
          "methods": []
        },
        {
          "name": "Config",
          "line": 44,
          "docstring": null,
          "methods": []
        }
      ],
      "imports": [
        "enum",
        "typing",
        "datetime",
        "pydantic"
      ],
      "keywords": [
        "database",
        "token"
      ]
    },
    "backend/queen-ai/app/integrations/elastic_search.py": {
      "type": "python",
      "size": 15652,
      "lines": 476,
      "functions": [
        {
          "name": "__init__",
          "line": 32,
          "docstring": "Initialize Elastic connection\n\nArgs:\n    cloud_id: Elastic Cloud ID\n    api_key: Elastic API key\n    gemini_client: Gemini client for embeddings",
          "args": [
            "self",
            "cloud_id",
            "api_key",
            "gemini_client"
          ]
        }
      ],
      "classes": [
        {
          "name": "ElasticSearchIntegration",
          "line": 21,
          "docstring": "Elastic Search AI Platform integration\n\nProvides:\n- Hybrid search (semantic + keyword)\n- Vector embeddings via Gemini\n- RAG for Queen AI\n- Activity logging for all bees",
          "methods": [
            "__init__"
          ]
        }
      ],
      "imports": [
        "os",
        "typing",
        "datetime",
        "structlog",
        "elasticsearch",
        "elasticsearch.helpers",
        "google.generativeai",
        "app.config.settings",
        "google.generativeai",
        "app.config.settings"
      ],
      "keywords": [
        "api",
        "error",
        "transaction",
        "query",
        "user"
      ]
    },
    "backend/queen-ai/app/integrations/__init__.py": {
      "type": "python",
      "size": 239,
      "lines": 10,
      "functions": [],
      "classes": [],
      "imports": [
        "app.integrations.elastic_search"
      ],
      "keywords": []
    },
    "backend/queen-ai/app/integrations/test_elastic.py": {
      "type": "python",
      "size": 2800,
      "lines": 87,
      "functions": [
        {
          "name": "test_elastic_syntax",
          "line": 8,
          "docstring": "Test Elastic integration syntax without importing dependencies",
          "args": []
        }
      ],
      "classes": [],
      "imports": [
        "ast",
        "os",
        "traceback"
      ],
      "keywords": [
        "error",
        "validation"
      ]
    },
    "backend/queen-ai/app/integrations/claude_integration.py": {
      "type": "python",
      "size": 17212,
      "lines": 465,
      "functions": [
        {
          "name": "__init__",
          "line": 24,
          "docstring": null,
          "args": [
            "self",
            "api_key",
            "context"
          ]
        },
        {
          "name": "_build_system_prompt",
          "line": 140,
          "docstring": "Build comprehensive system prompt for Queen AI",
          "args": [
            "self",
            "additional_context",
            "include_system_info"
          ]
        },
        {
          "name": "_get_system_state",
          "line": 317,
          "docstring": "Get current system state for context",
          "args": [
            "self"
          ]
        },
        {
          "name": "_format_conversation_history",
          "line": 329,
          "docstring": "Format conversation history for Claude API",
          "args": [
            "self"
          ]
        },
        {
          "name": "_detect_code_proposal",
          "line": 339,
          "docstring": "Detect if message contains a code proposal",
          "args": [
            "self",
            "message"
          ]
        },
        {
          "name": "record_correction",
          "line": 392,
          "docstring": "Record a correction for future learning",
          "args": [
            "self",
            "issue",
            "solution",
            "details"
          ]
        },
        {
          "name": "record_pattern",
          "line": 402,
          "docstring": "Record a new pattern discovered",
          "args": [
            "self",
            "pattern_name",
            "description",
            "example"
          ]
        },
        {
          "name": "clear_history",
          "line": 446,
          "docstring": "Clear conversation history",
          "args": [
            "self"
          ]
        },
        {
          "name": "get_conversation_history",
          "line": 450,
          "docstring": "Get full conversation history",
          "args": [
            "self"
          ]
        }
      ],
      "classes": [
        {
          "name": "ClaudeQueenIntegration",
          "line": 19,
          "docstring": "Claude integration specifically designed for Queen AI's autonomous development capabilities",
          "methods": [
            "__init__",
            "_build_system_prompt",
            "_get_system_state",
            "_format_conversation_history",
            "_detect_code_proposal",
            "record_correction",
            "record_pattern",
            "clear_history",
            "get_conversation_history"
          ]
        }
      ],
      "imports": [
        "os",
        "anthropic",
        "typing",
        "datetime",
        "json",
        "structlog",
        "app.llm.system_knowledge",
        "app.learning.observer",
        "app.tools.database_query_tool"
      ],
      "keywords": [
        "api",
        "database",
        "error",
        "security",
        "user",
        "auth(?:entication|orization)?"
      ]
    },
    "backend/queen-ai/app/blockchain/solana_client.py": {
      "type": "python",
      "size": 17785,
      "lines": 575,
      "functions": [
        {
          "name": "__init__",
          "line": 78,
          "docstring": null,
          "args": [
            "self",
            "rpc_url"
          ]
        },
        {
          "name": "__init__",
          "line": 45,
          "docstring": null,
          "args": [
            "self",
            "skip_preflight",
            "preflight_commitment"
          ]
        }
      ],
      "classes": [
        {
          "name": "SolanaClient",
          "line": 64,
          "docstring": "Complete Solana blockchain client\n\nFeatures:\n- Connection management\n- Transaction creation and signing\n- SPL token interactions\n- Priority fee optimization\n- Transaction confirmation\n- Account monitoring\n- Program interaction",
          "methods": [
            "__init__"
          ]
        },
        {
          "name": "Confirmed",
          "line": 35,
          "docstring": "Confirmed commitment level",
          "methods": []
        },
        {
          "name": "Finalized",
          "line": 39,
          "docstring": "Finalized commitment level",
          "methods": []
        },
        {
          "name": "TxOpts",
          "line": 43,
          "docstring": "Transaction options",
          "methods": [
            "__init__"
          ]
        }
      ],
      "imports": [
        "asyncio",
        "typing",
        "decimal",
        "structlog",
        "app.config.settings",
        "solders.keypair",
        "solders.pubkey",
        "solders.transaction",
        "solders.system_program",
        "solders.compute_budget",
        "app.blockchain.solana_rpc_client"
      ],
      "keywords": [
        "api",
        "transaction",
        "token",
        "error"
      ]
    },
    "backend/queen-ai/app/blockchain/bridge.py": {
      "type": "python",
      "size": 32719,
      "lines": 959,
      "functions": [
        {
          "name": "__post_init__",
          "line": 71,
          "docstring": null,
          "args": [
            "self"
          ]
        },
        {
          "name": "is_stuck",
          "line": 81,
          "docstring": "Check if transaction is stuck",
          "args": [
            "self"
          ]
        },
        {
          "name": "time_remaining",
          "line": 90,
          "docstring": "Get time remaining before timeout (minutes)",
          "args": [
            "self"
          ]
        },
        {
          "name": "__init__",
          "line": 109,
          "docstring": null,
          "args": [
            "self",
            "ethereum_client",
            "solana_client",
            "validators",
            "min_validators"
          ]
        }
      ],
      "classes": [
        {
          "name": "BridgeDirection",
          "line": 24,
          "docstring": "Bridge direction",
          "methods": []
        },
        {
          "name": "BridgeStatus",
          "line": 30,
          "docstring": "Bridge transaction status",
          "methods": []
        },
        {
          "name": "BridgeTransaction",
          "line": 44,
          "docstring": "Bridge transaction data",
          "methods": [
            "__post_init__",
            "is_stuck",
            "time_remaining"
          ]
        },
        {
          "name": "CrossChainBridge",
          "line": 97,
          "docstring": "Cross-chain bridge between Ethereum and Solana\n\nArchitecture:\n- Lock tokens on source chain\n- Validators sign proof\n- Mint wrapped tokens on destination chain\n- Price parity maintained\n- Liquidity rebalancing",
          "methods": [
            "__init__"
          ]
        }
      ],
      "imports": [
        "asyncio",
        "typing",
        "decimal",
        "dataclasses",
        "enum",
        "datetime",
        "structlog"
      ],
      "keywords": [
        "error",
        "transaction",
        "query",
        "user",
        "validation"
      ]
    },
    "backend/queen-ai/app/blockchain/__init__.py": {
      "type": "python",
      "size": 640,
      "lines": 24,
      "functions": [],
      "classes": [],
      "imports": [
        "ethereum_client",
        "solana_client",
        "wallet_manager",
        "transaction_manager",
        "bridge"
      ],
      "keywords": []
    },
    "backend/queen-ai/app/blockchain/solana_rpc_client.py": {
      "type": "python",
      "size": 9456,
      "lines": 318,
      "functions": [
        {
          "name": "__init__",
          "line": 48,
          "docstring": "Initialize Solana RPC client",
          "args": [
            "self",
            "endpoint"
          ]
        },
        {
          "name": "__init__",
          "line": 303,
          "docstring": null,
          "args": [
            "self",
            "endpoint",
            "commitment"
          ]
        }
      ],
      "classes": [
        {
          "name": "SolanaRPCClient",
          "line": 42,
          "docstring": "Modern Solana RPC client using httpx directly\nCompatible with httpx>=0.28.1",
          "methods": [
            "__init__"
          ]
        },
        {
          "name": "AsyncClient",
          "line": 298,
          "docstring": "Compatibility wrapper that mimics the old solana.rpc.async_api.AsyncClient",
          "methods": [
            "__init__"
          ]
        }
      ],
      "imports": [
        "asyncio",
        "typing",
        "decimal",
        "structlog",
        "httpx",
        "base64",
        "json",
        "solders.keypair",
        "solders.pubkey",
        "solders.transaction",
        "solders.system_program",
        "solders.compute_budget",
        "solders.hash"
      ],
      "keywords": [
        "api",
        "transaction",
        "token",
        "error"
      ]
    },
    "backend/queen-ai/app/blockchain/transaction_manager.py": {
      "type": "python",
      "size": 13121,
      "lines": 428,
      "functions": [
        {
          "name": "__init__",
          "line": 72,
          "docstring": null,
          "args": [
            "self",
            "ethereum_client"
          ]
        }
      ],
      "classes": [
        {
          "name": "TransactionStatus",
          "line": 22,
          "docstring": "Transaction status",
          "methods": []
        },
        {
          "name": "TransactionPriority",
          "line": 31,
          "docstring": "Transaction priority",
          "methods": []
        },
        {
          "name": "Transaction",
          "line": 40,
          "docstring": "Transaction data structure",
          "methods": []
        },
        {
          "name": "TransactionManager",
          "line": 60,
          "docstring": "Manages transaction queue and batch processing\n\nFeatures:\n- Priority queue for transactions\n- Batch processing for gas efficiency\n- Automatic retry for failed transactions\n- Transaction status tracking\n- Gas optimization across batches",
          "methods": [
            "__init__"
          ]
        }
      ],
      "imports": [
        "asyncio",
        "typing",
        "dataclasses",
        "datetime",
        "enum",
        "structlog"
      ],
      "keywords": [
        "transaction",
        "error"
      ]
    },
    "backend/queen-ai/app/blockchain/ethereum_client.py": {
      "type": "python",
      "size": 16540,
      "lines": 537,
      "functions": [
        {
          "name": "__init__",
          "line": 41,
          "docstring": null,
          "args": [
            "self",
            "rpc_url"
          ]
        }
      ],
      "classes": [
        {
          "name": "EthereumClient",
          "line": 28,
          "docstring": "Complete Ethereum blockchain client\n\nFeatures:\n- Connection management (HTTP, WSS)\n- Transaction creation and signing\n- Gas optimization\n- Nonce management\n- Event monitoring\n- Retry logic",
          "methods": [
            "__init__"
          ]
        }
      ],
      "imports": [
        "asyncio",
        "typing",
        "decimal",
        "web3",
        "web3.middleware",
        "eth_account",
        "eth_typing",
        "structlog",
        "app.config.settings"
      ],
      "keywords": [
        "transaction",
        "error",
        "wallet"
      ]
    },
    "backend/queen-ai/app/blockchain/wallet_manager.py": {
      "type": "python",
      "size": 6539,
      "lines": 254,
      "functions": [
        {
          "name": "__init__",
          "line": 32,
          "docstring": null,
          "args": [
            "self"
          ]
        },
        {
          "name": "generate_wallet",
          "line": 37,
          "docstring": "Generate new wallet with random private key\n\nArgs:\n    name: Wallet identifier\n    \nReturns:\n    Account object",
          "args": [
            "self",
            "name"
          ]
        },
        {
          "name": "create_from_mnemonic",
          "line": 61,
          "docstring": "Create HD wallet from mnemonic phrase\n\nArgs:\n    mnemonic: BIP39 mnemonic (generates if None)\n    num_accounts: Number of accounts to derive\n    \nReturns:\n    List of Account objects",
          "args": [
            "self",
            "mnemonic",
            "num_accounts"
          ]
        },
        {
          "name": "import_wallet",
          "line": 106,
          "docstring": "Import wallet from private key\n\nArgs:\n    private_key: Private key (hex string)\n    name: Wallet identifier\n    \nReturns:\n    Account object",
          "args": [
            "self",
            "private_key",
            "name"
          ]
        },
        {
          "name": "get_wallet",
          "line": 135,
          "docstring": "Get wallet by name\n\nArgs:\n    name: Wallet name (uses current if None)\n    \nReturns:\n    Account object or None",
          "args": [
            "self",
            "name"
          ]
        },
        {
          "name": "set_current_wallet",
          "line": 150,
          "docstring": "Set active wallet",
          "args": [
            "self",
            "name"
          ]
        },
        {
          "name": "list_wallets",
          "line": 158,
          "docstring": "List all wallets\n\nReturns:\n    List of wallet info dicts",
          "args": [
            "self"
          ]
        },
        {
          "name": "export_private_key",
          "line": 174,
          "docstring": "Export wallet private key\n\nArgs:\n    name: Wallet name\n    \nReturns:\n    Private key as hex string",
          "args": [
            "self",
            "name"
          ]
        },
        {
          "name": "get_mnemonic",
          "line": 196,
          "docstring": "Get mnemonic phrase\n\nReturns:\n    Mnemonic phrase or None",
          "args": [
            "self"
          ]
        },
        {
          "name": "sign_message",
          "line": 208,
          "docstring": "Sign message with wallet\n\nArgs:\n    message: Message to sign\n    wallet_name: Wallet to use (current if None)\n    \nReturns:\n    Signature as hex string",
          "args": [
            "self",
            "message",
            "wallet_name"
          ]
        },
        {
          "name": "remove_wallet",
          "line": 241,
          "docstring": "Remove wallet",
          "args": [
            "self",
            "name"
          ]
        }
      ],
      "classes": [
        {
          "name": "WalletManager",
          "line": 21,
          "docstring": "Manages multiple Ethereum wallets\n\nFeatures:\n- HD wallet generation from mnemonic\n- Multiple wallet accounts\n- Secure key management\n- Balance tracking across wallets",
          "methods": [
            "__init__",
            "generate_wallet",
            "create_from_mnemonic",
            "import_wallet",
            "get_wallet",
            "set_current_wallet",
            "list_wallets",
            "export_private_key",
            "get_mnemonic",
            "sign_message",
            "remove_wallet"
          ]
        }
      ],
      "imports": [
        "os",
        "typing",
        "eth_account",
        "eth_account.hdaccount",
        "eth_typing",
        "structlog"
      ],
      "keywords": [
        "wallet"
      ]
    },
    "backend/queen-ai/app/db/models.py": {
      "type": "python",
      "size": 13098,
      "lines": 363,
      "functions": [],
      "classes": [
        {
          "name": "ProposalStatus",
          "line": 19,
          "docstring": null,
          "methods": []
        },
        {
          "name": "ProposalType",
          "line": 29,
          "docstring": null,
          "methods": []
        },
        {
          "name": "PurchaseStatus",
          "line": 37,
          "docstring": null,
          "methods": []
        },
        {
          "name": "User",
          "line": 47,
          "docstring": "Platform users with demographics and activity tracking",
          "methods": []
        },
        {
          "name": "GovernanceProposal",
          "line": 98,
          "docstring": "Governance DAO Proposals",
          "methods": []
        },
        {
          "name": "Vote",
          "line": 135,
          "docstring": "Individual votes on proposals",
          "methods": []
        },
        {
          "name": "PrivateSalePurchase",
          "line": 152,
          "docstring": "Private sale token purchases",
          "methods": []
        },
        {
          "name": "Investor",
          "line": 182,
          "docstring": "Investor information and KYC status",
          "methods": []
        },
        {
          "name": "HivePost",
          "line": 212,
          "docstring": "Hive Information Board posts",
          "methods": []
        },
        {
          "name": "Message",
          "line": 232,
          "docstring": "Message Bus messages (for audit trail)",
          "methods": []
        },
        {
          "name": "BeeMetrics",
          "line": 251,
          "docstring": "Bee performance metrics",
          "methods": []
        },
        {
          "name": "LLMConversation",
          "line": 275,
          "docstring": "LLM conversation history",
          "methods": []
        },
        {
          "name": "SystemEvent",
          "line": 294,
          "docstring": "System events for audit trail",
          "methods": []
        },
        {
          "name": "StakingPosition",
          "line": 312,
          "docstring": "Staking positions",
          "methods": []
        },
        {
          "name": "TreasuryTransaction",
          "line": 340,
          "docstring": "Treasury transactions",
          "methods": []
        }
      ],
      "imports": [
        "datetime",
        "typing",
        "sqlalchemy",
        "sqlalchemy.orm",
        "enum",
        "app.db.base"
      ],
      "keywords": [
        "api",
        "database",
        "error",
        "wallet",
        "token",
        "transaction",
        "user"
      ]
    },
    "backend/queen-ai/app/db/__init__.py": {
      "type": "python",
      "size": 280,
      "lines": 10,
      "functions": [],
      "classes": [],
      "imports": [
        "app.db.base",
        "app.db"
      ],
      "keywords": [
        "database"
      ]
    },
    "backend/queen-ai/app/db/base.py": {
      "type": "python",
      "size": 1271,
      "lines": 53,
      "functions": [
        {
          "name": "get_db",
          "line": 29,
          "docstring": "Database session dependency\n\nUsage in FastAPI:\n    @app.get(\"/\")\n    async def endpoint(db: Session = Depends(get_db)):\n        # Use db session\n        pass",
          "args": []
        },
        {
          "name": "init_db",
          "line": 46,
          "docstring": "Initialize database - create all tables\n\nCall this on application startup",
          "args": []
        }
      ],
      "classes": [],
      "imports": [
        "typing",
        "sqlalchemy",
        "sqlalchemy.ext.declarative",
        "sqlalchemy.orm",
        "app.config.settings"
      ],
      "keywords": [
        "database"
      ]
    },
    "backend/queen-ai/app/api/health.py": {
      "type": "python",
      "size": 4012,
      "lines": 144,
      "functions": [],
      "classes": [],
      "imports": [
        "fastapi",
        "typing",
        "structlog",
        "app.core.stateless_architecture",
        "app.db.base",
        "sqlalchemy",
        "app.core.redis_message_bus",
        "app.core.stateless_architecture"
      ],
      "keywords": [
        "database",
        "error"
      ]
    },
    "backend/queen-ai/app/services/context_analyzer.py": {
      "type": "python",
      "size": 15605,
      "lines": 394,
      "functions": [
        {
          "name": "__init__",
          "line": 13,
          "docstring": null,
          "args": [
            "self"
          ]
        },
        {
          "name": "analyze_message",
          "line": 68,
          "docstring": "Analyze user message and return intent, recommendations, and routing\n\nReturns:\n    {\n        'intent': str,\n        'confidence': float,\n        'recommended_actions': List[Dict],\n        'bee_to_consult': str,\n        'context_summary': str,\n        'needs_clarification': bool\n    }",
          "args": [
            "self",
            "user_message",
            "chat_history"
          ]
        },
        {
          "name": "_detect_intent",
          "line": 110,
          "docstring": "Detect user intent from message",
          "args": [
            "self",
            "message"
          ]
        },
        {
          "name": "_analyze_history",
          "line": 131,
          "docstring": "Analyze conversation history for context",
          "args": [
            "self",
            "history"
          ]
        },
        {
          "name": "_generate_recommendations",
          "line": 146,
          "docstring": "Generate recommended actions based on intent and context",
          "args": [
            "self",
            "intent_data",
            "context"
          ]
        },
        {
          "name": "_assign_bee",
          "line": 268,
          "docstring": "Assign the appropriate bee to handle the request",
          "args": [
            "self",
            "intent_data"
          ]
        },
        {
          "name": "_handle_system_diagnostic",
          "line": 286,
          "docstring": "Handle system diagnostic requests",
          "args": [
            "self",
            "message"
          ]
        },
        {
          "name": "diagnose_system",
          "line": 304,
          "docstring": "Perform system-wide diagnostic\nReturns status of all routes, components, and bees",
          "args": [
            "self"
          ]
        },
        {
          "name": "_check_frontend_routes",
          "line": 318,
          "docstring": "Check frontend routes and components",
          "args": [
            "self"
          ]
        },
        {
          "name": "_check_backend_routes",
          "line": 343,
          "docstring": "Check backend API routes",
          "args": [
            "self"
          ]
        },
        {
          "name": "_check_bees_status",
          "line": 358,
          "docstring": "Check status of all bees",
          "args": [
            "self"
          ]
        },
        {
          "name": "_check_database",
          "line": 377,
          "docstring": "Check database status",
          "args": [
            "self"
          ]
        },
        {
          "name": "_check_blockchain",
          "line": 386,
          "docstring": "Check blockchain connectivity",
          "args": [
            "self"
          ]
        }
      ],
      "classes": [
        {
          "name": "ContextAnalyzer",
          "line": 10,
          "docstring": "Analyzes conversation context and routes to appropriate bees/cards",
          "methods": [
            "__init__",
            "analyze_message",
            "_detect_intent",
            "_analyze_history",
            "_generate_recommendations",
            "_assign_bee",
            "_handle_system_diagnostic",
            "diagnose_system",
            "_check_frontend_routes",
            "_check_backend_routes",
            "_check_bees_status",
            "_check_database",
            "_check_blockchain"
          ]
        }
      ],
      "imports": [
        "typing",
        "re",
        "datetime"
      ],
      "keywords": [
        "api",
        "database",
        "error",
        "wallet",
        "login",
        "token",
        "user"
      ]
    },
    "backend/queen-ai/app/api/v1/auth.py": {
      "type": "python",
      "size": 5682,
      "lines": 187,
      "functions": [],
      "classes": [
        {
          "name": "LoginRequest",
          "line": 26,
          "docstring": null,
          "methods": []
        },
        {
          "name": "RegisterRequest",
          "line": 30,
          "docstring": null,
          "methods": []
        },
        {
          "name": "TokenResponse",
          "line": 36,
          "docstring": null,
          "methods": []
        },
        {
          "name": "UserResponse",
          "line": 41,
          "docstring": null,
          "methods": []
        }
      ],
      "imports": [
        "fastapi",
        "sqlalchemy.orm",
        "pydantic",
        "datetime",
        "typing",
        "app.database.connection",
        "app.database.models",
        "app.database.auth",
        "structlog"
      ],
      "keywords": [
        "api",
        "database",
        "password",
        "login",
        "token",
        "query",
        "user",
        "auth(?:entication|orization)?"
      ]
    },
    "backend/queen-ai/app/api/v1/queen_dev.py": {
      "type": "python",
      "size": 20358,
      "lines": 669,
      "functions": [
        {
          "name": "get_proposal_system",
          "line": 33,
          "docstring": null,
          "args": []
        },
        {
          "name": "get_system_manager",
          "line": 39,
          "docstring": null,
          "args": []
        },
        {
          "name": "get_reboot_manager",
          "line": 45,
          "docstring": null,
          "args": []
        },
        {
          "name": "get_security_bee",
          "line": 57,
          "docstring": null,
          "args": []
        }
      ],
      "classes": [
        {
          "name": "ChatMessage",
          "line": 66,
          "docstring": null,
          "methods": []
        },
        {
          "name": "ApproveProposal",
          "line": 71,
          "docstring": null,
          "methods": []
        },
        {
          "name": "RejectProposal",
          "line": 75,
          "docstring": null,
          "methods": []
        }
      ],
      "imports": [
        "fastapi",
        "pydantic",
        "typing",
        "datetime",
        "app.core.code_proposal_system",
        "app.core.queen_system_manager",
        "app.core.enhanced_claude_integration",
        "app.core.enhanced_sandbox_system",
        "app.core.system_reboot_manager",
        "app.integrations.claude_integration",
        "app.api.v1.admin",
        "app.bees.enhanced_security_bee",
        "pathlib",
        "structlog",
        "os",
        "pathlib"
      ],
      "keywords": [
        "api",
        "error",
        "security",
        "auth(?:entication|orization)?",
        "validation"
      ]
    },
    "backend/queen-ai/app/api/v1/market.py": {
      "type": "python",
      "size": 4904,
      "lines": 196,
      "functions": [],
      "classes": [],
      "imports": [
        "fastapi",
        "typing",
        "structlog"
      ],
      "keywords": [
        "api",
        "query",
        "token",
        "error"
      ]
    },
    "backend/queen-ai/app/api/v1/queen.py": {
      "type": "python",
      "size": 5816,
      "lines": 210,
      "functions": [],
      "classes": [
        {
          "name": "RegisterBeeRequest",
          "line": 16,
          "docstring": null,
          "methods": []
        },
        {
          "name": "BridgeProposalRequest",
          "line": 23,
          "docstring": null,
          "methods": []
        },
        {
          "name": "TreasuryProposalRequest",
          "line": 30,
          "docstring": null,
          "methods": []
        },
        {
          "name": "LLMGenerateRequest",
          "line": 154,
          "docstring": null,
          "methods": []
        }
      ],
      "imports": [
        "fastapi",
        "typing",
        "pydantic",
        "structlog"
      ],
      "keywords": [
        "api",
        "error"
      ]
    },
    "backend/queen-ai/app/api/v1/frontend.py": {
      "type": "python",
      "size": 19725,
      "lines": 603,
      "functions": [
        {
          "name": "get_security_bee",
          "line": 18,
          "docstring": null,
          "args": []
        }
      ],
      "classes": [
        {
          "name": "LanguageSelectionRequest",
          "line": 26,
          "docstring": null,
          "methods": []
        },
        {
          "name": "ThemeSelectionRequest",
          "line": 29,
          "docstring": null,
          "methods": []
        },
        {
          "name": "EmailCheckRequest",
          "line": 33,
          "docstring": null,
          "methods": []
        },
        {
          "name": "UserRegistrationRequest",
          "line": 36,
          "docstring": null,
          "methods": []
        },
        {
          "name": "LoginRequest",
          "line": 44,
          "docstring": null,
          "methods": []
        },
        {
          "name": "SessionRequest",
          "line": 48,
          "docstring": null,
          "methods": []
        },
        {
          "name": "ConversationRequest",
          "line": 51,
          "docstring": null,
          "methods": []
        },
        {
          "name": "MenuInteractionRequest",
          "line": 58,
          "docstring": null,
          "methods": []
        }
      ],
      "imports": [
        "fastapi",
        "typing",
        "pydantic",
        "app.models.database",
        "app.bees.enhanced_security_bee",
        "structlog",
        "app.services.context_analyzer",
        "app.models.database"
      ],
      "keywords": [
        "api",
        "database",
        "error",
        "wallet",
        "password",
        "login",
        "token",
        "security",
        "transaction",
        "user",
        "auth(?:entication|orization)?",
        "validation"
      ]
    },
    "backend/queen-ai/app/api/v1/__init__.py": {
      "type": "python",
      "size": 59,
      "lines": 4,
      "functions": [],
      "classes": [],
      "imports": [
        "app.api.v1.router"
      ],
      "keywords": [
        "api"
      ]
    },
    "backend/queen-ai/app/api/v1/autonomous_dev.py": {
      "type": "python",
      "size": 8794,
      "lines": 322,
      "functions": [],
      "classes": [
        {
          "name": "BugReportRequest",
          "line": 30,
          "docstring": null,
          "methods": []
        },
        {
          "name": "ApproveFixRequest",
          "line": 37,
          "docstring": null,
          "methods": []
        },
        {
          "name": "RejectFixRequest",
          "line": 41,
          "docstring": null,
          "methods": []
        },
        {
          "name": "CodeSearchRequest",
          "line": 45,
          "docstring": null,
          "methods": []
        }
      ],
      "imports": [
        "fastapi",
        "pydantic",
        "typing",
        "datetime",
        "app.core.autonomous_fixer",
        "app.core.bug_analyzer",
        "app.tools.codebase_navigator",
        "app.api.v1.admin",
        "structlog"
      ],
      "keywords": [
        "api",
        "error",
        "password",
        "query",
        "auth(?:entication|orization)?",
        "validation"
      ]
    },
    "backend/queen-ai/app/api/v1/admin_claude.py": {
      "type": "python",
      "size": 14005,
      "lines": 395,
      "functions": [
        {
          "name": "get_security_bee",
          "line": 25,
          "docstring": null,
          "args": []
        },
        {
          "name": "get_claude",
          "line": 31,
          "docstring": null,
          "args": []
        }
      ],
      "classes": [
        {
          "name": "Recommendation",
          "line": 39,
          "docstring": null,
          "methods": []
        },
        {
          "name": "AnalysisData",
          "line": 48,
          "docstring": null,
          "methods": []
        },
        {
          "name": "ImplementationRequest",
          "line": 57,
          "docstring": null,
          "methods": []
        }
      ],
      "imports": [
        "fastapi",
        "pydantic",
        "typing",
        "structlog",
        "json",
        "pathlib",
        "datetime",
        "app.integrations.claude_integration",
        "app.bees.enhanced_security_bee"
      ],
      "keywords": [
        "api",
        "security",
        "error",
        "validation"
      ]
    },
    "backend/queen-ai/app/api/v1/admin.py": {
      "type": "python",
      "size": 44934,
      "lines": 1526,
      "functions": [
        {
          "name": "get_security_bee",
          "line": 31,
          "docstring": null,
          "args": []
        },
        {
          "name": "verify_admin",
          "line": 39,
          "docstring": "Verify admin credentials",
          "args": [
            "request"
          ]
        }
      ],
      "classes": [
        {
          "name": "UpdateOTCPhaseRequest",
          "line": 50,
          "docstring": null,
          "methods": []
        },
        {
          "name": "UpdateConfigRequest",
          "line": 53,
          "docstring": null,
          "methods": []
        },
        {
          "name": "SetOMKContractRequest",
          "line": 62,
          "docstring": null,
          "methods": []
        },
        {
          "name": "SetOTCPriceRequest",
          "line": 66,
          "docstring": null,
          "methods": []
        },
        {
          "name": "ChatWithQueenRequest",
          "line": 71,
          "docstring": null,
          "methods": []
        },
        {
          "name": "ExecuteBeeRequest",
          "line": 75,
          "docstring": null,
          "methods": []
        },
        {
          "name": "CreateOTCRequestRequest",
          "line": 79,
          "docstring": null,
          "methods": []
        },
        {
          "name": "UpdateTreasuryWalletsRequest",
          "line": 89,
          "docstring": null,
          "methods": []
        },
        {
          "name": "UpdatePaymentMethodsRequest",
          "line": 92,
          "docstring": null,
          "methods": []
        },
        {
          "name": "UpdateTGEDateRequest",
          "line": 95,
          "docstring": null,
          "methods": []
        },
        {
          "name": "VerifyPaymentRequest",
          "line": 98,
          "docstring": null,
          "methods": []
        },
        {
          "name": "PrivateInvestorRequest",
          "line": 103,
          "docstring": null,
          "methods": []
        },
        {
          "name": "UserActionRequest",
          "line": 109,
          "docstring": null,
          "methods": []
        },
        {
          "name": "SchedulePipelineRequest",
          "line": 1275,
          "docstring": null,
          "methods": []
        },
        {
          "name": "ElasticSearchRequest",
          "line": 1348,
          "docstring": null,
          "methods": []
        },
        {
          "name": "ElasticRAGRequest",
          "line": 1353,
          "docstring": null,
          "methods": []
        },
        {
          "name": "BigQueryRequest",
          "line": 1474,
          "docstring": null,
          "methods": []
        }
      ],
      "imports": [
        "fastapi",
        "typing",
        "pydantic",
        "datetime",
        "app.models.database",
        "app.bees.enhanced_security_bee",
        "app.bees.data_pipeline_bee",
        "app.integrations.elastic_search",
        "structlog",
        "google.cloud",
        "datetime",
        "datetime",
        "datetime",
        "datetime",
        "app.config.settings",
        "app.config.settings"
      ],
      "keywords": [
        "api",
        "database",
        "error",
        "wallet",
        "token",
        "security",
        "transaction",
        "query",
        "user",
        "auth(?:entication|orization)?",
        "validation"
      ]
    },
    "backend/queen-ai/app/api/v1/contracts.py": {
      "type": "python",
      "size": 23282,
      "lines": 675,
      "functions": [],
      "classes": [
        {
          "name": "CompileContractRequest",
          "line": 31,
          "docstring": null,
          "methods": []
        },
        {
          "name": "DeployContractRequest",
          "line": 37,
          "docstring": null,
          "methods": []
        },
        {
          "name": "BatchDeployRequest",
          "line": 45,
          "docstring": null,
          "methods": []
        },
        {
          "name": "VerifyContractRequest",
          "line": 50,
          "docstring": null,
          "methods": []
        }
      ],
      "imports": [
        "fastapi",
        "pydantic",
        "typing",
        "pathlib",
        "json",
        "subprocess",
        "os",
        "datetime",
        "structlog",
        "app.api.v1.admin",
        "app.utils.deployment_helpers"
      ],
      "keywords": [
        "api",
        "database",
        "error"
      ]
    },
    "backend/queen-ai/app/api/v1/notifications.py": {
      "type": "python",
      "size": 4223,
      "lines": 147,
      "functions": [
        {
          "name": "verify_admin",
          "line": 19,
          "docstring": "Verify admin credentials",
          "args": [
            "request"
          ]
        }
      ],
      "classes": [
        {
          "name": "CreateNotificationRequest",
          "line": 26,
          "docstring": null,
          "methods": []
        }
      ],
      "imports": [
        "fastapi",
        "typing",
        "pydantic",
        "datetime",
        "structlog"
      ],
      "keywords": [
        "api",
        "error",
        "auth(?:entication|orization)?"
      ]
    },
    "backend/queen-ai/app/api/v1/router.py": {
      "type": "python",
      "size": 1060,
      "lines": 26,
      "functions": [],
      "classes": [],
      "imports": [
        "fastapi",
        "app.api.v1.endpoints",
        "app.api.v1.endpoints",
        "app.api.v1",
        "app.api.v1",
        "app.api.v1",
        "app.api.v1",
        "app.api.v1",
        "app.api.v1"
      ],
      "keywords": [
        "api"
      ]
    },
    "backend/queen-ai/app/api/v1/claude_analysis.py": {
      "type": "python",
      "size": 9836,
      "lines": 303,
      "functions": [
        {
          "name": "verify_admin",
          "line": 37,
          "docstring": "Verify admin credentials",
          "args": [
            "request"
          ]
        }
      ],
      "classes": [
        {
          "name": "ImplementationRequest",
          "line": 44,
          "docstring": null,
          "methods": []
        }
      ],
      "imports": [
        "fastapi",
        "typing",
        "pydantic",
        "datetime",
        "structlog",
        "json",
        "asyncio",
        "app.llm.providers.anthropic",
        "app.config.settings"
      ],
      "keywords": [
        "api",
        "database",
        "error",
        "security",
        "auth(?:entication|orization)?"
      ]
    },
    "backend/queen-ai/app/api/v1/claude_analysis_old_backup.py": {
      "type": "python",
      "size": 7107,
      "lines": 202,
      "functions": [
        {
          "name": "verify_admin",
          "line": 36,
          "docstring": "Verify admin credentials",
          "args": [
            "request"
          ]
        }
      ],
      "classes": [
        {
          "name": "ImplementationRequest",
          "line": 43,
          "docstring": null,
          "methods": []
        }
      ],
      "imports": [
        "fastapi",
        "typing",
        "pydantic",
        "datetime",
        "structlog",
        "json",
        "app.llm.providers.anthropic",
        "app.config.settings"
      ],
      "keywords": [
        "api",
        "database",
        "error",
        "security",
        "auth(?:entication|orization)?"
      ]
    },
    "backend/queen-ai/app/api/v1/websocket.py": {
      "type": "python",
      "size": 10775,
      "lines": 318,
      "functions": [
        {
          "name": "__init__",
          "line": 21,
          "docstring": null,
          "args": [
            "self"
          ]
        },
        {
          "name": "disconnect",
          "line": 54,
          "docstring": null,
          "args": [
            "self",
            "websocket",
            "channel"
          ]
        }
      ],
      "classes": [
        {
          "name": "ConnectionManager",
          "line": 17,
          "docstring": null,
          "methods": [
            "__init__",
            "disconnect"
          ]
        }
      ],
      "imports": [
        "asyncio",
        "json",
        "typing",
        "fastapi",
        "app.models.database",
        "app.api.v1.admin",
        "structlog"
      ],
      "keywords": [
        "user",
        "api",
        "database",
        "error"
      ]
    },
    "backend/queen-ai/app/api/v1/endpoints/health.py": {
      "type": "python",
      "size": 292,
      "lines": 14,
      "functions": [],
      "classes": [],
      "imports": [
        "fastapi"
      ],
      "keywords": [
        "api"
      ]
    },
    "backend/queen-ai/app/api/v1/endpoints/__init__.py": {
      "type": "python",
      "size": 35,
      "lines": 2,
      "functions": [],
      "classes": [],
      "imports": [],
      "keywords": []
    },
    "backend/queen-ai/app/api/v1/endpoints/teacher_bee.py": {
      "type": "python",
      "size": 13236,
      "lines": 405,
      "functions": [
        {
          "name": "get_security_bee",
          "line": 20,
          "docstring": null,
          "args": []
        },
        {
          "name": "_get_system_message",
          "line": 240,
          "docstring": "Get context-specific system message for Teacher Bee",
          "args": [
            "context"
          ]
        }
      ],
      "classes": [
        {
          "name": "TeacherBeeRequest",
          "line": 26,
          "docstring": null,
          "methods": []
        }
      ],
      "imports": [
        "fastapi",
        "pydantic",
        "typing",
        "base64",
        "structlog",
        "app.bees.enhanced_security_bee"
      ],
      "keywords": [
        "api",
        "error",
        "wallet",
        "password",
        "token",
        "security",
        "transaction",
        "user"
      ]
    },
    "backend/queen-ai/app/blockchain/oracles/pyth_oracle.py": {
      "type": "python",
      "size": 13834,
      "lines": 410,
      "functions": [
        {
          "name": "__init__",
          "line": 50,
          "docstring": "Initialize Pyth oracle\n\nArgs:\n    solana_client: Solana client instance\n    network: 'mainnet' or 'testnet'",
          "args": [
            "self",
            "solana_client",
            "network"
          ]
        },
        {
          "name": "_parse_price_data",
          "line": 302,
          "docstring": "Parse price from Pyth account data",
          "args": [
            "self",
            "data"
          ]
        },
        {
          "name": "_parse_price_from_bytes",
          "line": 322,
          "docstring": "Parse price from raw bytes",
          "args": [
            "self",
            "data"
          ]
        },
        {
          "name": "_parse_confidence_from_bytes",
          "line": 326,
          "docstring": "Parse confidence interval from raw bytes",
          "args": [
            "self",
            "data"
          ]
        },
        {
          "name": "_parse_status_from_bytes",
          "line": 343,
          "docstring": "Parse trading status from raw bytes",
          "args": [
            "self",
            "data"
          ]
        },
        {
          "name": "_parse_ema_from_bytes",
          "line": 361,
          "docstring": "Parse EMA price from raw bytes",
          "args": [
            "self",
            "data"
          ]
        },
        {
          "name": "_get_cached_price",
          "line": 380,
          "docstring": "Get price from cache if still valid",
          "args": [
            "self",
            "pair"
          ]
        },
        {
          "name": "_cache_price",
          "line": 393,
          "docstring": "Cache price with timestamp",
          "args": [
            "self",
            "pair",
            "price"
          ]
        },
        {
          "name": "add_custom_feed",
          "line": 402,
          "docstring": "Add custom price feed",
          "args": [
            "self",
            "pair",
            "feed_address"
          ]
        }
      ],
      "classes": [
        {
          "name": "PythOracle",
          "line": 17,
          "docstring": "Pyth Network Oracle integration\n\nProvides high-frequency price feeds on Solana",
          "methods": [
            "__init__",
            "_parse_price_data",
            "_parse_price_from_bytes",
            "_parse_confidence_from_bytes",
            "_parse_status_from_bytes",
            "_parse_ema_from_bytes",
            "_get_cached_price",
            "_cache_price",
            "add_custom_feed"
          ]
        }
      ],
      "imports": [
        "typing",
        "decimal",
        "structlog",
        "solders.pubkey",
        "time",
        "time"
      ],
      "keywords": [
        "token",
        "error"
      ]
    },
    "backend/queen-ai/app/blockchain/oracles/__init__.py": {
      "type": "python",
      "size": 329,
      "lines": 12,
      "functions": [],
      "classes": [],
      "imports": [
        "app.blockchain.oracles.chainlink_oracle",
        "app.blockchain.oracles.pyth_oracle"
      ],
      "keywords": []
    },
    "backend/queen-ai/app/blockchain/oracles/chainlink_oracle.py": {
      "type": "python",
      "size": 10313,
      "lines": 329,
      "functions": [
        {
          "name": "__init__",
          "line": 75,
          "docstring": "Initialize Chainlink oracle\n\nArgs:\n    eth_client: Ethereum client instance\n    network: 'mainnet' or 'testnet'",
          "args": [
            "self",
            "eth_client",
            "network"
          ]
        },
        {
          "name": "add_custom_feed",
          "line": 317,
          "docstring": "Add custom price feed\n\nUseful for adding token-specific feeds",
          "args": [
            "self",
            "pair",
            "feed_address"
          ]
        }
      ],
      "classes": [
        {
          "name": "ChainlinkOracle",
          "line": 50,
          "docstring": "Chainlink Price Oracle integration\n\nProvides reliable, decentralized price feeds",
          "methods": [
            "__init__",
            "add_custom_feed"
          ]
        }
      ],
      "imports": [
        "typing",
        "decimal",
        "web3",
        "structlog",
        "time"
      ],
      "keywords": [
        "token",
        "error"
      ]
    },
    "backend/queen-ai/app/blockchain/dex/uniswap_router.py": {
      "type": "python",
      "size": 17852,
      "lines": 508,
      "functions": [
        {
          "name": "__init__",
          "line": 147,
          "docstring": "Initialize Uniswap router\n\nArgs:\n    eth_client: Ethereum client instance",
          "args": [
            "self",
            "eth_client"
          ]
        },
        {
          "name": "_calculate_price_impact",
          "line": 492,
          "docstring": "Calculate price impact of trade\n\nSimple estimation based on amount ratios",
          "args": [
            "self",
            "amounts",
            "path"
          ]
        }
      ],
      "classes": [
        {
          "name": "UniswapRouter",
          "line": 135,
          "docstring": "Uniswap V2 Router integration\n\nHandles token swaps, liquidity operations, and price quotes",
          "methods": [
            "__init__",
            "_calculate_price_impact"
          ]
        }
      ],
      "imports": [
        "typing",
        "decimal",
        "web3",
        "structlog"
      ],
      "keywords": [
        "transaction",
        "token",
        "error"
      ]
    },
    "backend/queen-ai/app/blockchain/dex/__init__.py": {
      "type": "python",
      "size": 261,
      "lines": 12,
      "functions": [],
      "classes": [],
      "imports": [
        "app.blockchain.dex.uniswap_router",
        "app.blockchain.dex.raydium_router"
      ],
      "keywords": []
    },
    "backend/queen-ai/app/blockchain/dex/raydium_router.py": {
      "type": "python",
      "size": 12806,
      "lines": 402,
      "functions": [
        {
          "name": "__init__",
          "line": 34,
          "docstring": "Initialize Raydium router\n\nArgs:\n    solana_client: Solana client instance",
          "args": [
            "self",
            "solana_client"
          ]
        },
        {
          "name": "_calculate_swap_output",
          "line": 273,
          "docstring": "Calculate swap output using constant product formula\n\nx * y = k (constant product AMM)",
          "args": [
            "self",
            "amount_in",
            "reserve_in",
            "reserve_out",
            "fee"
          ]
        },
        {
          "name": "_calculate_price_impact",
          "line": 293,
          "docstring": "Calculate price impact percentage\n\nPrice impact = (mid_price - execution_price) / mid_price",
          "args": [
            "self",
            "amount_in",
            "amount_out",
            "reserve_in",
            "reserve_out"
          ]
        }
      ],
      "classes": [
        {
          "name": "RaydiumRouter",
          "line": 19,
          "docstring": "Raydium AMM integration for Solana\n\nHandles token swaps and liquidity operations on Solana",
          "methods": [
            "__init__",
            "_calculate_swap_output",
            "_calculate_price_impact"
          ]
        }
      ],
      "imports": [
        "typing",
        "decimal",
        "structlog",
        "solders.pubkey",
        "solders.instruction"
      ],
      "keywords": [
        "error",
        "token",
        "transaction",
        "query",
        "user"
      ]
    },
    "backend/queen-ai/app/integrations/data_collectors/price_oracles.py": {
      "type": "python",
      "size": 6644,
      "lines": 179,
      "functions": [
        {
          "name": "__init__",
          "line": 22,
          "docstring": null,
          "args": [
            "self"
          ]
        }
      ],
      "classes": [
        {
          "name": "PriceOraclesConnector",
          "line": 12,
          "docstring": "Collects price oracle data for Fivetran\n\nData Sources:\n- Chainlink price feeds\n- Pyth Network\n- API3",
          "methods": [
            "__init__"
          ]
        }
      ],
      "imports": [
        "typing",
        "datetime",
        "structlog",
        "asyncio",
        "web3",
        "app.config.settings",
        "aiohttp"
      ],
      "keywords": [
        "api",
        "error"
      ]
    },
    "backend/queen-ai/app/integrations/data_collectors/__init__.py": {
      "type": "python",
      "size": 315,
      "lines": 13,
      "functions": [],
      "classes": [],
      "imports": [
        "blockchain_transactions",
        "dex_pools",
        "price_oracles"
      ],
      "keywords": []
    },
    "backend/queen-ai/app/integrations/data_collectors/dex_pools.py": {
      "type": "python",
      "size": 4156,
      "lines": 120,
      "functions": [
        {
          "name": "__init__",
          "line": 22,
          "docstring": null,
          "args": [
            "self"
          ]
        }
      ],
      "classes": [
        {
          "name": "DEXPoolsConnector",
          "line": 12,
          "docstring": "Collects DEX pool data for Fivetran\n\nData Sources:\n- Uniswap V3 subgraph\n- Raydium API\n- On-chain pool contracts",
          "methods": [
            "__init__"
          ]
        }
      ],
      "imports": [
        "typing",
        "datetime",
        "structlog",
        "asyncio",
        "web3",
        "app.config.settings",
        "aiohttp"
      ],
      "keywords": [
        "api",
        "query",
        "error"
      ]
    },
    "backend/queen-ai/app/integrations/data_collectors/blockchain_transactions.py": {
      "type": "python",
      "size": 5671,
      "lines": 151,
      "functions": [
        {
          "name": "__init__",
          "line": 23,
          "docstring": null,
          "args": [
            "self"
          ]
        }
      ],
      "classes": [
        {
          "name": "BlockchainTransactionsConnector",
          "line": 13,
          "docstring": "Collects blockchain transaction data for Fivetran\n\nData Sources:\n- Ethereum RPC\n- Solana RPC\n- Block explorers (Etherscan, etc.)",
          "methods": [
            "__init__"
          ]
        }
      ],
      "imports": [
        "asyncio",
        "typing",
        "datetime",
        "structlog",
        "web3",
        "app.config.settings",
        "solana.rpc.async_api",
        "app.config.settings"
      ],
      "keywords": [
        "transaction",
        "error"
      ]
    },
    "backend/queen-ai/app/core/security/context_manager.py": {
      "type": "python",
      "size": 12574,
      "lines": 388,
      "functions": [
        {
          "name": "__init__",
          "line": 77,
          "docstring": "Initialize context manager",
          "args": [
            "self"
          ]
        },
        {
          "name": "get_or_create_context",
          "line": 87,
          "docstring": "Get existing context or create new one\n\nArgs:\n    user_id: User identifier\n    session_id: Optional session identifier\n    \nReturns:\n    SecurityContext for user",
          "args": [
            "self",
            "user_id",
            "session_id"
          ]
        },
        {
          "name": "update_threat_level",
          "line": 113,
          "docstring": "Update threat level based on new risk score\n\nArgs:\n    context: Security context to update\n    new_risk_score: New risk score (0-100)\n    event_type: Type of security event\n    details: Event details\n    blocked: Whether the input was blocked",
          "args": [
            "self",
            "context",
            "new_risk_score",
            "event_type",
            "details",
            "blocked"
          ]
        },
        {
          "name": "_calculate_threat_level",
          "line": 196,
          "docstring": "Calculate threat level from context",
          "args": [
            "self",
            "context"
          ]
        },
        {
          "name": "_detect_escalation",
          "line": 215,
          "docstring": "Detect escalation pattern in conversation\n\nEscalation indicators:\n- Multiple warnings in short time\n- Increasing risk scores\n- Repeated similar attacks",
          "args": [
            "self",
            "context"
          ]
        },
        {
          "name": "should_block_user",
          "line": 247,
          "docstring": "Decide if user should be blocked\n\nArgs:\n    context: Security context\n    \nReturns:\n    (should_block, reason)",
          "args": [
            "self",
            "context"
          ]
        },
        {
          "name": "block_user",
          "line": 279,
          "docstring": "Block a user\n\nArgs:\n    context: Security context\n    reason: Reason for blocking\n    duration_minutes: Optional auto-unblock duration",
          "args": [
            "self",
            "context",
            "reason",
            "duration_minutes"
          ]
        },
        {
          "name": "unblock_user",
          "line": 308,
          "docstring": "Unblock a user",
          "args": [
            "self",
            "user_id"
          ]
        },
        {
          "name": "get_security_summary",
          "line": 318,
          "docstring": "Get security summary for context\n\nArgs:\n    context: Security context\n    \nReturns:\n    Summary dict",
          "args": [
            "self",
            "context"
          ]
        },
        {
          "name": "get_global_stats",
          "line": 359,
          "docstring": "Get global security statistics",
          "args": [
            "self"
          ]
        },
        {
          "name": "cleanup_old_contexts",
          "line": 373,
          "docstring": "Remove inactive contexts",
          "args": [
            "self",
            "inactive_hours"
          ]
        }
      ],
      "classes": [
        {
          "name": "ThreatLevel",
          "line": 15,
          "docstring": "User threat levels",
          "methods": []
        },
        {
          "name": "SecurityEvent",
          "line": 25,
          "docstring": "Security event in conversation",
          "methods": []
        },
        {
          "name": "SecurityContext",
          "line": 35,
          "docstring": "Security context for a user/session",
          "methods": []
        },
        {
          "name": "SecurityContextManager",
          "line": 65,
          "docstring": "Manage security contexts across conversations\n\nResponsibilities:\n- Track user security state\n- Detect escalation patterns\n- Manage threat levels\n- Decide when to block users\n- Provide security summaries",
          "methods": [
            "__init__",
            "get_or_create_context",
            "update_threat_level",
            "_calculate_threat_level",
            "_detect_escalation",
            "should_block_user",
            "block_user",
            "unblock_user",
            "get_security_summary",
            "get_global_stats",
            "cleanup_old_contexts"
          ]
        }
      ],
      "imports": [
        "typing",
        "dataclasses",
        "datetime",
        "enum",
        "structlog"
      ],
      "keywords": [
        "user",
        "security",
        "error"
      ]
    },
    "backend/queen-ai/app/core/security/prompt_protection.py": {
      "type": "python",
      "size": 11761,
      "lines": 373,
      "functions": [
        {
          "name": "__init__",
          "line": 141,
          "docstring": "Initialize protection gate",
          "args": [
            "self"
          ]
        },
        {
          "name": "sanitize_input",
          "line": 150,
          "docstring": "Sanitize input text by removing invisible characters and normalizing\n\nArgs:\n    text: Raw input text\n    \nReturns:\n    Sanitized text",
          "args": [
            "self",
            "text"
          ]
        },
        {
          "name": "detect_invisible_chars",
          "line": 178,
          "docstring": "Detect invisible Unicode characters in text\n\nArgs:\n    text: Text to analyze\n    \nReturns:\n    List of detected invisible characters",
          "args": [
            "self",
            "text"
          ]
        },
        {
          "name": "detect_injection",
          "line": 201,
          "docstring": "Detect prompt injection attempts\n\nArgs:\n    text: Text to analyze\n    strict_mode: If True, lower thresholds for detection\n    \nReturns:\n    DetectionResult with analysis",
          "args": [
            "self",
            "text",
            "strict_mode"
          ]
        },
        {
          "name": "score_threat",
          "line": 284,
          "docstring": "Quick threat scoring without full detection\n\nArgs:\n    text: Text to score\n    \nReturns:\n    Risk score 0-100",
          "args": [
            "self",
            "text"
          ]
        },
        {
          "name": "normalize_unicode",
          "line": 297,
          "docstring": "Normalize Unicode to prevent encoding-based attacks\n\nArgs:\n    text: Text to normalize\n    \nReturns:\n    Normalized text",
          "args": [
            "self",
            "text"
          ]
        },
        {
          "name": "_generate_reasoning",
          "line": 321,
          "docstring": "Generate human-readable reasoning for detection",
          "args": [
            "self",
            "risk_score",
            "matched_patterns",
            "invisible_chars"
          ]
        },
        {
          "name": "get_stats",
          "line": 355,
          "docstring": "Get protection statistics",
          "args": [
            "self"
          ]
        },
        {
          "name": "reset_stats",
          "line": 365,
          "docstring": "Reset statistics",
          "args": [
            "self"
          ]
        }
      ],
      "classes": [
        {
          "name": "DetectionResult",
          "line": 17,
          "docstring": "Result of injection detection",
          "methods": []
        },
        {
          "name": "InvisibleChar",
          "line": 28,
          "docstring": "Detected invisible character",
          "methods": []
        },
        {
          "name": "PromptProtectionGate",
          "line": 36,
          "docstring": "Gate 1: Pre-processing and threat detection\n\nResponsibilities:\n- Remove invisible Unicode characters\n- Normalize text encoding\n- Detect prompt injection patterns\n- Detect jailbreak attempts\n- Score threat level (0-100)\n- Sanitize input",
          "methods": [
            "__init__",
            "sanitize_input",
            "detect_invisible_chars",
            "detect_injection",
            "score_threat",
            "normalize_unicode",
            "_generate_reasoning",
            "get_stats",
            "reset_stats"
          ]
        }
      ],
      "imports": [
        "re",
        "unicodedata",
        "typing",
        "dataclasses",
        "datetime",
        "structlog"
      ],
      "keywords": [
        "api",
        "password"
      ]
    },
    "backend/queen-ai/app/core/security/output_filter.py": {
      "type": "python",
      "size": 9698,
      "lines": 324,
      "functions": [
        {
          "name": "__init__",
          "line": 101,
          "docstring": "Initialize output filter",
          "args": [
            "self"
          ]
        },
        {
          "name": "filter_response",
          "line": 111,
          "docstring": "Filter LLM response for sensitive data\n\nArgs:\n    text: Response text to filter\n    mask_pii: Whether to mask PII (emails, etc)\n    \nReturns:\n    Filtered text",
          "args": [
            "self",
            "text",
            "mask_pii"
          ]
        },
        {
          "name": "redact_secrets",
          "line": 136,
          "docstring": "Redact API keys, tokens, and other secrets\n\nArgs:\n    text: Text potentially containing secrets\n    \nReturns:\n    Text with secrets redacted",
          "args": [
            "self",
            "text"
          ]
        },
        {
          "name": "mask_sensitive_data",
          "line": 166,
          "docstring": "Mask PII like emails, credit cards, SSN\n\nArgs:\n    text: Text potentially containing PII\n    \nReturns:\n    Text with PII masked",
          "args": [
            "self",
            "text"
          ]
        },
        {
          "name": "detect_malicious_code",
          "line": 199,
          "docstring": "Detect malicious patterns in code\n\nArgs:\n    code: Code to analyze\n    \nReturns:\n    (is_malicious, list of matched patterns)",
          "args": [
            "self",
            "code"
          ]
        },
        {
          "name": "validate_code_proposal",
          "line": 229,
          "docstring": "Validate code proposal for security\n\nArgs:\n    code: Proposed code\n    \nReturns:\n    FilterResult with analysis",
          "args": [
            "self",
            "code"
          ]
        },
        {
          "name": "validate_safety",
          "line": 265,
          "docstring": "Validate overall safety of response\n\nArgs:\n    text: Response text\n    strict: If True, be more strict\n    \nReturns:\n    (is_safe, list of warnings)",
          "args": [
            "self",
            "text",
            "strict"
          ]
        },
        {
          "name": "get_stats",
          "line": 305,
          "docstring": "Get filtering statistics",
          "args": [
            "self"
          ]
        },
        {
          "name": "reset_stats",
          "line": 315,
          "docstring": "Reset statistics",
          "args": [
            "self"
          ]
        },
        {
          "name": "replacer",
          "line": 182,
          "docstring": null,
          "args": [
            "match"
          ]
        }
      ],
      "classes": [
        {
          "name": "FilterResult",
          "line": 16,
          "docstring": "Result of output filtering",
          "methods": []
        },
        {
          "name": "OutputFilter",
          "line": 25,
          "docstring": "Gate 4: Output filtering and secret redaction\n\nResponsibilities:\n- Redact API keys and tokens\n- Mask sensitive data (emails, addresses)\n- Detect malicious code in responses\n- Validate LLM response safety\n- Log filtered content",
          "methods": [
            "__init__",
            "filter_response",
            "redact_secrets",
            "mask_sensitive_data",
            "detect_malicious_code",
            "validate_code_proposal",
            "validate_safety",
            "get_stats",
            "reset_stats"
          ]
        }
      ],
      "imports": [
        "re",
        "typing",
        "dataclasses",
        "datetime",
        "structlog"
      ],
      "keywords": [
        "api",
        "security",
        "database",
        "error"
      ]
    },
    "backend/queen-ai/app/core/security/__init__.py": {
      "type": "python",
      "size": 449,
      "lines": 16,
      "functions": [],
      "classes": [],
      "imports": [
        "app.core.security.prompt_protection",
        "app.core.security.output_filter",
        "app.core.security.context_manager",
        "app.core.security.image_scanner"
      ],
      "keywords": [
        "security"
      ]
    },
    "backend/queen-ai/app/core/security/image_scanner.py": {
      "type": "python",
      "size": 11631,
      "lines": 375,
      "functions": [
        {
          "name": "__init__",
          "line": 92,
          "docstring": "Initialize image scanner",
          "args": [
            "self"
          ]
        },
        {
          "name": "_extract_metadata",
          "line": 223,
          "docstring": "Extract image metadata",
          "args": [
            "self",
            "image"
          ]
        },
        {
          "name": "_has_suspicious_metadata",
          "line": 247,
          "docstring": "Check if metadata contains suspicious patterns",
          "args": [
            "self",
            "metadata"
          ]
        },
        {
          "name": "_extract_text",
          "line": 257,
          "docstring": "Extract text from image using OCR",
          "args": [
            "self",
            "image"
          ]
        },
        {
          "name": "_check_text_for_threats",
          "line": 276,
          "docstring": "Check extracted text for malicious patterns",
          "args": [
            "self",
            "text"
          ]
        },
        {
          "name": "_has_steganography_indicators",
          "line": 289,
          "docstring": "Basic steganography detection\n\nNote: This is a simple check. Advanced steganography\nrequires more sophisticated analysis.",
          "args": [
            "self",
            "image"
          ]
        },
        {
          "name": "validate_base64_image",
          "line": 318,
          "docstring": "Validate and decode base64 image\n\nArgs:\n    base64_str: Base64 encoded image\n    \nReturns:\n    (is_valid, image_bytes)",
          "args": [
            "self",
            "base64_str"
          ]
        },
        {
          "name": "get_stats",
          "line": 349,
          "docstring": "Get scanner statistics",
          "args": [
            "self"
          ]
        },
        {
          "name": "reset_stats",
          "line": 365,
          "docstring": "Reset statistics",
          "args": [
            "self"
          ]
        }
      ],
      "classes": [
        {
          "name": "ScanResult",
          "line": 34,
          "docstring": "Result of image security scan",
          "methods": []
        },
        {
          "name": "ImageContentScanner",
          "line": 47,
          "docstring": "Scan images for security threats\n\nCapabilities:\n- Extract text via OCR\n- Analyze metadata for anomalies\n- Detect suspicious patterns\n- Validate file format\n- Check file size limits\n- Calculate file hashes",
          "methods": [
            "__init__",
            "_extract_metadata",
            "_has_suspicious_metadata",
            "_extract_text",
            "_check_text_for_threats",
            "_has_steganography_indicators",
            "validate_base64_image",
            "get_stats",
            "reset_stats"
          ]
        }
      ],
      "imports": [
        "base64",
        "hashlib",
        "typing",
        "dataclasses",
        "datetime",
        "io",
        "structlog",
        "PIL",
        "pytesseract",
        "re"
      ],
      "keywords": [
        "api",
        "error",
        "password",
        "token",
        "security",
        "validation"
      ]
    },
    "backend/queen-ai/app/llm/providers/__init__.py": {
      "type": "python",
      "size": 20,
      "lines": 2,
      "functions": [],
      "classes": [],
      "imports": [],
      "keywords": []
    },
    "backend/queen-ai/app/llm/providers/gemini.py": {
      "type": "python",
      "size": 4719,
      "lines": 157,
      "functions": [
        {
          "name": "__init__",
          "line": 27,
          "docstring": null,
          "args": [
            "self"
          ]
        }
      ],
      "classes": [
        {
          "name": "GeminiProvider",
          "line": 19,
          "docstring": "Google Gemini 1.5 Provider\n\nUses Gemini Flash by default (fast & cost-effective)\nCan switch to Gemini Pro for complex reasoning",
          "methods": [
            "__init__"
          ]
        }
      ],
      "imports": [
        "typing",
        "structlog",
        "app.config.settings",
        "google.generativeai",
        "base64",
        "PIL",
        "io"
      ],
      "keywords": [
        "api",
        "error"
      ]
    },
    "backend/queen-ai/app/llm/providers/openai.py": {
      "type": "python",
      "size": 2953,
      "lines": 101,
      "functions": [
        {
          "name": "__init__",
          "line": 24,
          "docstring": null,
          "args": [
            "self"
          ]
        }
      ],
      "classes": [
        {
          "name": "OpenAIProvider",
          "line": 19,
          "docstring": "OpenAI Provider (GPT-4, GPT-3.5-turbo)",
          "methods": [
            "__init__"
          ]
        }
      ],
      "imports": [
        "typing",
        "structlog",
        "app.config.settings",
        "openai"
      ],
      "keywords": [
        "user",
        "error"
      ]
    },
    "backend/queen-ai/app/llm/providers/anthropic.py": {
      "type": "python",
      "size": 2978,
      "lines": 101,
      "functions": [
        {
          "name": "__init__",
          "line": 24,
          "docstring": null,
          "args": [
            "self"
          ]
        }
      ],
      "classes": [
        {
          "name": "AnthropicProvider",
          "line": 19,
          "docstring": "Anthropic Claude Provider",
          "methods": [
            "__init__"
          ]
        }
      ],
      "imports": [
        "typing",
        "structlog",
        "app.config.settings",
        "anthropic"
      ],
      "keywords": [
        "user",
        "error"
      ]
    },
    "omk-frontend/app/layout.tsx": {
      "type": "typescript",
      "size": 858,
      "lines": 33,
      "functions": [
        {
          "name": "inter",
          "line": 8
        },
        {
          "name": "RootLayout",
          "line": 15
        }
      ],
      "components": [
        {
          "name": "RootLayout",
          "line": 15,
          "type": "component"
        }
      ],
      "imports": [
        "next",
        "next/font/google",
        "@/components/providers/Web3Provider",
        "@/components/providers/ThemeProvider",
        "@/components/layout/AppShell"
      ],
      "keywords": []
    },
    "omk-frontend/app/page.tsx": {
      "type": "typescript",
      "size": 8365,
      "lines": 242,
      "functions": [
        {
          "name": "GreetingScreen",
          "line": 15
        },
        {
          "name": "router",
          "line": 16
        },
        {
          "name": "fallback",
          "line": 36
        },
        {
          "name": "timer",
          "line": 56
        },
        {
          "name": "timer",
          "line": 65
        },
        {
          "name": "handleLanguageSelect",
          "line": 69
        },
        {
          "name": "currentGreeting",
          "line": 88
        }
      ],
      "components": [
        {
          "name": "GreetingScreen",
          "line": 15,
          "type": "component"
        }
      ],
      "imports": [
        "react",
        "framer-motion",
        "next/navigation",
        "@/lib/api",
        "@/lib/store"
      ],
      "keywords": [
        "api",
        "error"
      ]
    },
    "omk-frontend/components/layout/AppShell.tsx": {
      "type": "typescript",
      "size": 1473,
      "lines": 59,
      "functions": [
        {
          "name": "AppShell",
          "line": 8
        },
        {
          "name": "pathname",
          "line": 9
        },
        {
          "name": "router",
          "line": 10
        },
        {
          "name": "showComponents",
          "line": 13
        },
        {
          "name": "handleMenuClick",
          "line": 16
        }
      ],
      "components": [
        {
          "name": "AppShell",
          "line": 8,
          "type": "component"
        }
      ],
      "imports": [
        "next/navigation",
        "@/components/web3/BalanceBubble",
        "@/components/menu/FloatingMenu",
        "@/lib/chatEvents"
      ],
      "keywords": []
    },
    "omk-frontend/components/cards/PrivateInvestorCard.tsx": {
      "type": "typescript",
      "size": 22435,
      "lines": 530,
      "functions": [
        {
          "name": "PrivateInvestorCard",
          "line": 20
        },
        {
          "name": "fetchInvestors",
          "line": 38
        },
        {
          "name": "token",
          "line": 40
        },
        {
          "name": "response",
          "line": 41
        },
        {
          "name": "data",
          "line": 46
        },
        {
          "name": "totalAllocated",
          "line": 63
        },
        {
          "name": "totalDistributed",
          "line": 64
        },
        {
          "name": "pendingInvestors",
          "line": 65
        },
        {
          "name": "handleRegisterInvestor",
          "line": 67
        },
        {
          "name": "token",
          "line": 79
        },
        {
          "name": "response",
          "line": 80
        },
        {
          "name": "data",
          "line": 95
        },
        {
          "name": "handleExecuteTGE",
          "line": 113
        },
        {
          "name": "handleDistributeToInvestor",
          "line": 122
        },
        {
          "name": "handleDistributeAll",
          "line": 133
        }
      ],
      "components": [
        {
          "name": "PrivateInvestorCard",
          "line": 20,
          "type": "component"
        }
      ],
      "imports": [
        "react",
        "framer-motion",
        "lucide-react"
      ],
      "keywords": [
        "api",
        "error",
        "wallet",
        "token",
        "auth(?:entication|orization)?",
        "validation"
      ]
    },
    "omk-frontend/components/cards/WalletEducationCard.tsx": {
      "type": "typescript",
      "size": 20882,
      "lines": 452,
      "functions": [
        {
          "name": "WalletEducationCard",
          "line": 16
        }
      ],
      "components": [
        {
          "name": "WalletEducationCard",
          "line": 16,
          "type": "component"
        }
      ],
      "imports": [
        "react",
        "framer-motion",
        "lucide-react"
      ],
      "keywords": [
        "password",
        "wallet",
        "security"
      ]
    },
    "omk-frontend/components/cards/MarketDataCard.tsx": {
      "type": "typescript",
      "size": 18004,
      "lines": 408,
      "functions": [
        {
          "name": "MarketDataCard",
          "line": 38
        },
        {
          "name": "interval",
          "line": 46
        },
        {
          "name": "fetchMarketData",
          "line": 50
        },
        {
          "name": "response",
          "line": 53
        },
        {
          "name": "data",
          "line": 55
        },
        {
          "name": "generateMockData",
          "line": 70
        },
        {
          "name": "generatePriceHistory",
          "line": 98
        },
        {
          "name": "history",
          "line": 100
        },
        {
          "name": "basePrice",
          "line": 101
        },
        {
          "name": "now",
          "line": 102
        },
        {
          "name": "time",
          "line": 105
        },
        {
          "name": "variance",
          "line": 106
        },
        {
          "name": "price",
          "line": 107
        },
        {
          "name": "x",
          "line": 353
        },
        {
          "name": "y",
          "line": 354
        },
        {
          "name": "x",
          "line": 365
        },
        {
          "name": "y",
          "line": 366
        }
      ],
      "components": [
        {
          "name": "MarketDataCard",
          "line": 38,
          "type": "component"
        }
      ],
      "imports": [
        "react",
        "framer-motion",
        "lucide-react",
        "./InteractiveCard",
        "@/lib/utils"
      ],
      "keywords": [
        "api",
        "token",
        "error"
      ]
    },
    "omk-frontend/components/cards/VisualWalletGuideCard.tsx": {
      "type": "typescript",
      "size": 9539,
      "lines": 203,
      "functions": [
        {
          "name": "VisualWalletGuideCard",
          "line": 14
        },
        {
          "name": "fileInputRef",
          "line": 16
        },
        {
          "name": "handleImageUpload",
          "line": 18
        },
        {
          "name": "file",
          "line": 19
        },
        {
          "name": "steps",
          "line": 25
        },
        {
          "name": "step",
          "line": 138
        }
      ],
      "components": [
        {
          "name": "VisualWalletGuideCard",
          "line": 14,
          "type": "component"
        }
      ],
      "imports": [
        "react",
        "framer-motion",
        "lucide-react"
      ],
      "keywords": [
        "password",
        "wallet"
      ]
    },
    "omk-frontend/components/cards/PropertyCard.tsx": {
      "type": "typescript",
      "size": 8644,
      "lines": 218,
      "functions": [
        {
          "name": "PropertyCard",
          "line": 28
        },
        {
          "name": "monthlyReturn",
          "line": 71
        },
        {
          "name": "yearlyReturn",
          "line": 72
        }
      ],
      "components": [
        {
          "name": "PropertyCard",
          "line": 28,
          "type": "component"
        }
      ],
      "imports": [
        "react",
        "framer-motion",
        "lucide-react",
        "./InteractiveCard",
        "@/lib/utils"
      ],
      "keywords": []
    },
    "omk-frontend/components/cards/DashboardCard.tsx": {
      "type": "typescript",
      "size": 7712,
      "lines": 188,
      "functions": [
        {
          "name": "DashboardCard",
          "line": 19
        },
        {
          "name": "router",
          "line": 20
        },
        {
          "name": "ethValue",
          "line": 27
        },
        {
          "name": "omkValue",
          "line": 28
        },
        {
          "name": "realEstateValue",
          "line": 29
        },
        {
          "name": "totalValue",
          "line": 30
        },
        {
          "name": "handleBuyOMK",
          "line": 33
        },
        {
          "name": "handleInvestMore",
          "line": 37
        },
        {
          "name": "portfolio",
          "line": 41
        },
        {
          "name": "holdings",
          "line": 49
        }
      ],
      "components": [
        {
          "name": "DashboardCard",
          "line": 19,
          "type": "component"
        }
      ],
      "imports": [
        "framer-motion",
        "lucide-react",
        "wagmi",
        "next/navigation",
        "@/stores/authStore",
        "./InteractiveCard",
        "./MarketDataCard",
        "@/lib/utils",
        "@/lib/chatEvents",
        "react"
      ],
      "keywords": [
        "wallet"
      ]
    },
    "omk-frontend/components/cards/SwapCard.tsx": {
      "type": "typescript",
      "size": 12055,
      "lines": 304,
      "functions": [
        {
          "name": "SwapCard",
          "line": 18
        },
        {
          "name": "currentToken",
          "line": 28
        },
        {
          "name": "balance",
          "line": 36
        },
        {
          "name": "omkPrice",
          "line": 47
        },
        {
          "name": "input",
          "line": 52
        },
        {
          "name": "tokenPrice",
          "line": 53
        },
        {
          "name": "valueUSD",
          "line": 54
        },
        {
          "name": "omkAmount",
          "line": 55
        },
        {
          "name": "handleExecuteSwap",
          "line": 69
        },
        {
          "name": "valueUSD",
          "line": 96
        },
        {
          "name": "canSwap",
          "line": 97
        }
      ],
      "components": [
        {
          "name": "SwapCard",
          "line": 18,
          "type": "component"
        }
      ],
      "imports": [
        "react",
        "framer-motion",
        "lucide-react",
        "wagmi",
        "viem",
        "./InteractiveCard",
        "@/lib/utils",
        "@/lib/contracts/dispenser"
      ],
      "keywords": [
        "transaction",
        "token",
        "wallet",
        "error"
      ]
    },
    "omk-frontend/components/cards/InfoCard.tsx": {
      "type": "typescript",
      "size": 5010,
      "lines": 138,
      "functions": [
        {
          "name": "InfoCard",
          "line": 21
        },
        {
          "name": "hasExpandedContent",
          "line": 23
        }
      ],
      "components": [
        {
          "name": "InfoCard",
          "line": 21,
          "type": "component"
        }
      ],
      "imports": [
        "framer-motion",
        "react",
        "lucide-react"
      ],
      "keywords": []
    },
    "omk-frontend/components/cards/OnboardingFlowCard.tsx": {
      "type": "typescript",
      "size": 19606,
      "lines": 428,
      "functions": [
        {
          "name": "OnboardingFlowCard",
          "line": 14
        },
        {
          "name": "nextStep",
          "line": 17
        },
        {
          "name": "currentIndex",
          "line": 19
        }
      ],
      "components": [
        {
          "name": "OnboardingFlowCard",
          "line": 14,
          "type": "component"
        }
      ],
      "imports": [
        "react",
        "framer-motion",
        "lucide-react"
      ],
      "keywords": [
        "token",
        "wallet"
      ]
    },
    "omk-frontend/components/cards/WalletFundingGuideCard.tsx": {
      "type": "typescript",
      "size": 9360,
      "lines": 195,
      "functions": [
        {
          "name": "WalletFundingGuideCard",
          "line": 10
        }
      ],
      "components": [
        {
          "name": "WalletFundingGuideCard",
          "line": 10,
          "type": "component"
        }
      ],
      "imports": [
        "framer-motion",
        "lucide-react"
      ],
      "keywords": [
        "transaction",
        "wallet"
      ]
    },
    "omk-frontend/components/cards/SwapCard.old.tsx": {
      "type": "typescript",
      "size": 9216,
      "lines": 231,
      "functions": [
        {
          "name": "SwapCard",
          "line": 18
        },
        {
          "name": "from",
          "line": 76
        },
        {
          "name": "rate",
          "line": 77
        },
        {
          "name": "to",
          "line": 78
        },
        {
          "name": "handleSwapTokens",
          "line": 92
        },
        {
          "name": "temp",
          "line": 93
        },
        {
          "name": "handleExecuteSwap",
          "line": 99
        }
      ],
      "components": [
        {
          "name": "SwapCard",
          "line": 18,
          "type": "component"
        }
      ],
      "imports": [
        "react",
        "framer-motion",
        "lucide-react",
        "wagmi",
        "viem",
        "./InteractiveCard",
        "@/lib/utils",
        "@/lib/contracts/dispenser"
      ],
      "keywords": [
        "transaction",
        "token",
        "query"
      ]
    },
    "omk-frontend/components/cards/WalletConnectCard.tsx": {
      "type": "typescript",
      "size": 16935,
      "lines": 403,
      "functions": [
        {
          "name": "useDeviceType",
          "line": 11
        },
        {
          "name": "checkDevice",
          "line": 15
        },
        {
          "name": "width",
          "line": 16
        },
        {
          "name": "WalletConnectCard",
          "line": 39
        },
        {
          "name": "deviceType",
          "line": 44
        },
        {
          "name": "isMobile",
          "line": 45
        },
        {
          "name": "alreadyConnected",
          "line": 65
        },
        {
          "name": "handleConnect",
          "line": 87
        },
        {
          "name": "isWalletConnect",
          "line": 281
        },
        {
          "name": "isCoinbase",
          "line": 282
        },
        {
          "name": "isInjected",
          "line": 283
        },
        {
          "name": "isInjected",
          "line": 348
        },
        {
          "name": "isWalletConnect",
          "line": 349
        }
      ],
      "components": [
        {
          "name": "WalletConnectCard",
          "line": 39,
          "type": "component"
        }
      ],
      "imports": [
        "react",
        "framer-motion",
        "lucide-react",
        "wagmi",
        "@/stores/authStore",
        "./InteractiveCard"
      ],
      "keywords": [
        "security",
        "transaction",
        "error",
        "wallet"
      ]
    },
    "omk-frontend/components/cards/OTCPurchaseCard.tsx": {
      "type": "typescript",
      "size": 35657,
      "lines": 811,
      "functions": [
        {
          "name": "OTCPurchaseCard",
          "line": 30
        },
        {
          "name": "fetchConfig",
          "line": 60
        },
        {
          "name": "response",
          "line": 62
        },
        {
          "name": "data",
          "line": 63
        },
        {
          "name": "config",
          "line": 65
        },
        {
          "name": "handleConnectWallet",
          "line": 102
        },
        {
          "name": "handleManualWallet",
          "line": 110
        },
        {
          "name": "calculatePrice",
          "line": 114
        },
        {
          "name": "tokens",
          "line": 115
        },
        {
          "name": "price",
          "line": 116
        },
        {
          "name": "handleSubmit",
          "line": 125
        },
        {
          "name": "response",
          "line": 130
        },
        {
          "name": "data",
          "line": 147
        },
        {
          "name": "allocation",
          "line": 344
        },
        {
          "name": "minAllocation",
          "line": 345
        },
        {
          "name": "allocation",
          "line": 491
        },
        {
          "name": "totalCost",
          "line": 492
        },
        {
          "name": "allocation",
          "line": 574
        },
        {
          "name": "totalCost",
          "line": 575
        },
        {
          "name": "treasuryWallet",
          "line": 577
        },
        {
          "name": "copyToClipboard",
          "line": 579
        },
        {
          "name": "tgeDateObj",
          "line": 747
        },
        {
          "name": "now",
          "line": 748
        },
        {
          "name": "daysUntilTGE",
          "line": 749
        }
      ],
      "components": [
        {
          "name": "OTCPurchaseCard",
          "line": 30,
          "type": "component"
        }
      ],
      "imports": [
        "react",
        "framer-motion",
        "lucide-react",
        "wagmi",
        "wagmi/connectors"
      ],
      "keywords": [
        "api",
        "error",
        "wallet",
        "token",
        "transaction"
      ]
    },
    "omk-frontend/components/cards/InteractiveCard.tsx": {
      "type": "typescript",
      "size": 1624,
      "lines": 58,
      "functions": [
        {
          "name": "InteractiveCard",
          "line": 12
        }
      ],
      "components": [
        {
          "name": "InteractiveCard",
          "line": 12,
          "type": "component"
        }
      ],
      "imports": [
        "framer-motion",
        "react"
      ],
      "keywords": []
    },
    "omk-frontend/components/providers/Web3Provider.tsx": {
      "type": "typescript",
      "size": 822,
      "lines": 29,
      "functions": [
        {
          "name": "Web3Provider",
          "line": 8
        }
      ],
      "components": [
        {
          "name": "Web3Provider",
          "line": 8,
          "type": "component"
        }
      ],
      "imports": [
        "wagmi",
        "@tanstack/react-query",
        "@/lib/web3/config",
        "react"
      ],
      "keywords": [
        "query"
      ]
    },
    "omk-frontend/components/providers/ThemeProvider.tsx": {
      "type": "typescript",
      "size": 1151,
      "lines": 40,
      "functions": [
        {
          "name": "ThemeProvider",
          "line": 6
        },
        {
          "name": "savedTheme",
          "line": 11
        }
      ],
      "components": [
        {
          "name": "ThemeProvider",
          "line": 6,
          "type": "component"
        }
      ],
      "imports": [
        "react",
        "@/lib/store"
      ],
      "keywords": []
    },
    "omk-frontend/components/education/TeacherBeeChat.tsx": {
      "type": "typescript",
      "size": 9765,
      "lines": 275,
      "functions": [
        {
          "name": "TeacherBeeChat",
          "line": 21
        },
        {
          "name": "messagesEndRef",
          "line": 26
        },
        {
          "name": "handleSend",
          "line": 51
        },
        {
          "name": "response",
          "line": 66
        },
        {
          "name": "utterance",
          "line": 79
        },
        {
          "name": "quickActions",
          "line": 98
        },
        {
          "name": "handleQuickAction",
          "line": 105
        }
      ],
      "components": [
        {
          "name": "TeacherBeeChat",
          "line": 21,
          "type": "component"
        }
      ],
      "imports": [
        "react",
        "framer-motion",
        "lucide-react",
        "@/lib/ai/teacherBee"
      ],
      "keywords": [
        "user",
        "security",
        "error",
        "wallet"
      ]
    },
    "omk-frontend/components/web3/BalanceBubble.tsx": {
      "type": "typescript",
      "size": 10489,
      "lines": 259,
      "functions": [
        {
          "name": "BalanceBubble",
          "line": 12
        },
        {
          "name": "router",
          "line": 16
        },
        {
          "name": "handleCopyAddress",
          "line": 26
        },
        {
          "name": "handleDisconnect",
          "line": 34
        },
        {
          "name": "handleBuyOMK",
          "line": 40
        },
        {
          "name": "handleSwap",
          "line": 45
        },
        {
          "name": "handleProfile",
          "line": 50
        },
        {
          "name": "handleSettings",
          "line": 55
        },
        {
          "name": "totalValue",
          "line": 64
        }
      ],
      "components": [
        {
          "name": "BalanceBubble",
          "line": 12,
          "type": "component"
        }
      ],
      "imports": [
        "react",
        "framer-motion",
        "lucide-react",
        "wagmi",
        "next/navigation",
        "@/stores/authStore",
        "@/lib/utils",
        "@/lib/chatEvents"
      ],
      "keywords": [
        "user",
        "token",
        "auth(?:entication|orization)?",
        "wallet"
      ]
    },
    "omk-frontend/components/web3/WalletConnectModal.tsx": {
      "type": "typescript",
      "size": 11762,
      "lines": 289,
      "functions": [
        {
          "name": "WalletConnectModal",
          "line": 14
        },
        {
          "name": "connectWallet",
          "line": 22
        },
        {
          "name": "handleHasWallet",
          "line": 24
        },
        {
          "name": "handleNoWallet",
          "line": 28
        },
        {
          "name": "handleChainSelect",
          "line": 33
        },
        {
          "name": "handleConnect",
          "line": 38
        }
      ],
      "components": [
        {
          "name": "WalletConnectModal",
          "line": 14,
          "type": "component"
        }
      ],
      "imports": [
        "react",
        "framer-motion",
        "lucide-react",
        "wagmi",
        "@/stores/authStore"
      ],
      "keywords": [
        "security",
        "transaction",
        "wallet"
      ]
    },
    "omk-frontend/components/menu/FloatingMenu.tsx": {
      "type": "typescript",
      "size": 6612,
      "lines": 185,
      "functions": [
        {
          "name": "FloatingMenu",
          "line": 23
        },
        {
          "name": "handleItemClick",
          "line": 56
        }
      ],
      "components": [
        {
          "name": "FloatingMenu",
          "line": 23,
          "type": "component"
        }
      ],
      "imports": [
        "react",
        "framer-motion",
        "lucide-react"
      ],
      "keywords": [
        "api",
        "login"
      ]
    },
    "omk-frontend/components/interactive/ROICalculator.tsx": {
      "type": "typescript",
      "size": 9292,
      "lines": 239,
      "functions": [
        {
          "name": "ROICalculator",
          "line": 12
        },
        {
          "name": "APY",
          "line": 18
        },
        {
          "name": "calculateROI",
          "line": 20
        },
        {
          "name": "principal",
          "line": 21
        },
        {
          "name": "years",
          "line": 36
        },
        {
          "name": "finalAmount",
          "line": 37
        },
        {
          "name": "profit",
          "line": 38
        },
        {
          "name": "roi",
          "line": 39
        },
        {
          "name": "result",
          "line": 41
        }
      ],
      "components": [
        {
          "name": "ROICalculator",
          "line": 12,
          "type": "component"
        },
        {
          "name": "APY",
          "line": 18,
          "type": "component"
        }
      ],
      "imports": [
        "react",
        "framer-motion",
        "../cards/InteractiveCard"
      ],
      "keywords": []
    },
    "omk-frontend/app/kingdom/page.tsx": {
      "type": "typescript",
      "size": 48196,
      "lines": 1177,
      "functions": [
        {
          "name": "KingdomAdminPortal",
          "line": 16
        },
        {
          "name": "router",
          "line": 17
        },
        {
          "name": "checkAuth",
          "line": 29
        },
        {
          "name": "token",
          "line": 30
        },
        {
          "name": "isDev",
          "line": 33
        },
        {
          "name": "controller",
          "line": 54
        },
        {
          "name": "timeoutId",
          "line": 55
        },
        {
          "name": "response",
          "line": 57
        },
        {
          "name": "data",
          "line": 67
        },
        {
          "name": "isDev",
          "line": 98
        },
        {
          "name": "loadSystemConfig",
          "line": 116
        },
        {
          "name": "response",
          "line": 118
        },
        {
          "name": "data",
          "line": 123
        },
        {
          "name": "loadDashboardStats",
          "line": 132
        },
        {
          "name": "token",
          "line": 134
        },
        {
          "name": "headers",
          "line": 135
        },
        {
          "name": "hiveRes",
          "line": 138
        },
        {
          "name": "hiveData",
          "line": 140
        },
        {
          "name": "otcRes",
          "line": 147
        },
        {
          "name": "otcData",
          "line": 149
        },
        {
          "name": "handleLogout",
          "line": 162
        },
        {
          "name": "tabs",
          "line": 180
        },
        {
          "name": "categories",
          "line": 196
        },
        {
          "name": "categoryTabs",
          "line": 281
        },
        {
          "name": "isAnyCategoryActive",
          "line": 282
        },
        {
          "name": "Icon",
          "line": 335
        },
        {
          "name": "OverviewTab",
          "line": 389
        },
        {
          "name": "fetchData",
          "line": 395
        },
        {
          "name": "token",
          "line": 397
        },
        {
          "name": "headers",
          "line": 398
        },
        {
          "name": "controller",
          "line": 401
        },
        {
          "name": "timeoutId",
          "line": 402
        },
        {
          "name": "interval",
          "line": 437
        },
        {
          "name": "SystemConfigTab",
          "line": 576
        },
        {
          "name": "handleSaveOTCPhase",
          "line": 596
        },
        {
          "name": "response",
          "line": 599
        },
        {
          "name": "response",
          "line": 717
        },
        {
          "name": "response",
          "line": 794
        },
        {
          "name": "response",
          "line": 845
        },
        {
          "name": "response",
          "line": 893
        },
        {
          "name": "response",
          "line": 918
        },
        {
          "name": "response",
          "line": 943
        },
        {
          "name": "UsersTab",
          "line": 968
        },
        {
          "name": "UserManagement",
          "line": 969
        },
        {
          "name": "OTCManagementTab",
          "line": 977
        },
        {
          "name": "OTCRequestManager",
          "line": 978
        },
        {
          "name": "QueenDevelopmentTab",
          "line": 987
        },
        {
          "name": "QueenDevelopmentHub",
          "line": 988
        },
        {
          "name": "ClaudeAnalysisTab",
          "line": 996
        },
        {
          "name": "ClaudeSystemAnalysis",
          "line": 997
        },
        {
          "name": "DataPipelineManager",
          "line": 998
        },
        {
          "name": "ElasticSearchDashboard",
          "line": 999
        },
        {
          "name": "BigQueryAnalytics",
          "line": 1000
        },
        {
          "name": "HiveDashboardTab",
          "line": 1008
        },
        {
          "name": "HiveIntelligence",
          "line": 1009
        },
        {
          "name": "AnalyticsTab",
          "line": 1024
        },
        {
          "name": "EnhancedAnalytics",
          "line": 1025
        },
        {
          "name": "DataPipelineTab",
          "line": 1040
        },
        {
          "name": "DataPipelineManager",
          "line": 1041
        },
        {
          "name": "ElasticSearchTab",
          "line": 1049
        },
        {
          "name": "ElasticSearchDashboard",
          "line": 1050
        },
        {
          "name": "BigQueryTab",
          "line": 1058
        },
        {
          "name": "BigQueryAnalytics",
          "line": 1059
        },
        {
          "name": "ContractsTab",
          "line": 1067
        },
        {
          "name": "StatCard",
          "line": 1083
        },
        {
          "name": "colors",
          "line": 1084
        },
        {
          "name": "QuickAction",
          "line": 1103
        },
        {
          "name": "HealthItem",
          "line": 1112
        },
        {
          "name": "statusConfig",
          "line": 1113
        },
        {
          "name": "config",
          "line": 1119
        },
        {
          "name": "Icon",
          "line": 1120
        },
        {
          "name": "ToggleOption",
          "line": 1133
        },
        {
          "name": "handleToggle",
          "line": 1141
        },
        {
          "name": "newValue",
          "line": 1144
        }
      ],
      "components": [
        {
          "name": "KingdomAdminPortal",
          "line": 16,
          "type": "component"
        },
        {
          "name": "Icon",
          "line": 335,
          "type": "component"
        },
        {
          "name": "OverviewTab",
          "line": 389,
          "type": "component"
        },
        {
          "name": "SystemConfigTab",
          "line": 576,
          "type": "component"
        },
        {
          "name": "UsersTab",
          "line": 968,
          "type": "component"
        },
        {
          "name": "UserManagement",
          "line": 969,
          "type": "component"
        },
        {
          "name": "OTCManagementTab",
          "line": 977,
          "type": "component"
        },
        {
          "name": "OTCRequestManager",
          "line": 978,
          "type": "component"
        },
        {
          "name": "QueenDevelopmentTab",
          "line": 987,
          "type": "component"
        },
        {
          "name": "QueenDevelopmentHub",
          "line": 988,
          "type": "component"
        },
        {
          "name": "ClaudeAnalysisTab",
          "line": 996,
          "type": "component"
        },
        {
          "name": "ClaudeSystemAnalysis",
          "line": 997,
          "type": "component"
        },
        {
          "name": "DataPipelineManager",
          "line": 998,
          "type": "component"
        },
        {
          "name": "ElasticSearchDashboard",
          "line": 999,
          "type": "component"
        },
        {
          "name": "BigQueryAnalytics",
          "line": 1000,
          "type": "component"
        },
        {
          "name": "HiveDashboardTab",
          "line": 1008,
          "type": "component"
        },
        {
          "name": "HiveIntelligence",
          "line": 1009,
          "type": "component"
        },
        {
          "name": "AnalyticsTab",
          "line": 1024,
          "type": "component"
        },
        {
          "name": "EnhancedAnalytics",
          "line": 1025,
          "type": "component"
        },
        {
          "name": "DataPipelineTab",
          "line": 1040,
          "type": "component"
        },
        {
          "name": "DataPipelineManager",
          "line": 1041,
          "type": "component"
        },
        {
          "name": "ElasticSearchTab",
          "line": 1049,
          "type": "component"
        },
        {
          "name": "ElasticSearchDashboard",
          "line": 1050,
          "type": "component"
        },
        {
          "name": "BigQueryTab",
          "line": 1058,
          "type": "component"
        },
        {
          "name": "BigQueryAnalytics",
          "line": 1059,
          "type": "component"
        },
        {
          "name": "ContractsTab",
          "line": 1067,
          "type": "component"
        },
        {
          "name": "StatCard",
          "line": 1083,
          "type": "component"
        },
        {
          "name": "QuickAction",
          "line": 1103,
          "type": "component"
        },
        {
          "name": "HealthItem",
          "line": 1112,
          "type": "component"
        },
        {
          "name": "Icon",
          "line": 1120,
          "type": "component"
        },
        {
          "name": "ToggleOption",
          "line": 1133,
          "type": "component"
        }
      ],
      "imports": [
        "react",
        "next/navigation",
        "framer-motion",
        "react-hot-toast",
        "./components/ContractDeployer",
        "./components/TestnetUtilities"
      ],
      "keywords": [
        "api",
        "database",
        "error",
        "wallet",
        "login",
        "token",
        "user",
        "auth(?:entication|orization)?"
      ]
    },
    "omk-frontend/app/chat/page.tsx": {
      "type": "typescript",
      "size": 102952,
      "lines": 2008,
      "functions": [
        {
          "name": "ChatInterface",
          "line": 24
        },
        {
          "name": "router",
          "line": 25
        },
        {
          "name": "messagesEndRef",
          "line": 27
        },
        {
          "name": "setTheme",
          "line": 40
        },
        {
          "name": "hasInitialized",
          "line": 51
        },
        {
          "name": "chatContainerRef",
          "line": 52
        },
        {
          "name": "connectedWalletsRef",
          "line": 53
        },
        {
          "name": "checkQueenConnection",
          "line": 70
        },
        {
          "name": "response",
          "line": 72
        },
        {
          "name": "data",
          "line": 73
        },
        {
          "name": "interval",
          "line": 83
        },
        {
          "name": "params",
          "line": 89
        },
        {
          "name": "view",
          "line": 90
        },
        {
          "name": "handleChatMessage",
          "line": 113
        },
        {
          "name": "addMessage",
          "line": 165
        },
        {
          "name": "newMessage",
          "line": 166
        },
        {
          "name": "scrollToBottom",
          "line": 177
        },
        {
          "name": "container",
          "line": 199
        },
        {
          "name": "handleScroll",
          "line": 202
        },
        {
          "name": "isNearBottom",
          "line": 204
        },
        {
          "name": "handleThemeSelect",
          "line": 212
        },
        {
          "name": "res",
          "line": 218
        },
        {
          "name": "handleSend",
          "line": 232
        },
        {
          "name": "userInput",
          "line": 236
        },
        {
          "name": "response",
          "line": 251
        },
        {
          "name": "res",
          "line": 262
        },
        {
          "name": "actionButtons",
          "line": 276
        },
        {
          "name": "handleEmailLoginFlow",
          "line": 296
        },
        {
          "name": "emailRegex",
          "line": 300
        },
        {
          "name": "res",
          "line": 320
        },
        {
          "name": "handleEmailSignupFlow",
          "line": 343
        },
        {
          "name": "emailRegex",
          "line": 347
        },
        {
          "name": "handleOptionClick",
          "line": 423
        },
        {
          "name": "response",
          "line": 460
        },
        {
          "name": "data",
          "line": 461
        },
        {
          "name": "otcPhase",
          "line": 462
        },
        {
          "name": "tgeDate",
          "line": 468
        },
        {
          "name": "tgeDateFormatted",
          "line": 469
        },
        {
          "name": "trackConversion",
          "line": 566
        },
        {
          "name": "handleMenuClick",
          "line": 581
        },
        {
          "name": "formData",
          "line": 1698
        },
        {
          "name": "response",
          "line": 1704
        },
        {
          "name": "data",
          "line": 1709
        }
      ],
      "components": [
        {
          "name": "ChatInterface",
          "line": 24,
          "type": "component"
        }
      ],
      "imports": [
        "react",
        "framer-motion",
        "next/navigation",
        "lucide-react",
        "wagmi",
        "@/lib/api",
        "@/lib/store",
        "@/components/menu/FloatingMenu",
        "@/components/interactive/ROICalculator",
        "@/components/cards/InfoCard",
        "@/components/cards/WalletConnectCard",
        "@/components/cards/DashboardCard",
        "@/components/cards/SwapCard",
        "@/components/cards/PropertyCard",
        "@/components/cards/PrivateInvestorCard",
        "@/components/cards/OTCPurchaseCard",
        "@/components/cards/WalletEducationCard",
        "@/components/cards/OnboardingFlowCard",
        "@/components/cards/VisualWalletGuideCard",
        "@/components/cards/WalletFundingGuideCard"
      ],
      "keywords": [
        "api",
        "error",
        "wallet",
        "password",
        "login",
        "token",
        "security",
        "transaction",
        "user"
      ]
    },
    "omk-frontend/app/swap/page.tsx": {
      "type": "typescript",
      "size": 12619,
      "lines": 325,
      "functions": [
        {
          "name": "SwapPage",
          "line": 18
        },
        {
          "name": "router",
          "line": 20
        },
        {
          "name": "from",
          "line": 52
        },
        {
          "name": "rate",
          "line": 53
        },
        {
          "name": "to",
          "line": 54
        },
        {
          "name": "handleSwap",
          "line": 61
        },
        {
          "name": "temp",
          "line": 63
        },
        {
          "name": "handleMaxClick",
          "line": 69
        },
        {
          "name": "handleSwapTokens",
          "line": 73
        },
        {
          "name": "priceImpact",
          "line": 81
        },
        {
          "name": "networkFee",
          "line": 82
        },
        {
          "name": "minReceived",
          "line": 83
        }
      ],
      "components": [
        {
          "name": "SwapPage",
          "line": 18,
          "type": "component"
        }
      ],
      "imports": [
        "react",
        "framer-motion",
        "lucide-react",
        "wagmi",
        "next/navigation",
        "@/lib/utils"
      ],
      "keywords": [
        "transaction",
        "token"
      ]
    },
    "omk-frontend/app/dashboard/page_old_backup.tsx": {
      "type": "typescript",
      "size": 11726,
      "lines": 329,
      "functions": [
        {
          "name": "DashboardPage",
          "line": 17
        },
        {
          "name": "router",
          "line": 19
        }
      ],
      "components": [
        {
          "name": "DashboardPage",
          "line": 17,
          "type": "component"
        }
      ],
      "imports": [
        "react",
        "framer-motion",
        "next/navigation",
        "wagmi"
      ],
      "keywords": [
        "transaction",
        "token",
        "wallet"
      ]
    },
    "omk-frontend/app/dashboard/page_new.tsx": {
      "type": "typescript",
      "size": 0,
      "lines": 1,
      "functions": [],
      "components": [],
      "imports": [],
      "keywords": []
    },
    "omk-frontend/app/dashboard/page.tsx": {
      "type": "typescript",
      "size": 1488,
      "lines": 55,
      "functions": [
        {
          "name": "DashboardPage",
          "line": 20
        },
        {
          "name": "router",
          "line": 22
        }
      ],
      "components": [
        {
          "name": "DashboardPage",
          "line": 20,
          "type": "component"
        }
      ],
      "imports": [
        "react",
        "framer-motion",
        "next/navigation",
        "wagmi"
      ],
      "keywords": []
    },
    "omk-frontend/app/components/ErrorBoundary.tsx": {
      "type": "typescript",
      "size": 5237,
      "lines": 161,
      "functions": [],
      "components": [],
      "imports": [
        "react",
        "lucide-react"
      ],
      "keywords": [
        "user",
        "error"
      ]
    },
    "omk-frontend/app/invest/page_old_backup.tsx": {
      "type": "typescript",
      "size": 13362,
      "lines": 344,
      "functions": [
        {
          "name": "InvestPage",
          "line": 25
        },
        {
          "name": "router",
          "line": 27
        },
        {
          "name": "filteredProperties",
          "line": 100
        }
      ],
      "components": [
        {
          "name": "InvestPage",
          "line": 25,
          "type": "component"
        }
      ],
      "imports": [
        "react",
        "framer-motion",
        "lucide-react",
        "wagmi",
        "next/navigation",
        "@/lib/utils"
      ],
      "keywords": [
        "query"
      ]
    },
    "omk-frontend/app/invest/page.tsx": {
      "type": "typescript",
      "size": 1506,
      "lines": 55,
      "functions": [
        {
          "name": "InvestPage",
          "line": 20
        },
        {
          "name": "router",
          "line": 22
        }
      ],
      "components": [
        {
          "name": "InvestPage",
          "line": 20,
          "type": "component"
        }
      ],
      "imports": [
        "react",
        "framer-motion",
        "next/navigation",
        "wagmi"
      ],
      "keywords": []
    },
    "omk-frontend/app/(auth)/connect/page.tsx": {
      "type": "typescript",
      "size": 6293,
      "lines": 167,
      "functions": [
        {
          "name": "ConnectPage",
          "line": 8
        }
      ],
      "components": [
        {
          "name": "ConnectPage",
          "line": 8,
          "type": "component"
        }
      ],
      "imports": [
        "react",
        "framer-motion",
        "lucide-react",
        "@/components/web3/WalletConnectModal"
      ],
      "keywords": [
        "wallet"
      ]
    },
    "omk-frontend/app/kingdom/components/ClaudeSystemAnalysis.tsx": {
      "type": "typescript",
      "size": 18832,
      "lines": 448,
      "functions": [
        {
          "name": "BACKEND_URL",
          "line": 11
        },
        {
          "name": "ClaudeSystemAnalysis",
          "line": 43
        },
        {
          "name": "fetchAnalysisData",
          "line": 53
        },
        {
          "name": "token",
          "line": 55
        },
        {
          "name": "response",
          "line": 56
        },
        {
          "name": "data",
          "line": 64
        },
        {
          "name": "requestImplementation",
          "line": 76
        },
        {
          "name": "token",
          "line": 79
        },
        {
          "name": "response",
          "line": 80
        },
        {
          "name": "result",
          "line": 93
        },
        {
          "name": "getPriorityColor",
          "line": 109
        },
        {
          "name": "getStatusIcon",
          "line": 119
        },
        {
          "name": "color",
          "line": 314
        }
      ],
      "components": [
        {
          "name": "BACKEND_URL",
          "line": 11,
          "type": "component"
        },
        {
          "name": "ClaudeSystemAnalysis",
          "line": 43,
          "type": "component"
        }
      ],
      "imports": [
        "react",
        "framer-motion",
        "react-hot-toast"
      ],
      "keywords": [
        "api",
        "error",
        "token",
        "security",
        "auth(?:entication|orization)?"
      ]
    },
    "omk-frontend/app/kingdom/components/DataPipelineManager.tsx": {
      "type": "typescript",
      "size": 12349,
      "lines": 357,
      "functions": [
        {
          "name": "BACKEND_URL",
          "line": 11
        },
        {
          "name": "DataPipelineManager",
          "line": 34
        },
        {
          "name": "interval",
          "line": 44
        },
        {
          "name": "loadPipelineStatus",
          "line": 48
        },
        {
          "name": "token",
          "line": 50
        },
        {
          "name": "response",
          "line": 51
        },
        {
          "name": "data",
          "line": 57
        },
        {
          "name": "runPipeline",
          "line": 66
        },
        {
          "name": "token",
          "line": 71
        },
        {
          "name": "response",
          "line": 72
        },
        {
          "name": "data",
          "line": 82
        },
        {
          "name": "schedulePipeline",
          "line": 100
        },
        {
          "name": "token",
          "line": 104
        },
        {
          "name": "response",
          "line": 105
        },
        {
          "name": "data",
          "line": 116
        }
      ],
      "components": [
        {
          "name": "BACKEND_URL",
          "line": 11,
          "type": "component"
        },
        {
          "name": "DataPipelineManager",
          "line": 34,
          "type": "component"
        }
      ],
      "imports": [
        "react",
        "framer-motion",
        "react-hot-toast"
      ],
      "keywords": [
        "api",
        "database",
        "error",
        "token",
        "auth(?:entication|orization)?"
      ]
    },
    "omk-frontend/app/kingdom/components/QueenDevelopmentHub.tsx": {
      "type": "typescript",
      "size": 27301,
      "lines": 798,
      "functions": [
        {
          "name": "BACKEND_URL",
          "line": 12
        },
        {
          "name": "QueenDevelopmentHub",
          "line": 35
        },
        {
          "name": "messagesEndRef",
          "line": 43
        },
        {
          "name": "loadConversationHistory",
          "line": 54
        },
        {
          "name": "token",
          "line": 56
        },
        {
          "name": "response",
          "line": 57
        },
        {
          "name": "data",
          "line": 65
        },
        {
          "name": "loadProposals",
          "line": 76
        },
        {
          "name": "token",
          "line": 78
        },
        {
          "name": "response",
          "line": 79
        },
        {
          "name": "data",
          "line": 87
        },
        {
          "name": "sendMessage",
          "line": 98
        },
        {
          "name": "userMessage",
          "line": 101
        },
        {
          "name": "token",
          "line": 113
        },
        {
          "name": "response",
          "line": 114
        },
        {
          "name": "data",
          "line": 126
        },
        {
          "name": "analyzeSystem",
          "line": 155
        },
        {
          "name": "token",
          "line": 164
        },
        {
          "name": "response",
          "line": 165
        },
        {
          "name": "data",
          "line": 170
        },
        {
          "name": "ChatInterface",
          "line": 308
        },
        {
          "name": "MessageBubble",
          "line": 362
        },
        {
          "name": "isUser",
          "line": 363
        },
        {
          "name": "ProposalsInterface",
          "line": 398
        },
        {
          "name": "ProposalCard",
          "line": 434
        },
        {
          "name": "config",
          "line": 446
        },
        {
          "name": "Icon",
          "line": 447
        },
        {
          "name": "ProposalDetail",
          "line": 480
        },
        {
          "name": "handleAction",
          "line": 484
        },
        {
          "name": "token",
          "line": 489
        },
        {
          "name": "url",
          "line": 490
        },
        {
          "name": "response",
          "line": 492
        },
        {
          "name": "data",
          "line": 497
        },
        {
          "name": "MetadataCard",
          "line": 638
        },
        {
          "name": "ActionButton",
          "line": 647
        },
        {
          "name": "BugFixingMode",
          "line": 673
        },
        {
          "name": "AutonomousFixer",
          "line": 674
        },
        {
          "name": "DatabaseQueriesMode",
          "line": 680
        },
        {
          "name": "EXAMPLE_QUERIES",
          "line": 685
        },
        {
          "name": "executeQuery",
          "line": 694
        },
        {
          "name": "token",
          "line": 697
        },
        {
          "name": "response",
          "line": 698
        },
        {
          "name": "data",
          "line": 710
        }
      ],
      "components": [
        {
          "name": "BACKEND_URL",
          "line": 12,
          "type": "component"
        },
        {
          "name": "QueenDevelopmentHub",
          "line": 35,
          "type": "component"
        },
        {
          "name": "ChatInterface",
          "line": 308,
          "type": "component"
        },
        {
          "name": "MessageBubble",
          "line": 362,
          "type": "component"
        },
        {
          "name": "ProposalsInterface",
          "line": 398,
          "type": "component"
        },
        {
          "name": "ProposalCard",
          "line": 434,
          "type": "component"
        },
        {
          "name": "Icon",
          "line": 447,
          "type": "component"
        },
        {
          "name": "ProposalDetail",
          "line": 480,
          "type": "component"
        },
        {
          "name": "MetadataCard",
          "line": 638,
          "type": "component"
        },
        {
          "name": "ActionButton",
          "line": 647,
          "type": "component"
        },
        {
          "name": "BugFixingMode",
          "line": 673,
          "type": "component"
        },
        {
          "name": "AutonomousFixer",
          "line": 674,
          "type": "component"
        },
        {
          "name": "DatabaseQueriesMode",
          "line": 680,
          "type": "component"
        },
        {
          "name": "EXAMPLE_QUERIES",
          "line": 685,
          "type": "component"
        }
      ],
      "imports": [
        "react",
        "framer-motion",
        "react-hot-toast"
      ],
      "keywords": [
        "api",
        "database",
        "error",
        "wallet",
        "token",
        "query",
        "user",
        "auth(?:entication|orization)?"
      ]
    },
    "omk-frontend/app/kingdom/components/ElasticSearchDashboard.tsx": {
      "type": "typescript",
      "size": 14138,
      "lines": 379,
      "functions": [
        {
          "name": "BACKEND_URL",
          "line": 11
        },
        {
          "name": "ElasticSearchDashboard",
          "line": 29
        },
        {
          "name": "loadRecentActivities",
          "line": 42
        },
        {
          "name": "token",
          "line": 44
        },
        {
          "name": "response",
          "line": 45
        },
        {
          "name": "data",
          "line": 51
        },
        {
          "name": "handleSearch",
          "line": 60
        },
        {
          "name": "token",
          "line": 69
        },
        {
          "name": "endpoint",
          "line": 70
        },
        {
          "name": "filters",
          "line": 74
        },
        {
          "name": "response",
          "line": 76
        },
        {
          "name": "data",
          "line": 91
        },
        {
          "name": "handleKeyPress",
          "line": 108
        }
      ],
      "components": [
        {
          "name": "BACKEND_URL",
          "line": 11,
          "type": "component"
        },
        {
          "name": "ElasticSearchDashboard",
          "line": 29,
          "type": "component"
        }
      ],
      "imports": [
        "react",
        "framer-motion",
        "react-hot-toast"
      ],
      "keywords": [
        "api",
        "error",
        "token",
        "security",
        "transaction",
        "query",
        "auth(?:entication|orization)?"
      ]
    },
    "omk-frontend/app/kingdom/components/EnhancedAnalytics.tsx": {
      "type": "typescript",
      "size": 15769,
      "lines": 419,
      "functions": [
        {
          "name": "BACKEND_URL",
          "line": 11
        },
        {
          "name": "EnhancedAnalytics",
          "line": 13
        },
        {
          "name": "handleVisibilityChange",
          "line": 23
        },
        {
          "name": "interval",
          "line": 34
        },
        {
          "name": "fetchAnalytics",
          "line": 42
        },
        {
          "name": "token",
          "line": 44
        },
        {
          "name": "headers",
          "line": 45
        },
        {
          "name": "MetricCard",
          "line": 176
        },
        {
          "name": "RevenueOverview",
          "line": 200
        },
        {
          "name": "UserGrowth",
          "line": 285
        },
        {
          "name": "TransactionActivity",
          "line": 318
        },
        {
          "name": "OTCPipeline",
          "line": 356
        },
        {
          "name": "pending",
          "line": 357
        },
        {
          "name": "approved",
          "line": 358
        },
        {
          "name": "rejected",
          "line": 359
        },
        {
          "name": "total",
          "line": 360
        }
      ],
      "components": [
        {
          "name": "BACKEND_URL",
          "line": 11,
          "type": "component"
        },
        {
          "name": "EnhancedAnalytics",
          "line": 13,
          "type": "component"
        },
        {
          "name": "MetricCard",
          "line": 176,
          "type": "component"
        },
        {
          "name": "RevenueOverview",
          "line": 200,
          "type": "component"
        },
        {
          "name": "UserGrowth",
          "line": 285,
          "type": "component"
        },
        {
          "name": "TransactionActivity",
          "line": 318,
          "type": "component"
        },
        {
          "name": "OTCPipeline",
          "line": 356,
          "type": "component"
        }
      ],
      "imports": [
        "react",
        "framer-motion",
        "react-hot-toast"
      ],
      "keywords": [
        "api",
        "error",
        "token",
        "transaction",
        "user",
        "auth(?:entication|orization)?"
      ]
    },
    "omk-frontend/app/kingdom/components/ContractDeployer_OLD_BACKUP.tsx": {
      "type": "typescript",
      "size": 24897,
      "lines": 644,
      "functions": [
        {
          "name": "ContractDeployer",
          "line": 38
        },
        {
          "name": "loadContracts",
          "line": 58
        },
        {
          "name": "response",
          "line": 60
        },
        {
          "name": "data",
          "line": 63
        },
        {
          "name": "loadDeployments",
          "line": 75
        },
        {
          "name": "response",
          "line": 77
        },
        {
          "name": "data",
          "line": 80
        },
        {
          "name": "compileAllContracts",
          "line": 89
        },
        {
          "name": "response",
          "line": 92
        },
        {
          "name": "data",
          "line": 99
        },
        {
          "name": "prepareDeployment",
          "line": 115
        },
        {
          "name": "executePrepareDeployment",
          "line": 120
        },
        {
          "name": "response",
          "line": 124
        },
        {
          "name": "data",
          "line": 139
        },
        {
          "name": "executeDeployment",
          "line": 154
        },
        {
          "name": "confirmed",
          "line": 155
        },
        {
          "name": "response",
          "line": 167
        },
        {
          "name": "data",
          "line": 175
        },
        {
          "name": "cancelDeployment",
          "line": 192
        },
        {
          "name": "response",
          "line": 194
        },
        {
          "name": "data",
          "line": 199
        },
        {
          "name": "toggleContractSelection",
          "line": 210
        },
        {
          "name": "newSelection",
          "line": 211
        },
        {
          "name": "batchPrepareDeployment",
          "line": 220
        },
        {
          "name": "contractsArray",
          "line": 227
        },
        {
          "name": "response",
          "line": 235
        },
        {
          "name": "data",
          "line": 247
        },
        {
          "name": "copyToClipboard",
          "line": 260
        },
        {
          "name": "getStatusBadge",
          "line": 265
        },
        {
          "name": "badge",
          "line": 275
        },
        {
          "name": "Icon",
          "line": 276
        }
      ],
      "components": [
        {
          "name": "ContractDeployer",
          "line": 38,
          "type": "component"
        },
        {
          "name": "Icon",
          "line": 276,
          "type": "component"
        }
      ],
      "imports": [
        "react",
        "framer-motion",
        "react-hot-toast"
      ],
      "keywords": [
        "api",
        "error",
        "auth(?:entication|orization)?"
      ]
    },
    "omk-frontend/app/kingdom/components/BigQueryAnalytics.tsx": {
      "type": "typescript",
      "size": 13607,
      "lines": 405,
      "functions": [
        {
          "name": "BACKEND_URL",
          "line": 15
        },
        {
          "name": "BigQueryAnalytics",
          "line": 112
        },
        {
          "name": "executeQuery",
          "line": 119
        },
        {
          "name": "token",
          "line": 123
        },
        {
          "name": "response",
          "line": 124
        },
        {
          "name": "data",
          "line": 135
        },
        {
          "name": "handlePrebuiltQuery",
          "line": 151
        },
        {
          "name": "handleCustomQuery",
          "line": 157
        },
        {
          "name": "exportToCSV",
          "line": 165
        },
        {
          "name": "csv",
          "line": 168
        },
        {
          "name": "blob",
          "line": 173
        },
        {
          "name": "url",
          "line": 174
        },
        {
          "name": "a",
          "line": 175
        },
        {
          "name": "getChartData",
          "line": 184
        },
        {
          "name": "Icon",
          "line": 210
        }
      ],
      "components": [
        {
          "name": "BACKEND_URL",
          "line": 15,
          "type": "component"
        },
        {
          "name": "BigQueryAnalytics",
          "line": 112,
          "type": "component"
        },
        {
          "name": "Icon",
          "line": 210,
          "type": "component"
        }
      ],
      "imports": [
        "react",
        "framer-motion",
        "react-hot-toast"
      ],
      "keywords": [
        "api",
        "database",
        "error",
        "token",
        "transaction",
        "query",
        "auth(?:entication|orization)?"
      ]
    },
    "omk-frontend/app/kingdom/components/ContractDeployer.tsx": {
      "type": "typescript",
      "size": 29592,
      "lines": 758,
      "functions": [
        {
          "name": "ContractDeployer",
          "line": 56
        },
        {
          "name": "loadContracts",
          "line": 97
        },
        {
          "name": "token",
          "line": 99
        },
        {
          "name": "response",
          "line": 100
        },
        {
          "name": "data",
          "line": 108
        },
        {
          "name": "loadDeployments",
          "line": 124
        },
        {
          "name": "response",
          "line": 126
        },
        {
          "name": "data",
          "line": 129
        },
        {
          "name": "compileAllContracts",
          "line": 138
        },
        {
          "name": "token",
          "line": 142
        },
        {
          "name": "response",
          "line": 143
        },
        {
          "name": "data",
          "line": 155
        },
        {
          "name": "loadContractArtifact",
          "line": 171
        },
        {
          "name": "token",
          "line": 173
        },
        {
          "name": "response",
          "line": 174
        },
        {
          "name": "data",
          "line": 182
        },
        {
          "name": "prepareDeployment",
          "line": 198
        },
        {
          "name": "artifact",
          "line": 211
        },
        {
          "name": "executeDeployment",
          "line": 220
        },
        {
          "name": "targetChainId",
          "line": 224
        },
        {
          "name": "handleDeploymentSuccess",
          "line": 255
        },
        {
          "name": "response",
          "line": 260
        },
        {
          "name": "data",
          "line": 276
        },
        {
          "name": "handleConnectWallet",
          "line": 292
        },
        {
          "name": "injected",
          "line": 293
        },
        {
          "name": "getNetworkName",
          "line": 301
        },
        {
          "name": "getStatusBadge",
          "line": 310
        },
        {
          "name": "badge",
          "line": 320
        },
        {
          "name": "Icon",
          "line": 321
        },
        {
          "name": "newSelection",
          "line": 518
        }
      ],
      "components": [
        {
          "name": "ContractDeployer",
          "line": 56,
          "type": "component"
        },
        {
          "name": "Icon",
          "line": 321,
          "type": "component"
        }
      ],
      "imports": [
        "react",
        "framer-motion",
        "react-hot-toast",
        "viem",
        "viem/chains"
      ],
      "keywords": [
        "api",
        "error",
        "wallet",
        "token",
        "transaction",
        "auth(?:entication|orization)?"
      ]
    },
    "omk-frontend/app/kingdom/components/UserManagement.tsx": {
      "type": "typescript",
      "size": 14454,
      "lines": 394,
      "functions": [
        {
          "name": "BACKEND_URL",
          "line": 11
        },
        {
          "name": "UserManagement",
          "line": 13
        },
        {
          "name": "fetchUsers",
          "line": 29
        },
        {
          "name": "token",
          "line": 31
        },
        {
          "name": "response",
          "line": 32
        },
        {
          "name": "data",
          "line": 40
        },
        {
          "name": "filterUsers",
          "line": 57
        },
        {
          "name": "StatBox",
          "line": 250
        },
        {
          "name": "StatusBadge",
          "line": 269
        },
        {
          "name": "UserDetailModal",
          "line": 285
        },
        {
          "name": "handleAction",
          "line": 289
        },
        {
          "name": "token",
          "line": 292
        }
      ],
      "components": [
        {
          "name": "BACKEND_URL",
          "line": 11,
          "type": "component"
        },
        {
          "name": "UserManagement",
          "line": 13,
          "type": "component"
        },
        {
          "name": "StatBox",
          "line": 250,
          "type": "component"
        },
        {
          "name": "StatusBadge",
          "line": 269,
          "type": "component"
        },
        {
          "name": "UserDetailModal",
          "line": 285,
          "type": "component"
        }
      ],
      "imports": [
        "react",
        "framer-motion",
        "react-hot-toast"
      ],
      "keywords": [
        "api",
        "error",
        "wallet",
        "password",
        "token",
        "user",
        "auth(?:entication|orization)?"
      ]
    },
    "omk-frontend/app/kingdom/components/TestnetUtilities.tsx": {
      "type": "typescript",
      "size": 14990,
      "lines": 367,
      "functions": [
        {
          "name": "TestnetUtilities",
          "line": 14
        },
        {
          "name": "isOnSepolia",
          "line": 21
        },
        {
          "name": "handleConnectWallet",
          "line": 23
        },
        {
          "name": "injected",
          "line": 24
        },
        {
          "name": "handleSwitchToSepolia",
          "line": 33
        },
        {
          "name": "handleRequestFunds",
          "line": 48
        },
        {
          "name": "copyAddress",
          "line": 80
        },
        {
          "name": "faucets",
          "line": 87
        }
      ],
      "components": [
        {
          "name": "TestnetUtilities",
          "line": 14,
          "type": "component"
        }
      ],
      "imports": [
        "react",
        "framer-motion",
        "react-hot-toast",
        "wagmi",
        "viem/chains"
      ],
      "keywords": [
        "login",
        "error",
        "wallet"
      ]
    },
    "omk-frontend/app/kingdom/components/QueenDevelopment.tsx": {
      "type": "typescript",
      "size": 20836,
      "lines": 626,
      "functions": [
        {
          "name": "BACKEND_URL",
          "line": 12
        },
        {
          "name": "QueenDevelopment",
          "line": 35
        },
        {
          "name": "messagesEndRef",
          "line": 42
        },
        {
          "name": "loadConversationHistory",
          "line": 53
        },
        {
          "name": "token",
          "line": 55
        },
        {
          "name": "response",
          "line": 56
        },
        {
          "name": "data",
          "line": 64
        },
        {
          "name": "loadProposals",
          "line": 75
        },
        {
          "name": "token",
          "line": 77
        },
        {
          "name": "response",
          "line": 78
        },
        {
          "name": "data",
          "line": 86
        },
        {
          "name": "sendMessage",
          "line": 97
        },
        {
          "name": "userMessage",
          "line": 100
        },
        {
          "name": "token",
          "line": 112
        },
        {
          "name": "response",
          "line": 113
        },
        {
          "name": "data",
          "line": 125
        },
        {
          "name": "analyzeSystem",
          "line": 154
        },
        {
          "name": "token",
          "line": 163
        },
        {
          "name": "response",
          "line": 164
        },
        {
          "name": "data",
          "line": 169
        },
        {
          "name": "ChatInterface",
          "line": 264
        },
        {
          "name": "MessageBubble",
          "line": 318
        },
        {
          "name": "isUser",
          "line": 319
        },
        {
          "name": "ProposalsInterface",
          "line": 354
        },
        {
          "name": "ProposalCard",
          "line": 390
        },
        {
          "name": "config",
          "line": 402
        },
        {
          "name": "Icon",
          "line": 403
        },
        {
          "name": "ProposalDetail",
          "line": 436
        },
        {
          "name": "handleAction",
          "line": 440
        },
        {
          "name": "token",
          "line": 445
        },
        {
          "name": "url",
          "line": 446
        },
        {
          "name": "response",
          "line": 448
        },
        {
          "name": "data",
          "line": 453
        },
        {
          "name": "MetadataCard",
          "line": 594
        },
        {
          "name": "ActionButton",
          "line": 603
        }
      ],
      "components": [
        {
          "name": "BACKEND_URL",
          "line": 12,
          "type": "component"
        },
        {
          "name": "QueenDevelopment",
          "line": 35,
          "type": "component"
        },
        {
          "name": "ChatInterface",
          "line": 264,
          "type": "component"
        },
        {
          "name": "MessageBubble",
          "line": 318,
          "type": "component"
        },
        {
          "name": "ProposalsInterface",
          "line": 354,
          "type": "component"
        },
        {
          "name": "ProposalCard",
          "line": 390,
          "type": "component"
        },
        {
          "name": "Icon",
          "line": 403,
          "type": "component"
        },
        {
          "name": "ProposalDetail",
          "line": 436,
          "type": "component"
        },
        {
          "name": "MetadataCard",
          "line": 594,
          "type": "component"
        },
        {
          "name": "ActionButton",
          "line": 603,
          "type": "component"
        }
      ],
      "imports": [
        "react",
        "framer-motion",
        "react-hot-toast"
      ],
      "keywords": [
        "api",
        "error",
        "token",
        "user",
        "auth(?:entication|orization)?"
      ]
    },
    "omk-frontend/app/kingdom/components/HiveIntelligence.tsx": {
      "type": "typescript",
      "size": 15919,
      "lines": 419,
      "functions": [
        {
          "name": "BACKEND_URL",
          "line": 12
        },
        {
          "name": "HiveIntelligence",
          "line": 14
        },
        {
          "name": "fetchAllData",
          "line": 46
        },
        {
          "name": "token",
          "line": 48
        },
        {
          "name": "headers",
          "line": 49
        },
        {
          "name": "StatCard",
          "line": 181
        },
        {
          "name": "LiveActivityFeed",
          "line": 205
        },
        {
          "name": "MessageBusStats",
          "line": 244
        },
        {
          "name": "BeePerformanceGrid",
          "line": 313
        },
        {
          "name": "bees",
          "line": 314
        },
        {
          "name": "HiveBoardStats",
          "line": 378
        }
      ],
      "components": [
        {
          "name": "BACKEND_URL",
          "line": 12,
          "type": "component"
        },
        {
          "name": "HiveIntelligence",
          "line": 14,
          "type": "component"
        },
        {
          "name": "StatCard",
          "line": 181,
          "type": "component"
        },
        {
          "name": "LiveActivityFeed",
          "line": 205,
          "type": "component"
        },
        {
          "name": "MessageBusStats",
          "line": 244,
          "type": "component"
        },
        {
          "name": "BeePerformanceGrid",
          "line": 313,
          "type": "component"
        },
        {
          "name": "HiveBoardStats",
          "line": 378,
          "type": "component"
        }
      ],
      "imports": [
        "react",
        "framer-motion",
        "react-hot-toast",
        "@/app/hooks/useWebSocket"
      ],
      "keywords": [
        "api",
        "token",
        "auth(?:entication|orization)?",
        "error"
      ]
    },
    "omk-frontend/app/kingdom/components/OTCRequestManager.tsx": {
      "type": "typescript",
      "size": 14104,
      "lines": 353,
      "functions": [
        {
          "name": "OTCRequestManager",
          "line": 20
        },
        {
          "name": "loadRequests",
          "line": 30
        },
        {
          "name": "token",
          "line": 33
        },
        {
          "name": "queryParam",
          "line": 34
        },
        {
          "name": "response",
          "line": 35
        },
        {
          "name": "data",
          "line": 45
        },
        {
          "name": "handleApprove",
          "line": 64
        },
        {
          "name": "response",
          "line": 66
        },
        {
          "name": "handleReject",
          "line": 85
        },
        {
          "name": "reason",
          "line": 86
        },
        {
          "name": "response",
          "line": 90
        },
        {
          "name": "getStatusColor",
          "line": 111
        },
        {
          "name": "getStatusIcon",
          "line": 120
        },
        {
          "name": "StatusIcon",
          "line": 176
        }
      ],
      "components": [
        {
          "name": "OTCRequestManager",
          "line": 20,
          "type": "component"
        },
        {
          "name": "StatusIcon",
          "line": 176,
          "type": "component"
        }
      ],
      "imports": [
        "react",
        "framer-motion",
        "lucide-react",
        "react-hot-toast"
      ],
      "keywords": [
        "api",
        "error",
        "wallet",
        "token",
        "user",
        "auth(?:entication|orization)?"
      ]
    },
    "omk-frontend/app/kingdom/components/AutonomousFixer.tsx": {
      "type": "typescript",
      "size": 18358,
      "lines": 480,
      "functions": [
        {
          "name": "BACKEND_URL",
          "line": 12
        },
        {
          "name": "AutonomousFixer",
          "line": 27
        },
        {
          "name": "loadActiveFixes",
          "line": 39
        },
        {
          "name": "token",
          "line": 41
        },
        {
          "name": "response",
          "line": 42
        },
        {
          "name": "data",
          "line": 46
        },
        {
          "name": "checkIndexingStatus",
          "line": 55
        },
        {
          "name": "token",
          "line": 57
        },
        {
          "name": "response",
          "line": 58
        },
        {
          "name": "data",
          "line": 62
        },
        {
          "name": "indexCodebase",
          "line": 71
        },
        {
          "name": "token",
          "line": 74
        },
        {
          "name": "response",
          "line": 75
        },
        {
          "name": "data",
          "line": 84
        },
        {
          "name": "submitBugReport",
          "line": 99
        },
        {
          "name": "bugText",
          "line": 103
        },
        {
          "name": "token",
          "line": 109
        },
        {
          "name": "response",
          "line": 110
        },
        {
          "name": "data",
          "line": 123
        },
        {
          "name": "newFix",
          "line": 132
        },
        {
          "name": "approveFix",
          "line": 146
        },
        {
          "name": "token",
          "line": 149
        },
        {
          "name": "response",
          "line": 150
        },
        {
          "name": "data",
          "line": 159
        },
        {
          "name": "rejectFix",
          "line": 174
        },
        {
          "name": "token",
          "line": 176
        },
        {
          "name": "response",
          "line": 177
        },
        {
          "name": "data",
          "line": 186
        },
        {
          "name": "getSeverityColor",
          "line": 197
        },
        {
          "name": "getStatusIcon",
          "line": 206
        }
      ],
      "components": [
        {
          "name": "BACKEND_URL",
          "line": 12,
          "type": "component"
        },
        {
          "name": "AutonomousFixer",
          "line": 27,
          "type": "component"
        }
      ],
      "imports": [
        "react",
        "framer-motion",
        "react-hot-toast"
      ],
      "keywords": [
        "api",
        "error",
        "password",
        "login",
        "token",
        "auth(?:entication|orization)?"
      ]
    },
    "omk-frontend/app/kingdom/components/HiveMonitor.tsx": {
      "type": "typescript",
      "size": 8915,
      "lines": 233,
      "functions": [
        {
          "name": "HiveMonitor",
          "line": 18
        },
        {
          "name": "handleVisibilityChange",
          "line": 26
        },
        {
          "name": "interval",
          "line": 37
        },
        {
          "name": "loadBees",
          "line": 45
        },
        {
          "name": "token",
          "line": 47
        },
        {
          "name": "response",
          "line": 48
        },
        {
          "name": "data",
          "line": 57
        },
        {
          "name": "getStatusColor",
          "line": 82
        },
        {
          "name": "getStatusIcon",
          "line": 91
        },
        {
          "name": "StatusIcon",
          "line": 139
        }
      ],
      "components": [
        {
          "name": "HiveMonitor",
          "line": 18,
          "type": "component"
        },
        {
          "name": "StatusIcon",
          "line": 139,
          "type": "component"
        }
      ],
      "imports": [
        "react",
        "framer-motion",
        "lucide-react",
        "react-hot-toast"
      ],
      "keywords": [
        "api",
        "token",
        "auth(?:entication|orization)?",
        "error"
      ]
    },
    "omk-frontend/app/kingdom/login/page.tsx": {
      "type": "typescript",
      "size": 5228,
      "lines": 138,
      "functions": [
        {
          "name": "KingdomLogin",
          "line": 8
        },
        {
          "name": "router",
          "line": 9
        },
        {
          "name": "handleLogin",
          "line": 15
        },
        {
          "name": "response",
          "line": 22
        },
        {
          "name": "data",
          "line": 30
        }
      ],
      "components": [
        {
          "name": "KingdomLogin",
          "line": 8,
          "type": "component"
        }
      ],
      "imports": [
        "react",
        "next/navigation",
        "framer-motion",
        "lucide-react"
      ],
      "keywords": [
        "api",
        "error",
        "password",
        "login",
        "token",
        "security",
        "user",
        "auth(?:entication|orization)?"
      ]
    },
    "omk-frontend/app/learn/wallets/page.tsx": {
      "type": "typescript",
      "size": 7000,
      "lines": 223,
      "functions": [
        {
          "name": "LearnWalletsPage",
          "line": 9
        },
        {
          "name": "router",
          "line": 10
        },
        {
          "name": "learningPaths",
          "line": 14
        },
        {
          "name": "handleTopicClick",
          "line": 38
        },
        {
          "name": "getInitialMessage",
          "line": 43
        }
      ],
      "components": [
        {
          "name": "LearnWalletsPage",
          "line": 9,
          "type": "component"
        }
      ],
      "imports": [
        "react",
        "framer-motion",
        "lucide-react",
        "next/navigation",
        "@/components/education/TeacherBeeChat"
      ],
      "keywords": [
        "security",
        "wallet"
      ]
    },
    "omk-frontend/next-env.d.ts": {
      "type": "typescript",
      "size": 228,
      "lines": 6,
      "functions": [],
      "components": [],
      "imports": [],
      "keywords": []
    },
    "omk-frontend/tailwind.config.ts": {
      "type": "typescript",
      "size": 949,
      "lines": 34,
      "functions": [],
      "components": [],
      "imports": [
        "tailwindcss"
      ],
      "keywords": []
    },
    "omk-frontend/stores/authStore.ts": {
      "type": "typescript",
      "size": 2783,
      "lines": 111,
      "functions": [
        {
          "name": "useAuthStore",
          "line": 48
        },
        {
          "name": "wallets",
          "line": 59
        },
        {
          "name": "wallets",
          "line": 68
        },
        {
          "name": "primary",
          "line": 69
        },
        {
          "name": "wallet",
          "line": 81
        }
      ],
      "components": [],
      "imports": [
        "zustand",
        "zustand/middleware"
      ],
      "keywords": [
        "user",
        "token",
        "auth(?:entication|orization)?",
        "wallet"
      ]
    },
    "omk-frontend/lib/utils.ts": {
      "type": "typescript",
      "size": 1266,
      "lines": 45,
      "functions": [
        {
          "name": "cn",
          "line": 4
        },
        {
          "name": "formatAddress",
          "line": 8
        },
        {
          "name": "formatNumber",
          "line": 12
        },
        {
          "name": "formatCurrency",
          "line": 19
        },
        {
          "name": "absValue",
          "line": 21
        }
      ],
      "components": [],
      "imports": [
        "clsx",
        "tailwind-merge"
      ],
      "keywords": []
    },
    "omk-frontend/lib/api.ts": {
      "type": "typescript",
      "size": 2562,
      "lines": 69,
      "functions": [
        {
          "name": "API_BASE_URL",
          "line": 3
        },
        {
          "name": "api",
          "line": 7
        },
        {
          "name": "token",
          "line": 17
        },
        {
          "name": "frontendAPI",
          "line": 26
        }
      ],
      "components": [
        {
          "name": "API_BASE_URL",
          "line": 3,
          "type": "component"
        }
      ],
      "imports": [
        "axios"
      ],
      "keywords": [
        "api",
        "wallet",
        "password",
        "login",
        "token",
        "user",
        "auth(?:entication|orization)?"
      ]
    },
    "omk-frontend/lib/chatEvents.ts": {
      "type": "typescript",
      "size": 1678,
      "lines": 72,
      "functions": [
        {
          "name": "triggerChatMessage",
          "line": 15
        },
        {
          "name": "chatActions",
          "line": 23
        }
      ],
      "components": [],
      "imports": [],
      "keywords": [
        "user"
      ]
    },
    "omk-frontend/lib/translations.ts": {
      "type": "typescript",
      "size": 15218,
      "lines": 174,
      "functions": [
        {
          "name": "useTranslations",
          "line": 171
        }
      ],
      "components": [],
      "imports": [],
      "keywords": [
        "token",
        "wallet",
        "error"
      ]
    },
    "omk-frontend/lib/store.ts": {
      "type": "typescript",
      "size": 2443,
      "lines": 91,
      "functions": [
        {
          "name": "useAppStore",
          "line": 36
        }
      ],
      "components": [],
      "imports": [
        "zustand"
      ],
      "keywords": [
        "user",
        "token",
        "auth(?:entication|orization)?"
      ]
    },
    "omk-frontend/services/queenApi.ts": {
      "type": "typescript",
      "size": 5462,
      "lines": 228,
      "functions": [
        {
          "name": "QUEEN_API_BASE",
          "line": 6
        },
        {
          "name": "response",
          "line": 43
        },
        {
          "name": "data",
          "line": 58
        },
        {
          "name": "response",
          "line": 71
        },
        {
          "name": "data",
          "line": 85
        },
        {
          "name": "response",
          "line": 98
        },
        {
          "name": "response",
          "line": 116
        },
        {
          "name": "response",
          "line": 140
        },
        {
          "name": "response",
          "line": 164
        },
        {
          "name": "response",
          "line": 188
        },
        {
          "name": "response",
          "line": 206
        },
        {
          "name": "queenApi",
          "line": 226
        }
      ],
      "components": [
        {
          "name": "QUEEN_API_BASE",
          "line": 6,
          "type": "component"
        }
      ],
      "imports": [],
      "keywords": [
        "user",
        "api",
        "error"
      ]
    },
    "omk-frontend/lib/contracts/dispenser.ts": {
      "type": "typescript",
      "size": 3855,
      "lines": 156,
      "functions": [
        {
          "name": "DISPENSER_ADDRESS",
          "line": 6
        },
        {
          "name": "DISPENSER_ABI",
          "line": 8
        },
        {
          "name": "SUPPORTED_TOKENS",
          "line": 99
        },
        {
          "name": "ERC20_ABI",
          "line": 127
        }
      ],
      "components": [
        {
          "name": "DISPENSER_ADDRESS",
          "line": 6,
          "type": "component"
        },
        {
          "name": "DISPENSER_ABI",
          "line": 8,
          "type": "component"
        },
        {
          "name": "SUPPORTED_TOKENS",
          "line": 99,
          "type": "component"
        },
        {
          "name": "ERC20_ABI",
          "line": 127,
          "type": "component"
        }
      ],
      "imports": [],
      "keywords": [
        "user",
        "token"
      ]
    },
    "omk-frontend/lib/web3/config.ts": {
      "type": "typescript",
      "size": 1846,
      "lines": 62,
      "functions": [
        {
          "name": "projectId",
          "line": 6
        },
        {
          "name": "hasValidProjectId",
          "line": 9
        },
        {
          "name": "getConnectors",
          "line": 18
        },
        {
          "name": "baseConnectors",
          "line": 19
        },
        {
          "name": "config",
          "line": 53
        }
      ],
      "components": [],
      "imports": [
        "wagmi",
        "wagmi/chains",
        "wagmi/connectors"
      ],
      "keywords": [
        "wallet"
      ]
    },
    "omk-frontend/lib/ai/teacherBee.ts": {
      "type": "typescript",
      "size": 7994,
      "lines": 314,
      "functions": [
        {
          "name": "apiKey",
          "line": 3
        },
        {
          "name": "prompt",
          "line": 16
        },
        {
          "name": "result",
          "line": 17
        },
        {
          "name": "response",
          "line": 18
        },
        {
          "name": "guides",
          "line": 117
        },
        {
          "name": "guide",
          "line": 245
        },
        {
          "name": "tips",
          "line": 254
        },
        {
          "name": "teacherBee",
          "line": 313
        }
      ],
      "components": [],
      "imports": [
        "@google/generative-ai"
      ],
      "keywords": [
        "error",
        "wallet",
        "password",
        "token",
        "security",
        "transaction",
        "user"
      ]
    },
    "omk-frontend/app/hooks/useWebSocket.ts": {
      "type": "typescript",
      "size": 5162,
      "lines": 194,
      "functions": [
        {
          "name": "useWebSocket",
          "line": 18
        },
        {
          "name": "wsRef",
          "line": 31
        },
        {
          "name": "reconnectAttemptsRef",
          "line": 32
        },
        {
          "name": "reconnectTimeoutRef",
          "line": 33
        },
        {
          "name": "connect",
          "line": 35
        },
        {
          "name": "ws",
          "line": 42
        },
        {
          "name": "data",
          "line": 53
        },
        {
          "name": "disconnect",
          "line": 91
        },
        {
          "name": "send",
          "line": 101
        },
        {
          "name": "useHiveWebSocket",
          "line": 129
        },
        {
          "name": "BACKEND_URL",
          "line": 130
        },
        {
          "name": "wsUrl",
          "line": 131
        },
        {
          "name": "useAnalyticsWebSocket",
          "line": 152
        },
        {
          "name": "BACKEND_URL",
          "line": 153
        },
        {
          "name": "wsUrl",
          "line": 154
        },
        {
          "name": "useBeeWebSocket",
          "line": 175
        },
        {
          "name": "BACKEND_URL",
          "line": 176
        },
        {
          "name": "wsUrl",
          "line": 177
        }
      ],
      "components": [
        {
          "name": "BACKEND_URL",
          "line": 130,
          "type": "component"
        },
        {
          "name": "BACKEND_URL",
          "line": 153,
          "type": "component"
        },
        {
          "name": "BACKEND_URL",
          "line": 176,
          "type": "component"
        }
      ],
      "imports": [
        "react",
        "react-hot-toast"
      ],
      "keywords": [
        "error"
      ]
    },
    "omk-frontend/app/api/analytics/conversion/route.ts": {
      "type": "typescript",
      "size": 3731,
      "lines": 124,
      "functions": [
        {
          "name": "POST",
          "line": 5
        },
        {
          "name": "data",
          "line": 7
        },
        {
          "name": "highValueEvents",
          "line": 39
        },
        {
          "name": "cryptoConvertEvents",
          "line": 51
        },
        {
          "name": "queenApiUrl",
          "line": 64
        },
        {
          "name": "GET",
          "line": 97
        }
      ],
      "components": [
        {
          "name": "POST",
          "line": 5,
          "type": "component"
        },
        {
          "name": "GET",
          "line": 97,
          "type": "component"
        }
      ],
      "imports": [
        "next/server"
      ],
      "keywords": [
        "api",
        "database",
        "error",
        "wallet",
        "query",
        "user",
        "auth(?:entication|orization)?"
      ]
    },
    "omk-frontend/app/api/teacher-bee/analyze-screenshot/route.ts": {
      "type": "typescript",
      "size": 3960,
      "lines": 90,
      "functions": [
        {
          "name": "POST",
          "line": 3
        },
        {
          "name": "formData",
          "line": 5
        },
        {
          "name": "question",
          "line": 6
        },
        {
          "name": "screenshot",
          "line": 7
        },
        {
          "name": "queenApiUrl",
          "line": 10
        },
        {
          "name": "queenFormData",
          "line": 13
        },
        {
          "name": "bytes",
          "line": 19
        },
        {
          "name": "buffer",
          "line": 20
        },
        {
          "name": "base64",
          "line": 21
        },
        {
          "name": "response",
          "line": 28
        },
        {
          "name": "data",
          "line": 37
        },
        {
          "name": "question",
          "line": 48
        }
      ],
      "components": [
        {
          "name": "POST",
          "line": 3,
          "type": "component"
        }
      ],
      "imports": [
        "next/server"
      ],
      "keywords": [
        "api",
        "password",
        "error",
        "wallet"
      ]
    }
  },
  "functions": {
    "backend/queen-ai/setup_database.py::setup_database": {
      "file": "backend/queen-ai/setup_database.py",
      "line": 24,
      "type": "function"
    },
    "backend/queen-ai/setup_database.py::verify_connection": {
      "file": "backend/queen-ai/setup_database.py",
      "line": 50,
      "type": "function"
    },
    "backend/queen-ai/setup_database.py::main": {
      "file": "backend/queen-ai/setup_database.py",
      "line": 69,
      "type": "function"
    },
    "backend/queen-ai/setup_env.py::setup_env": {
      "file": "backend/queen-ai/setup_env.py",
      "line": 11,
      "type": "function"
    },
    "backend/queen-ai/full_pipeline_test.py::print_header": {
      "file": "backend/queen-ai/full_pipeline_test.py",
      "line": 91,
      "type": "function"
    },
    "backend/queen-ai/full_pipeline_test.py::info": {
      "file": "backend/queen-ai/full_pipeline_test.py",
      "line": 25,
      "type": "function"
    },
    "backend/queen-ai/full_pipeline_test.py::debug": {
      "file": "backend/queen-ai/full_pipeline_test.py",
      "line": 26,
      "type": "function"
    },
    "backend/queen-ai/full_pipeline_test.py::warning": {
      "file": "backend/queen-ai/full_pipeline_test.py",
      "line": 27,
      "type": "function"
    },
    "backend/queen-ai/full_pipeline_test.py::error": {
      "file": "backend/queen-ai/full_pipeline_test.py",
      "line": 28,
      "type": "function"
    },
    "backend/queen-ai/full_pipeline_test.py::get_logger": {
      "file": "backend/queen-ai/full_pipeline_test.py",
      "line": 32,
      "type": "function"
    },
    "backend/queen-ai/full_pipeline_test.py::__init__": {
      "file": "backend/queen-ai/full_pipeline_test.py",
      "line": 45,
      "type": "function"
    },
    "backend/queen-ai/full_pipeline_test.py::record_pass": {
      "file": "backend/queen-ai/full_pipeline_test.py",
      "line": 51,
      "type": "function"
    },
    "backend/queen-ai/full_pipeline_test.py::record_fail": {
      "file": "backend/queen-ai/full_pipeline_test.py",
      "line": 56,
      "type": "function"
    },
    "backend/queen-ai/full_pipeline_test.py::summary": {
      "file": "backend/queen-ai/full_pipeline_test.py",
      "line": 62,
      "type": "function"
    },
    "backend/queen-ai/stop.py::__init__": {
      "file": "backend/queen-ai/stop.py",
      "line": 31,
      "type": "function"
    },
    "backend/queen-ai/stop.py::_find_processes": {
      "file": "backend/queen-ai/stop.py",
      "line": 82,
      "type": "function"
    },
    "backend/queen-ai/test_private_sale.py::info": {
      "file": "backend/queen-ai/test_private_sale.py",
      "line": 13,
      "type": "function"
    },
    "backend/queen-ai/test_private_sale.py::debug": {
      "file": "backend/queen-ai/test_private_sale.py",
      "line": 14,
      "type": "function"
    },
    "backend/queen-ai/test_private_sale.py::warning": {
      "file": "backend/queen-ai/test_private_sale.py",
      "line": 15,
      "type": "function"
    },
    "backend/queen-ai/test_private_sale.py::error": {
      "file": "backend/queen-ai/test_private_sale.py",
      "line": 16,
      "type": "function"
    },
    "backend/queen-ai/test_private_sale.py::get_logger": {
      "file": "backend/queen-ai/test_private_sale.py",
      "line": 20,
      "type": "function"
    },
    "backend/queen-ai/test_private_sale.py::__init__": {
      "file": "backend/queen-ai/test_private_sale.py",
      "line": 29,
      "type": "function"
    },
    "backend/queen-ai/test_private_sale.py::print_header": {
      "file": "backend/queen-ai/test_private_sale.py",
      "line": 34,
      "type": "function"
    },
    "backend/queen-ai/test_private_sale.py::assert_equal": {
      "file": "backend/queen-ai/test_private_sale.py",
      "line": 39,
      "type": "function"
    },
    "backend/queen-ai/test_private_sale.py::assert_true": {
      "file": "backend/queen-ai/test_private_sale.py",
      "line": 51,
      "type": "function"
    },
    "backend/queen-ai/test_private_sale.py::assert_false": {
      "file": "backend/queen-ai/test_private_sale.py",
      "line": 182,
      "type": "function"
    },
    "backend/queen-ai/test_private_sale.py::print_summary": {
      "file": "backend/queen-ai/test_private_sale.py",
      "line": 326,
      "type": "function"
    },
    "backend/queen-ai/start.py::__init__": {
      "file": "backend/queen-ai/start.py",
      "line": 36,
      "type": "function"
    },
    "backend/queen-ai/start.py::_handle_shutdown_signal": {
      "file": "backend/queen-ai/start.py",
      "line": 49,
      "type": "function"
    },
    "backend/queen-ai/debug.py::__init__": {
      "file": "backend/queen-ai/debug.py",
      "line": 33,
      "type": "function"
    },
    "backend/queen-ai/debug.py::print_recommendations": {
      "file": "backend/queen-ai/debug.py",
      "line": 382,
      "type": "function"
    },
    "backend/queen-ai/reboot.py::__init__": {
      "file": "backend/queen-ai/reboot.py",
      "line": 30,
      "type": "function"
    },
    "backend/queen-ai/health_check.py::__init__": {
      "file": "backend/queen-ai/health_check.py",
      "line": 121,
      "type": "function"
    },
    "backend/queen-ai/health_check.py::add_check": {
      "file": "backend/queen-ai/health_check.py",
      "line": 40,
      "type": "function"
    },
    "backend/queen-ai/health_check.py::add_error": {
      "file": "backend/queen-ai/health_check.py",
      "line": 48,
      "type": "function"
    },
    "backend/queen-ai/health_check.py::add_warning": {
      "file": "backend/queen-ai/health_check.py",
      "line": 52,
      "type": "function"
    },
    "backend/queen-ai/health_check.py::set_metric": {
      "file": "backend/queen-ai/health_check.py",
      "line": 56,
      "type": "function"
    },
    "backend/queen-ai/health_check.py::calculate_status": {
      "file": "backend/queen-ai/health_check.py",
      "line": 60,
      "type": "function"
    },
    "backend/queen-ai/health_check.py::print_report": {
      "file": "backend/queen-ai/health_check.py",
      "line": 77,
      "type": "function"
    },
    "backend/queen-ai/health_check.py::_print_summary": {
      "file": "backend/queen-ai/health_check.py",
      "line": 401,
      "type": "function"
    },
    "backend/queen-ai/check_env.py::check_env": {
      "file": "backend/queen-ai/check_env.py",
      "line": 12,
      "type": "function"
    },
    "backend/queen-ai/manage.py::__init__": {
      "file": "backend/queen-ai/manage.py",
      "line": 33,
      "type": "function"
    },
    "backend/queen-ai/manage.py::_run_command": {
      "file": "backend/queen-ai/manage.py",
      "line": 218,
      "type": "function"
    },
    "backend/queen-ai/manage.py::print_help": {
      "file": "backend/queen-ai/manage.py",
      "line": 229,
      "type": "function"
    },
    "backend/queen-ai/simple_bee_test.py::print_header": {
      "file": "backend/queen-ai/simple_bee_test.py",
      "line": 33,
      "type": "function"
    },
    "backend/queen-ai/simple_bee_test.py::print_test": {
      "file": "backend/queen-ai/simple_bee_test.py",
      "line": 39,
      "type": "function"
    },
    "backend/queen-ai/simple_bee_test.py::print_result": {
      "file": "backend/queen-ai/simple_bee_test.py",
      "line": 43,
      "type": "function"
    },
    "backend/queen-ai/simple_bee_test.py::info": {
      "file": "backend/queen-ai/simple_bee_test.py",
      "line": 13,
      "type": "function"
    },
    "backend/queen-ai/simple_bee_test.py::debug": {
      "file": "backend/queen-ai/simple_bee_test.py",
      "line": 14,
      "type": "function"
    },
    "backend/queen-ai/simple_bee_test.py::warning": {
      "file": "backend/queen-ai/simple_bee_test.py",
      "line": 15,
      "type": "function"
    },
    "backend/queen-ai/simple_bee_test.py::error": {
      "file": "backend/queen-ai/simple_bee_test.py",
      "line": 16,
      "type": "function"
    },
    "backend/queen-ai/simple_bee_test.py::get_logger": {
      "file": "backend/queen-ai/simple_bee_test.py",
      "line": 20,
      "type": "function"
    },
    "backend/queen-ai/main.py::create_app": {
      "file": "backend/queen-ai/main.py",
      "line": 70,
      "type": "function"
    },
    "backend/queen-ai/status.py::__init__": {
      "file": "backend/queen-ai/status.py",
      "line": 28,
      "type": "function"
    },
    "backend/queen-ai/status.py::clear_screen": {
      "file": "backend/queen-ai/status.py",
      "line": 32,
      "type": "function"
    },
    "backend/queen-ai/status.py::_create_bar": {
      "file": "backend/queen-ai/status.py",
      "line": 184,
      "type": "function"
    },
    "backend/queen-ai/status.py::_get_color": {
      "file": "backend/queen-ai/status.py",
      "line": 190,
      "type": "function"
    },
    "backend/queen-ai/integration_tests/test_blockchain_integration.py::__init__": {
      "file": "backend/queen-ai/integration_tests/test_blockchain_integration.py",
      "line": 43,
      "type": "function"
    },
    "backend/queen-ai/integration_tests/test_blockchain_integration.py::_check_requirements": {
      "file": "backend/queen-ai/integration_tests/test_blockchain_integration.py",
      "line": 52,
      "type": "function"
    },
    "backend/queen-ai/integration_tests/test_blockchain_integration.py::print_header": {
      "file": "backend/queen-ai/integration_tests/test_blockchain_integration.py",
      "line": 61,
      "type": "function"
    },
    "backend/queen-ai/integration_tests/test_blockchain_integration.py::record_pass": {
      "file": "backend/queen-ai/integration_tests/test_blockchain_integration.py",
      "line": 66,
      "type": "function"
    },
    "backend/queen-ai/integration_tests/test_blockchain_integration.py::record_fail": {
      "file": "backend/queen-ai/integration_tests/test_blockchain_integration.py",
      "line": 70,
      "type": "function"
    },
    "backend/queen-ai/integration_tests/test_blockchain_integration.py::record_skip": {
      "file": "backend/queen-ai/integration_tests/test_blockchain_integration.py",
      "line": 75,
      "type": "function"
    },
    "backend/queen-ai/integration_tests/test_blockchain_integration.py::print_summary": {
      "file": "backend/queen-ai/integration_tests/test_blockchain_integration.py",
      "line": 278,
      "type": "function"
    },
    "backend/queen-ai/integration_tests/test_llm_integration.py::__init__": {
      "file": "backend/queen-ai/integration_tests/test_llm_integration.py",
      "line": 37,
      "type": "function"
    },
    "backend/queen-ai/integration_tests/test_llm_integration.py::print_header": {
      "file": "backend/queen-ai/integration_tests/test_llm_integration.py",
      "line": 44,
      "type": "function"
    },
    "backend/queen-ai/integration_tests/test_llm_integration.py::record_pass": {
      "file": "backend/queen-ai/integration_tests/test_llm_integration.py",
      "line": 49,
      "type": "function"
    },
    "backend/queen-ai/integration_tests/test_llm_integration.py::record_fail": {
      "file": "backend/queen-ai/integration_tests/test_llm_integration.py",
      "line": 53,
      "type": "function"
    },
    "backend/queen-ai/integration_tests/test_llm_integration.py::record_skip": {
      "file": "backend/queen-ai/integration_tests/test_llm_integration.py",
      "line": 58,
      "type": "function"
    },
    "backend/queen-ai/integration_tests/test_llm_integration.py::print_summary": {
      "file": "backend/queen-ai/integration_tests/test_llm_integration.py",
      "line": 278,
      "type": "function"
    },
    "backend/queen-ai/tests/test_database.py::db_session": {
      "file": "backend/queen-ai/tests/test_database.py",
      "line": 13,
      "type": "function"
    },
    "backend/queen-ai/tests/test_database.py::test_database_connection": {
      "file": "backend/queen-ai/tests/test_database.py",
      "line": 28,
      "type": "function"
    },
    "backend/queen-ai/tests/test_database.py::test_tables_exist": {
      "file": "backend/queen-ai/tests/test_database.py",
      "line": 40,
      "type": "function"
    },
    "backend/queen-ai/tests/test_database.py::test_create_user": {
      "file": "backend/queen-ai/tests/test_database.py",
      "line": 63,
      "type": "function"
    },
    "backend/queen-ai/tests/test_database.py::test_query_user_by_email": {
      "file": "backend/queen-ai/tests/test_database.py",
      "line": 86,
      "type": "function"
    },
    "backend/queen-ai/tests/test_database.py::test_query_demo_users": {
      "file": "backend/queen-ai/tests/test_database.py",
      "line": 96,
      "type": "function"
    },
    "backend/queen-ai/tests/test_database.py::test_create_otc_request": {
      "file": "backend/queen-ai/tests/test_database.py",
      "line": 109,
      "type": "function"
    },
    "backend/queen-ai/tests/test_database.py::test_query_system_config": {
      "file": "backend/queen-ai/tests/test_database.py",
      "line": 137,
      "type": "function"
    },
    "backend/queen-ai/tests/test_database.py::test_password_hashing": {
      "file": "backend/queen-ai/tests/test_database.py",
      "line": 155,
      "type": "function"
    },
    "backend/queen-ai/tests/test_database.py::test_jwt_token_creation": {
      "file": "backend/queen-ai/tests/test_database.py",
      "line": 164,
      "type": "function"
    },
    "backend/queen-ai/tests/test_database.py::test_jwt_token_decoding": {
      "file": "backend/queen-ai/tests/test_database.py",
      "line": 173,
      "type": "function"
    },
    "backend/queen-ai/tests/test_database.py::test_invalid_token_decoding": {
      "file": "backend/queen-ai/tests/test_database.py",
      "line": 184,
      "type": "function"
    },
    "backend/queen-ai/tests/test_database.py::test_user_otc_relation": {
      "file": "backend/queen-ai/tests/test_database.py",
      "line": 194,
      "type": "function"
    },
    "backend/queen-ai/tests/test_integration.py::test_db": {
      "file": "backend/queen-ai/tests/test_integration.py",
      "line": 21,
      "type": "function"
    },
    "backend/queen-ai/tests/test_integration.py::test_database_initialized_on_startup": {
      "file": "backend/queen-ai/tests/test_integration.py",
      "line": 31,
      "type": "function"
    },
    "backend/queen-ai/tests/test_integration.py::test_seeded_data_exists": {
      "file": "backend/queen-ai/tests/test_integration.py",
      "line": 41,
      "type": "function"
    },
    "backend/queen-ai/tests/test_integration.py::test_otc_request_saved_to_database": {
      "file": "backend/queen-ai/tests/test_integration.py",
      "line": 60,
      "type": "function"
    },
    "backend/queen-ai/tests/test_integration.py::test_whale_purchase_flagged": {
      "file": "backend/queen-ai/tests/test_integration.py",
      "line": 95,
      "type": "function"
    },
    "backend/queen-ai/tests/test_integration.py::test_login_creates_session": {
      "file": "backend/queen-ai/tests/test_integration.py",
      "line": 130,
      "type": "function"
    },
    "backend/queen-ai/tests/test_integration.py::test_new_user_registration_in_database": {
      "file": "backend/queen-ai/tests/test_integration.py",
      "line": 159,
      "type": "function"
    },
    "backend/queen-ai/tests/test_integration.py::test_health_endpoint_returns_200": {
      "file": "backend/queen-ai/tests/test_integration.py",
      "line": 193,
      "type": "function"
    },
    "backend/queen-ai/tests/test_integration.py::test_database_session_cleanup": {
      "file": "backend/queen-ai/tests/test_integration.py",
      "line": 206,
      "type": "function"
    },
    "backend/queen-ai/tests/test_integration.py::test_admin_user_has_admin_role": {
      "file": "backend/queen-ai/tests/test_integration.py",
      "line": 229,
      "type": "function"
    },
    "backend/queen-ai/tests/test_integration.py::test_demo_users_have_user_role": {
      "file": "backend/queen-ai/tests/test_integration.py",
      "line": 236,
      "type": "function"
    },
    "backend/queen-ai/tests/test_auth_endpoints.py::test_db": {
      "file": "backend/queen-ai/tests/test_auth_endpoints.py",
      "line": 20,
      "type": "function"
    },
    "backend/queen-ai/tests/test_auth_endpoints.py::test_admin_login_success": {
      "file": "backend/queen-ai/tests/test_auth_endpoints.py",
      "line": 30,
      "type": "function"
    },
    "backend/queen-ai/tests/test_auth_endpoints.py::test_demo_user_login_success": {
      "file": "backend/queen-ai/tests/test_auth_endpoints.py",
      "line": 49,
      "type": "function"
    },
    "backend/queen-ai/tests/test_auth_endpoints.py::test_login_wrong_password": {
      "file": "backend/queen-ai/tests/test_auth_endpoints.py",
      "line": 67,
      "type": "function"
    },
    "backend/queen-ai/tests/test_auth_endpoints.py::test_login_nonexistent_user": {
      "file": "backend/queen-ai/tests/test_auth_endpoints.py",
      "line": 80,
      "type": "function"
    },
    "backend/queen-ai/tests/test_auth_endpoints.py::test_register_new_user": {
      "file": "backend/queen-ai/tests/test_auth_endpoints.py",
      "line": 95,
      "type": "function"
    },
    "backend/queen-ai/tests/test_auth_endpoints.py::test_register_duplicate_email": {
      "file": "backend/queen-ai/tests/test_auth_endpoints.py",
      "line": 114,
      "type": "function"
    },
    "backend/queen-ai/tests/test_auth_endpoints.py::test_get_current_user_with_valid_token": {
      "file": "backend/queen-ai/tests/test_auth_endpoints.py",
      "line": 131,
      "type": "function"
    },
    "backend/queen-ai/tests/test_auth_endpoints.py::test_get_current_user_without_token": {
      "file": "backend/queen-ai/tests/test_auth_endpoints.py",
      "line": 157,
      "type": "function"
    },
    "backend/queen-ai/tests/test_auth_endpoints.py::test_get_current_user_with_invalid_token": {
      "file": "backend/queen-ai/tests/test_auth_endpoints.py",
      "line": 163,
      "type": "function"
    },
    "backend/queen-ai/tests/test_auth_endpoints.py::test_logout_with_valid_token": {
      "file": "backend/queen-ai/tests/test_auth_endpoints.py",
      "line": 175,
      "type": "function"
    },
    "backend/queen-ai/tests/test_auth_endpoints.py::test_complete_flow": {
      "file": "backend/queen-ai/tests/test_auth_endpoints.py",
      "line": 200,
      "type": "function"
    },
    "backend/queen-ai/alembic/env.py::run_migrations_offline": {
      "file": "backend/queen-ai/alembic/env.py",
      "line": 34,
      "type": "function"
    },
    "backend/queen-ai/alembic/env.py::run_migrations_online": {
      "file": "backend/queen-ai/alembic/env.py",
      "line": 55,
      "type": "function"
    },
    "backend/queen-ai/tests/security/test_output_filter.py::output_filter": {
      "file": "backend/queen-ai/tests/security/test_output_filter.py",
      "line": 286,
      "type": "function"
    },
    "backend/queen-ai/tests/security/test_output_filter.py::test_redact_openai_key": {
      "file": "backend/queen-ai/tests/security/test_output_filter.py",
      "line": 20,
      "type": "function"
    },
    "backend/queen-ai/tests/security/test_output_filter.py::test_redact_anthropic_key": {
      "file": "backend/queen-ai/tests/security/test_output_filter.py",
      "line": 27,
      "type": "function"
    },
    "backend/queen-ai/tests/security/test_output_filter.py::test_redact_google_key": {
      "file": "backend/queen-ai/tests/security/test_output_filter.py",
      "line": 34,
      "type": "function"
    },
    "backend/queen-ai/tests/security/test_output_filter.py::test_redact_jwt_token": {
      "file": "backend/queen-ai/tests/security/test_output_filter.py",
      "line": 41,
      "type": "function"
    },
    "backend/queen-ai/tests/security/test_output_filter.py::test_redact_private_key_header": {
      "file": "backend/queen-ai/tests/security/test_output_filter.py",
      "line": 48,
      "type": "function"
    },
    "backend/queen-ai/tests/security/test_output_filter.py::test_redact_ethereum_private_key": {
      "file": "backend/queen-ai/tests/security/test_output_filter.py",
      "line": 55,
      "type": "function"
    },
    "backend/queen-ai/tests/security/test_output_filter.py::test_multiple_secrets": {
      "file": "backend/queen-ai/tests/security/test_output_filter.py",
      "line": 62,
      "type": "function"
    },
    "backend/queen-ai/tests/security/test_output_filter.py::test_mask_email": {
      "file": "backend/queen-ai/tests/security/test_output_filter.py",
      "line": 76,
      "type": "function"
    },
    "backend/queen-ai/tests/security/test_output_filter.py::test_mask_credit_card": {
      "file": "backend/queen-ai/tests/security/test_output_filter.py",
      "line": 84,
      "type": "function"
    },
    "backend/queen-ai/tests/security/test_output_filter.py::test_mask_ssn": {
      "file": "backend/queen-ai/tests/security/test_output_filter.py",
      "line": 91,
      "type": "function"
    },
    "backend/queen-ai/tests/security/test_output_filter.py::test_detect_rm_rf": {
      "file": "backend/queen-ai/tests/security/test_output_filter.py",
      "line": 100,
      "type": "function"
    },
    "backend/queen-ai/tests/security/test_output_filter.py::test_detect_eval": {
      "file": "backend/queen-ai/tests/security/test_output_filter.py",
      "line": 107,
      "type": "function"
    },
    "backend/queen-ai/tests/security/test_output_filter.py::test_detect_exec": {
      "file": "backend/queen-ai/tests/security/test_output_filter.py",
      "line": 114,
      "type": "function"
    },
    "backend/queen-ai/tests/security/test_output_filter.py::test_detect_subprocess": {
      "file": "backend/queen-ai/tests/security/test_output_filter.py",
      "line": 121,
      "type": "function"
    },
    "backend/queen-ai/tests/security/test_output_filter.py::test_detect_sql_drop": {
      "file": "backend/queen-ai/tests/security/test_output_filter.py",
      "line": 128,
      "type": "function"
    },
    "backend/queen-ai/tests/security/test_output_filter.py::test_safe_code": {
      "file": "backend/queen-ai/tests/security/test_output_filter.py",
      "line": 135,
      "type": "function"
    },
    "backend/queen-ai/tests/security/test_output_filter.py::test_validate_safe_code_proposal": {
      "file": "backend/queen-ai/tests/security/test_output_filter.py",
      "line": 147,
      "type": "function"
    },
    "backend/queen-ai/tests/security/test_output_filter.py::test_validate_malicious_code_proposal": {
      "file": "backend/queen-ai/tests/security/test_output_filter.py",
      "line": 157,
      "type": "function"
    },
    "backend/queen-ai/tests/security/test_output_filter.py::test_validate_code_with_secrets": {
      "file": "backend/queen-ai/tests/security/test_output_filter.py",
      "line": 164,
      "type": "function"
    },
    "backend/queen-ai/tests/security/test_output_filter.py::test_filter_response_with_secrets": {
      "file": "backend/queen-ai/tests/security/test_output_filter.py",
      "line": 177,
      "type": "function"
    },
    "backend/queen-ai/tests/security/test_output_filter.py::test_filter_response_with_pii": {
      "file": "backend/queen-ai/tests/security/test_output_filter.py",
      "line": 184,
      "type": "function"
    },
    "backend/queen-ai/tests/security/test_output_filter.py::test_filter_response_no_pii_masking": {
      "file": "backend/queen-ai/tests/security/test_output_filter.py",
      "line": 190,
      "type": "function"
    },
    "backend/queen-ai/tests/security/test_output_filter.py::test_validate_safety_clean_text": {
      "file": "backend/queen-ai/tests/security/test_output_filter.py",
      "line": 198,
      "type": "function"
    },
    "backend/queen-ai/tests/security/test_output_filter.py::test_validate_safety_with_secrets": {
      "file": "backend/queen-ai/tests/security/test_output_filter.py",
      "line": 205,
      "type": "function"
    },
    "backend/queen-ai/tests/security/test_output_filter.py::test_validate_safety_strict_mode": {
      "file": "backend/queen-ai/tests/security/test_output_filter.py",
      "line": 212,
      "type": "function"
    },
    "backend/queen-ai/tests/security/test_output_filter.py::test_statistics_tracking": {
      "file": "backend/queen-ai/tests/security/test_output_filter.py",
      "line": 224,
      "type": "function"
    },
    "backend/queen-ai/tests/security/test_output_filter.py::test_reset_statistics": {
      "file": "backend/queen-ai/tests/security/test_output_filter.py",
      "line": 237,
      "type": "function"
    },
    "backend/queen-ai/tests/security/test_output_filter.py::test_empty_text": {
      "file": "backend/queen-ai/tests/security/test_output_filter.py",
      "line": 251,
      "type": "function"
    },
    "backend/queen-ai/tests/security/test_output_filter.py::test_none_text": {
      "file": "backend/queen-ai/tests/security/test_output_filter.py",
      "line": 256,
      "type": "function"
    },
    "backend/queen-ai/tests/security/test_output_filter.py::test_very_long_text": {
      "file": "backend/queen-ai/tests/security/test_output_filter.py",
      "line": 261,
      "type": "function"
    },
    "backend/queen-ai/tests/security/test_output_filter.py::test_multiple_same_secret": {
      "file": "backend/queen-ai/tests/security/test_output_filter.py",
      "line": 269,
      "type": "function"
    },
    "backend/queen-ai/tests/security/test_output_filter.py::test_full_filtering_workflow": {
      "file": "backend/queen-ai/tests/security/test_output_filter.py",
      "line": 289,
      "type": "function"
    },
    "backend/queen-ai/tests/security/test_output_filter.py::test_code_proposal_full_check": {
      "file": "backend/queen-ai/tests/security/test_output_filter.py",
      "line": 308,
      "type": "function"
    },
    "backend/queen-ai/tests/security/test_prompt_protection.py::protection_gate": {
      "file": "backend/queen-ai/tests/security/test_prompt_protection.py",
      "line": 281,
      "type": "function"
    },
    "backend/queen-ai/tests/security/test_prompt_protection.py::test_sanitize_normal_text": {
      "file": "backend/queen-ai/tests/security/test_prompt_protection.py",
      "line": 20,
      "type": "function"
    },
    "backend/queen-ai/tests/security/test_prompt_protection.py::test_remove_invisible_unicode": {
      "file": "backend/queen-ai/tests/security/test_prompt_protection.py",
      "line": 26,
      "type": "function"
    },
    "backend/queen-ai/tests/security/test_prompt_protection.py::test_normalize_whitespace": {
      "file": "backend/queen-ai/tests/security/test_prompt_protection.py",
      "line": 34,
      "type": "function"
    },
    "backend/queen-ai/tests/security/test_prompt_protection.py::test_detect_invisible_chars": {
      "file": "backend/queen-ai/tests/security/test_prompt_protection.py",
      "line": 42,
      "type": "function"
    },
    "backend/queen-ai/tests/security/test_prompt_protection.py::test_no_invisible_chars": {
      "file": "backend/queen-ai/tests/security/test_prompt_protection.py",
      "line": 50,
      "type": "function"
    },
    "backend/queen-ai/tests/security/test_prompt_protection.py::test_detect_instruction_override": {
      "file": "backend/queen-ai/tests/security/test_prompt_protection.py",
      "line": 58,
      "type": "function"
    },
    "backend/queen-ai/tests/security/test_prompt_protection.py::test_detect_jailbreak": {
      "file": "backend/queen-ai/tests/security/test_prompt_protection.py",
      "line": 72,
      "type": "function"
    },
    "backend/queen-ai/tests/security/test_prompt_protection.py::test_detect_info_extraction": {
      "file": "backend/queen-ai/tests/security/test_prompt_protection.py",
      "line": 87,
      "type": "function"
    },
    "backend/queen-ai/tests/security/test_prompt_protection.py::test_detect_context_poison": {
      "file": "backend/queen-ai/tests/security/test_prompt_protection.py",
      "line": 101,
      "type": "function"
    },
    "backend/queen-ai/tests/security/test_prompt_protection.py::test_detect_code_execution": {
      "file": "backend/queen-ai/tests/security/test_prompt_protection.py",
      "line": 114,
      "type": "function"
    },
    "backend/queen-ai/tests/security/test_prompt_protection.py::test_legitimate_questions": {
      "file": "backend/queen-ai/tests/security/test_prompt_protection.py",
      "line": 129,
      "type": "function"
    },
    "backend/queen-ai/tests/security/test_prompt_protection.py::test_technical_questions": {
      "file": "backend/queen-ai/tests/security/test_prompt_protection.py",
      "line": 144,
      "type": "function"
    },
    "backend/queen-ai/tests/security/test_prompt_protection.py::test_strict_mode_lower_threshold": {
      "file": "backend/queen-ai/tests/security/test_prompt_protection.py",
      "line": 159,
      "type": "function"
    },
    "backend/queen-ai/tests/security/test_prompt_protection.py::test_risk_score_capped_at_100": {
      "file": "backend/queen-ai/tests/security/test_prompt_protection.py",
      "line": 173,
      "type": "function"
    },
    "backend/queen-ai/tests/security/test_prompt_protection.py::test_risk_score_increases_with_invisible_chars": {
      "file": "backend/queen-ai/tests/security/test_prompt_protection.py",
      "line": 180,
      "type": "function"
    },
    "backend/queen-ai/tests/security/test_prompt_protection.py::test_statistics_tracking": {
      "file": "backend/queen-ai/tests/security/test_prompt_protection.py",
      "line": 192,
      "type": "function"
    },
    "backend/queen-ai/tests/security/test_prompt_protection.py::test_reset_statistics": {
      "file": "backend/queen-ai/tests/security/test_prompt_protection.py",
      "line": 205,
      "type": "function"
    },
    "backend/queen-ai/tests/security/test_prompt_protection.py::test_unicode_normalization": {
      "file": "backend/queen-ai/tests/security/test_prompt_protection.py",
      "line": 219,
      "type": "function"
    },
    "backend/queen-ai/tests/security/test_prompt_protection.py::test_empty_string": {
      "file": "backend/queen-ai/tests/security/test_prompt_protection.py",
      "line": 232,
      "type": "function"
    },
    "backend/queen-ai/tests/security/test_prompt_protection.py::test_very_long_text": {
      "file": "backend/queen-ai/tests/security/test_prompt_protection.py",
      "line": 238,
      "type": "function"
    },
    "backend/queen-ai/tests/security/test_prompt_protection.py::test_special_characters": {
      "file": "backend/queen-ai/tests/security/test_prompt_protection.py",
      "line": 245,
      "type": "function"
    },
    "backend/queen-ai/tests/security/test_prompt_protection.py::test_case_insensitive_matching": {
      "file": "backend/queen-ai/tests/security/test_prompt_protection.py",
      "line": 253,
      "type": "function"
    },
    "backend/queen-ai/tests/security/test_prompt_protection.py::test_multiple_patterns": {
      "file": "backend/queen-ai/tests/security/test_prompt_protection.py",
      "line": 265,
      "type": "function"
    },
    "backend/queen-ai/tests/security/test_prompt_protection.py::test_full_workflow": {
      "file": "backend/queen-ai/tests/security/test_prompt_protection.py",
      "line": 284,
      "type": "function"
    },
    "backend/queen-ai/tests/security/test_prompt_protection.py::test_benign_workflow": {
      "file": "backend/queen-ai/tests/security/test_prompt_protection.py",
      "line": 301,
      "type": "function"
    },
    "backend/queen-ai/tests/security/test_prompt_protection.py::test_performance": {
      "file": "backend/queen-ai/tests/security/test_prompt_protection.py",
      "line": 314,
      "type": "function"
    },
    "backend/queen-ai/app/database/auth.py::verify_password": {
      "file": "backend/queen-ai/app/database/auth.py",
      "line": 24,
      "type": "function"
    },
    "backend/queen-ai/app/database/auth.py::get_password_hash": {
      "file": "backend/queen-ai/app/database/auth.py",
      "line": 28,
      "type": "function"
    },
    "backend/queen-ai/app/database/auth.py::create_access_token": {
      "file": "backend/queen-ai/app/database/auth.py",
      "line": 35,
      "type": "function"
    },
    "backend/queen-ai/app/database/auth.py::decode_token": {
      "file": "backend/queen-ai/app/database/auth.py",
      "line": 46,
      "type": "function"
    },
    "backend/queen-ai/app/database/auth.py::authenticate_user": {
      "file": "backend/queen-ai/app/database/auth.py",
      "line": 104,
      "type": "function"
    },
    "backend/queen-ai/app/database/connection.py::get_db": {
      "file": "backend/queen-ai/app/database/connection.py",
      "line": 52,
      "type": "function"
    },
    "backend/queen-ai/app/database/connection.py::init_db": {
      "file": "backend/queen-ai/app/database/connection.py",
      "line": 62,
      "type": "function"
    },
    "backend/queen-ai/app/database/seed.py::seed_users": {
      "file": "backend/queen-ai/app/database/seed.py",
      "line": 10,
      "type": "function"
    },
    "backend/queen-ai/app/database/seed.py::seed_system_config": {
      "file": "backend/queen-ai/app/database/seed.py",
      "line": 74,
      "type": "function"
    },
    "backend/queen-ai/app/database/seed.py::seed_all": {
      "file": "backend/queen-ai/app/database/seed.py",
      "line": 142,
      "type": "function"
    },
    "backend/queen-ai/app/database/init_db.py::main": {
      "file": "backend/queen-ai/app/database/init_db.py",
      "line": 14,
      "type": "function"
    },
    "backend/queen-ai/app/tools/codebase_navigator.py::__init__": {
      "file": "backend/queen-ai/app/tools/codebase_navigator.py",
      "line": 31,
      "type": "function"
    },
    "backend/queen-ai/app/tools/codebase_navigator.py::_load_index": {
      "file": "backend/queen-ai/app/tools/codebase_navigator.py",
      "line": 54,
      "type": "function"
    },
    "backend/queen-ai/app/tools/codebase_navigator.py::_save_index": {
      "file": "backend/queen-ai/app/tools/codebase_navigator.py",
      "line": 64,
      "type": "function"
    },
    "backend/queen-ai/app/tools/codebase_navigator.py::_extract_keywords": {
      "file": "backend/queen-ai/app/tools/codebase_navigator.py",
      "line": 314,
      "type": "function"
    },
    "backend/queen-ai/app/tools/codebase_navigator.py::_calculate_relevance": {
      "file": "backend/queen-ai/app/tools/codebase_navigator.py",
      "line": 376,
      "type": "function"
    },
    "backend/queen-ai/app/tools/database_query_tool.py::__init__": {
      "file": "backend/queen-ai/app/tools/database_query_tool.py",
      "line": 30,
      "type": "function"
    },
    "backend/queen-ai/app/tools/database_query_tool.py::_get_db": {
      "file": "backend/queen-ai/app/tools/database_query_tool.py",
      "line": 33,
      "type": "function"
    },
    "backend/queen-ai/app/tools/database_query_tool.py::close": {
      "file": "backend/queen-ai/app/tools/database_query_tool.py",
      "line": 39,
      "type": "function"
    },
    "backend/queen-ai/app/tools/database_query_tool.py::_parse_natural_language": {
      "file": "backend/queen-ai/app/tools/database_query_tool.py",
      "line": 358,
      "type": "function"
    },
    "backend/queen-ai/app/tools/database_query_tool.py::_extract_numbers": {
      "file": "backend/queen-ai/app/tools/database_query_tool.py",
      "line": 398,
      "type": "function"
    },
    "backend/queen-ai/app/tools/database_query_tool.py::_extract_number": {
      "file": "backend/queen-ai/app/tools/database_query_tool.py",
      "line": 406,
      "type": "function"
    },
    "backend/queen-ai/app/llm/memory.py::__init__": {
      "file": "backend/queen-ai/app/llm/memory.py",
      "line": 24,
      "type": "function"
    },
    "backend/queen-ai/app/llm/memory.py::_load_memory": {
      "file": "backend/queen-ai/app/llm/memory.py",
      "line": 30,
      "type": "function"
    },
    "backend/queen-ai/app/llm/memory.py::_save_memory": {
      "file": "backend/queen-ai/app/llm/memory.py",
      "line": 43,
      "type": "function"
    },
    "backend/queen-ai/app/llm/memory.py::get_context_string": {
      "file": "backend/queen-ai/app/llm/memory.py",
      "line": 108,
      "type": "function"
    },
    "backend/queen-ai/app/llm/abstraction.py::__init__": {
      "file": "backend/queen-ai/app/llm/abstraction.py",
      "line": 44,
      "type": "function"
    },
    "backend/queen-ai/app/llm/abstraction.py::_calculate_cost": {
      "file": "backend/queen-ai/app/llm/abstraction.py",
      "line": 287,
      "type": "function"
    },
    "backend/queen-ai/app/llm/abstraction.py::_track_cost": {
      "file": "backend/queen-ai/app/llm/abstraction.py",
      "line": 311,
      "type": "function"
    },
    "backend/queen-ai/app/llm/abstraction.py::get_costs": {
      "file": "backend/queen-ai/app/llm/abstraction.py",
      "line": 328,
      "type": "function"
    },
    "backend/queen-ai/app/llm/abstraction.py::get_available_providers": {
      "file": "backend/queen-ai/app/llm/abstraction.py",
      "line": 332,
      "type": "function"
    },
    "backend/queen-ai/app/llm/system_knowledge.py::__init__": {
      "file": "backend/queen-ai/app/llm/system_knowledge.py",
      "line": 35,
      "type": "function"
    },
    "backend/queen-ai/app/llm/system_knowledge.py::_load_knowledge": {
      "file": "backend/queen-ai/app/llm/system_knowledge.py",
      "line": 40,
      "type": "function"
    },
    "backend/queen-ai/app/llm/system_knowledge.py::_initialize_omk_knowledge": {
      "file": "backend/queen-ai/app/llm/system_knowledge.py",
      "line": 55,
      "type": "function"
    },
    "backend/queen-ai/app/llm/system_knowledge.py::_save_knowledge": {
      "file": "backend/queen-ai/app/llm/system_knowledge.py",
      "line": 226,
      "type": "function"
    },
    "backend/queen-ai/app/llm/system_knowledge.py::get_project_structure": {
      "file": "backend/queen-ai/app/llm/system_knowledge.py",
      "line": 239,
      "type": "function"
    },
    "backend/queen-ai/app/llm/system_knowledge.py::get_frontend_info": {
      "file": "backend/queen-ai/app/llm/system_knowledge.py",
      "line": 243,
      "type": "function"
    },
    "backend/queen-ai/app/llm/system_knowledge.py::get_backend_info": {
      "file": "backend/queen-ai/app/llm/system_knowledge.py",
      "line": 247,
      "type": "function"
    },
    "backend/queen-ai/app/llm/system_knowledge.py::get_theme": {
      "file": "backend/queen-ai/app/llm/system_knowledge.py",
      "line": 251,
      "type": "function"
    },
    "backend/queen-ai/app/llm/system_knowledge.py::get_patterns": {
      "file": "backend/queen-ai/app/llm/system_knowledge.py",
      "line": 255,
      "type": "function"
    },
    "backend/queen-ai/app/llm/system_knowledge.py::get_known_issues": {
      "file": "backend/queen-ai/app/llm/system_knowledge.py",
      "line": 259,
      "type": "function"
    },
    "backend/queen-ai/app/llm/system_knowledge.py::add_implementation": {
      "file": "backend/queen-ai/app/llm/system_knowledge.py",
      "line": 263,
      "type": "function"
    },
    "backend/queen-ai/app/llm/system_knowledge.py::add_correction": {
      "file": "backend/queen-ai/app/llm/system_knowledge.py",
      "line": 279,
      "type": "function"
    },
    "backend/queen-ai/app/llm/system_knowledge.py::add_pattern": {
      "file": "backend/queen-ai/app/llm/system_knowledge.py",
      "line": 292,
      "type": "function"
    },
    "backend/queen-ai/app/llm/system_knowledge.py::update_structure": {
      "file": "backend/queen-ai/app/llm/system_knowledge.py",
      "line": 305,
      "type": "function"
    },
    "backend/queen-ai/app/llm/system_knowledge.py::get_context_for_claude": {
      "file": "backend/queen-ai/app/llm/system_knowledge.py",
      "line": 318,
      "type": "function"
    },
    "backend/queen-ai/app/llm/system_knowledge.py::_format_known_issues": {
      "file": "backend/queen-ai/app/llm/system_knowledge.py",
      "line": 372,
      "type": "function"
    },
    "backend/queen-ai/app/llm/system_knowledge.py::mark_reviewed": {
      "file": "backend/queen-ai/app/llm/system_knowledge.py",
      "line": 380,
      "type": "function"
    },
    "backend/queen-ai/app/bees/security_bee.py::__init__": {
      "file": "backend/queen-ai/app/bees/security_bee.py",
      "line": 24,
      "type": "function"
    },
    "backend/queen-ai/app/bees/enhanced_security_bee.py::__init__": {
      "file": "backend/queen-ai/app/bees/enhanced_security_bee.py",
      "line": 32,
      "type": "function"
    },
    "backend/queen-ai/app/bees/enhanced_security_bee.py::_make_decision": {
      "file": "backend/queen-ai/app/bees/enhanced_security_bee.py",
      "line": 193,
      "type": "function"
    },
    "backend/queen-ai/app/bees/enhanced_security_bee.py::_classify_attack_type": {
      "file": "backend/queen-ai/app/bees/enhanced_security_bee.py",
      "line": 240,
      "type": "function"
    },
    "backend/queen-ai/app/bees/enhanced_security_bee.py::get_quarantined_threats": {
      "file": "backend/queen-ai/app/bees/enhanced_security_bee.py",
      "line": 458,
      "type": "function"
    },
    "backend/queen-ai/app/bees/enhanced_security_bee.py::get_security_stats": {
      "file": "backend/queen-ai/app/bees/enhanced_security_bee.py",
      "line": 462,
      "type": "function"
    },
    "backend/queen-ai/app/bees/pattern_bee.py::__init__": {
      "file": "backend/queen-ai/app/bees/pattern_bee.py",
      "line": 25,
      "type": "function"
    },
    "backend/queen-ai/app/bees/user_experience_bee.py::__init__": {
      "file": "backend/queen-ai/app/bees/user_experience_bee.py",
      "line": 34,
      "type": "function"
    },
    "backend/queen-ai/app/bees/user_experience_bee.py::_generate_session_id": {
      "file": "backend/queen-ai/app/bees/user_experience_bee.py",
      "line": 653,
      "type": "function"
    },
    "backend/queen-ai/app/bees/visualization_bee.py::__init__": {
      "file": "backend/queen-ai/app/bees/visualization_bee.py",
      "line": 38,
      "type": "function"
    },
    "backend/queen-ai/app/bees/visualization_bee.py::_get_timeframe_points": {
      "file": "backend/queen-ai/app/bees/visualization_bee.py",
      "line": 596,
      "type": "function"
    },
    "backend/queen-ai/app/bees/visualization_bee.py::_is_cache_valid": {
      "file": "backend/queen-ai/app/bees/visualization_bee.py",
      "line": 606,
      "type": "function"
    },
    "backend/queen-ai/app/bees/governance_bee.py::__init__": {
      "file": "backend/queen-ai/app/bees/governance_bee.py",
      "line": 37,
      "type": "function"
    },
    "backend/queen-ai/app/bees/private_sale_bee.py::__init__": {
      "file": "backend/queen-ai/app/bees/private_sale_bee.py",
      "line": 44,
      "type": "function"
    },
    "backend/queen-ai/app/bees/tokenization_bee.py::__init__": {
      "file": "backend/queen-ai/app/bees/tokenization_bee.py",
      "line": 28,
      "type": "function"
    },
    "backend/queen-ai/app/bees/data_bee.py::__init__": {
      "file": "backend/queen-ai/app/bees/data_bee.py",
      "line": 42,
      "type": "function"
    },
    "backend/queen-ai/app/bees/data_bee.py::set_elastic_client": {
      "file": "backend/queen-ai/app/bees/data_bee.py",
      "line": 66,
      "type": "function"
    },
    "backend/queen-ai/app/bees/data_bee.py::_generate_recommendations": {
      "file": "backend/queen-ai/app/bees/data_bee.py",
      "line": 530,
      "type": "function"
    },
    "backend/queen-ai/app/bees/logic_bee.py::__init__": {
      "file": "backend/queen-ai/app/bees/logic_bee.py",
      "line": 24,
      "type": "function"
    },
    "backend/queen-ai/app/bees/logic_bee.py::_score_maths_input": {
      "file": "backend/queen-ai/app/bees/logic_bee.py",
      "line": 270,
      "type": "function"
    },
    "backend/queen-ai/app/bees/logic_bee.py::_score_security_input": {
      "file": "backend/queen-ai/app/bees/logic_bee.py",
      "line": 286,
      "type": "function"
    },
    "backend/queen-ai/app/bees/logic_bee.py::_score_data_input": {
      "file": "backend/queen-ai/app/bees/logic_bee.py",
      "line": 301,
      "type": "function"
    },
    "backend/queen-ai/app/bees/logic_bee.py::_score_treasury_input": {
      "file": "backend/queen-ai/app/bees/logic_bee.py",
      "line": 312,
      "type": "function"
    },
    "backend/queen-ai/app/bees/logic_bee.py::_score_pattern_input": {
      "file": "backend/queen-ai/app/bees/logic_bee.py",
      "line": 331,
      "type": "function"
    },
    "backend/queen-ai/app/bees/logic_bee.py::_generate_reasoning": {
      "file": "backend/queen-ai/app/bees/logic_bee.py",
      "line": 342,
      "type": "function"
    },
    "backend/queen-ai/app/bees/liquidity_sentinel_bee.py::__init__": {
      "file": "backend/queen-ai/app/bees/liquidity_sentinel_bee.py",
      "line": 34,
      "type": "function"
    },
    "backend/queen-ai/app/bees/liquidity_sentinel_bee.py::set_blockchain_bee": {
      "file": "backend/queen-ai/app/bees/liquidity_sentinel_bee.py",
      "line": 706,
      "type": "function"
    },
    "backend/queen-ai/app/bees/liquidity_sentinel_bee.py::set_pattern_bee": {
      "file": "backend/queen-ai/app/bees/liquidity_sentinel_bee.py",
      "line": 712,
      "type": "function"
    },
    "backend/queen-ai/app/bees/liquidity_sentinel_bee.py::register_pool": {
      "file": "backend/queen-ai/app/bees/liquidity_sentinel_bee.py",
      "line": 717,
      "type": "function"
    },
    "backend/queen-ai/app/bees/liquidity_sentinel_bee.py::unregister_pool": {
      "file": "backend/queen-ai/app/bees/liquidity_sentinel_bee.py",
      "line": 722,
      "type": "function"
    },
    "backend/queen-ai/app/bees/purchase_bee.py::__init__": {
      "file": "backend/queen-ai/app/bees/purchase_bee.py",
      "line": 28,
      "type": "function"
    },
    "backend/queen-ai/app/bees/purchase_bee.py::_estimate_time": {
      "file": "backend/queen-ai/app/bees/purchase_bee.py",
      "line": 270,
      "type": "function"
    },
    "backend/queen-ai/app/bees/maths_bee.py::__init__": {
      "file": "backend/queen-ai/app/bees/maths_bee.py",
      "line": 23,
      "type": "function"
    },
    "backend/queen-ai/app/bees/data_pipeline_bee.py::__init__": {
      "file": "backend/queen-ai/app/bees/data_pipeline_bee.py",
      "line": 44,
      "type": "function"
    },
    "backend/queen-ai/app/bees/monitoring_bee.py::__init__": {
      "file": "backend/queen-ai/app/bees/monitoring_bee.py",
      "line": 29,
      "type": "function"
    },
    "backend/queen-ai/app/bees/bridge_bee.py::__init__": {
      "file": "backend/queen-ai/app/bees/bridge_bee.py",
      "line": 36,
      "type": "function"
    },
    "backend/queen-ai/app/bees/stake_bot_bee.py::__init__": {
      "file": "backend/queen-ai/app/bees/stake_bot_bee.py",
      "line": 28,
      "type": "function"
    },
    "backend/queen-ai/app/bees/blockchain_bee.py::__init__": {
      "file": "backend/queen-ai/app/bees/blockchain_bee.py",
      "line": 52,
      "type": "function"
    },
    "backend/queen-ai/app/bees/manager.py::__init__": {
      "file": "backend/queen-ai/app/bees/manager.py",
      "line": 44,
      "type": "function"
    },
    "backend/queen-ai/app/bees/base.py::__init__": {
      "file": "backend/queen-ai/app/bees/base.py",
      "line": 32,
      "type": "function"
    },
    "backend/queen-ai/app/bees/base.py::set_llm": {
      "file": "backend/queen-ai/app/bees/base.py",
      "line": 48,
      "type": "function"
    },
    "backend/queen-ai/app/bees/base.py::get_stats": {
      "file": "backend/queen-ai/app/bees/base.py",
      "line": 209,
      "type": "function"
    },
    "backend/queen-ai/app/bees/treasury_bee.py::__init__": {
      "file": "backend/queen-ai/app/bees/treasury_bee.py",
      "line": 34,
      "type": "function"
    },
    "backend/queen-ai/app/bees/treasury_bee.py::_get_health_recommendations": {
      "file": "backend/queen-ai/app/bees/treasury_bee.py",
      "line": 220,
      "type": "function"
    },
    "backend/queen-ai/app/bees/onboarding_bee.py::__init__": {
      "file": "backend/queen-ai/app/bees/onboarding_bee.py",
      "line": 37,
      "type": "function"
    },
    "backend/queen-ai/app/bees/onboarding_bee.py::_is_valid_email": {
      "file": "backend/queen-ai/app/bees/onboarding_bee.py",
      "line": 495,
      "type": "function"
    },
    "backend/queen-ai/app/bees/onboarding_bee.py::_hash_password": {
      "file": "backend/queen-ai/app/bees/onboarding_bee.py",
      "line": 500,
      "type": "function"
    },
    "backend/queen-ai/app/bees/onboarding_bee.py::_verify_password": {
      "file": "backend/queen-ai/app/bees/onboarding_bee.py",
      "line": 506,
      "type": "function"
    },
    "backend/queen-ai/app/bees/onboarding_bee.py::_generate_user_id": {
      "file": "backend/queen-ai/app/bees/onboarding_bee.py",
      "line": 515,
      "type": "function"
    },
    "backend/queen-ai/app/bees/onboarding_bee.py::_create_session": {
      "file": "backend/queen-ai/app/bees/onboarding_bee.py",
      "line": 519,
      "type": "function"
    },
    "backend/queen-ai/app/bees/onboarding_bee.py::_sanitize_user": {
      "file": "backend/queen-ai/app/bees/onboarding_bee.py",
      "line": 534,
      "type": "function"
    },
    "backend/queen-ai/app/bees/onboarding_bee.py::_get_user_type_breakdown": {
      "file": "backend/queen-ai/app/bees/onboarding_bee.py",
      "line": 543,
      "type": "function"
    },
    "backend/queen-ai/app/core/distributed_lock.py::critical_section": {
      "file": "backend/queen-ai/app/core/distributed_lock.py",
      "line": 223,
      "type": "function"
    },
    "backend/queen-ai/app/core/distributed_lock.py::__init__": {
      "file": "backend/queen-ai/app/core/distributed_lock.py",
      "line": 32,
      "type": "function"
    },
    "backend/queen-ai/app/core/distributed_lock.py::decorator": {
      "file": "backend/queen-ai/app/core/distributed_lock.py",
      "line": 233,
      "type": "function"
    },
    "backend/queen-ai/app/core/message_bus.py::__init__": {
      "file": "backend/queen-ai/app/core/message_bus.py",
      "line": 51,
      "type": "function"
    },
    "backend/queen-ai/app/core/message_bus.py::register_bee": {
      "file": "backend/queen-ai/app/core/message_bus.py",
      "line": 63,
      "type": "function"
    },
    "backend/queen-ai/app/core/message_bus.py::get_message_history": {
      "file": "backend/queen-ai/app/core/message_bus.py",
      "line": 181,
      "type": "function"
    },
    "backend/queen-ai/app/core/message_bus.py::get_communication_stats": {
      "file": "backend/queen-ai/app/core/message_bus.py",
      "line": 215,
      "type": "function"
    },
    "backend/queen-ai/app/core/state_manager.py::__init__": {
      "file": "backend/queen-ai/app/core/state_manager.py",
      "line": 26,
      "type": "function"
    },
    "backend/queen-ai/app/core/state_manager.py::get_state": {
      "file": "backend/queen-ai/app/core/state_manager.py",
      "line": 94,
      "type": "function"
    },
    "backend/queen-ai/app/core/enhanced_claude_integration.py::__init__": {
      "file": "backend/queen-ai/app/core/enhanced_claude_integration.py",
      "line": 377,
      "type": "function"
    },
    "backend/queen-ai/app/core/enhanced_claude_integration.py::_build_system_context": {
      "file": "backend/queen-ai/app/core/enhanced_claude_integration.py",
      "line": 124,
      "type": "function"
    },
    "backend/queen-ai/app/core/enhanced_claude_integration.py::_format_conversation": {
      "file": "backend/queen-ai/app/core/enhanced_claude_integration.py",
      "line": 183,
      "type": "function"
    },
    "backend/queen-ai/app/core/enhanced_claude_integration.py::_extract_thinking": {
      "file": "backend/queen-ai/app/core/enhanced_claude_integration.py",
      "line": 202,
      "type": "function"
    },
    "backend/queen-ai/app/core/enhanced_claude_integration.py::_extract_response": {
      "file": "backend/queen-ai/app/core/enhanced_claude_integration.py",
      "line": 210,
      "type": "function"
    },
    "backend/queen-ai/app/core/enhanced_claude_integration.py::_check_focus": {
      "file": "backend/queen-ai/app/core/enhanced_claude_integration.py",
      "line": 217,
      "type": "function"
    },
    "backend/queen-ai/app/core/enhanced_claude_integration.py::_generate_focus_reminder": {
      "file": "backend/queen-ai/app/core/enhanced_claude_integration.py",
      "line": 239,
      "type": "function"
    },
    "backend/queen-ai/app/core/enhanced_claude_integration.py::remind_of_rules": {
      "file": "backend/queen-ai/app/core/enhanced_claude_integration.py",
      "line": 313,
      "type": "function"
    },
    "backend/queen-ai/app/core/enhanced_claude_integration.py::get_thinking_summary": {
      "file": "backend/queen-ai/app/core/enhanced_claude_integration.py",
      "line": 343,
      "type": "function"
    },
    "backend/queen-ai/app/core/enhanced_claude_integration.py::clear_conversation": {
      "file": "backend/queen-ai/app/core/enhanced_claude_integration.py",
      "line": 356,
      "type": "function"
    },
    "backend/queen-ai/app/core/enhanced_claude_integration.py::get_regulation_report": {
      "file": "backend/queen-ai/app/core/enhanced_claude_integration.py",
      "line": 416,
      "type": "function"
    },
    "backend/queen-ai/app/core/system_reboot_manager.py::__init__": {
      "file": "backend/queen-ai/app/core/system_reboot_manager.py",
      "line": 25,
      "type": "function"
    },
    "backend/queen-ai/app/core/system_reboot_manager.py::request_reboot": {
      "file": "backend/queen-ai/app/core/system_reboot_manager.py",
      "line": 32,
      "type": "function"
    },
    "backend/queen-ai/app/core/system_reboot_manager.py::_find_backend_process": {
      "file": "backend/queen-ai/app/core/system_reboot_manager.py",
      "line": 223,
      "type": "function"
    },
    "backend/queen-ai/app/core/system_reboot_manager.py::_find_frontend_process": {
      "file": "backend/queen-ai/app/core/system_reboot_manager.py",
      "line": 234,
      "type": "function"
    },
    "backend/queen-ai/app/core/system_reboot_manager.py::_start_backend": {
      "file": "backend/queen-ai/app/core/system_reboot_manager.py",
      "line": 245,
      "type": "function"
    },
    "backend/queen-ai/app/core/system_reboot_manager.py::_start_frontend": {
      "file": "backend/queen-ai/app/core/system_reboot_manager.py",
      "line": 270,
      "type": "function"
    },
    "backend/queen-ai/app/core/system_reboot_manager.py::_log_reboot": {
      "file": "backend/queen-ai/app/core/system_reboot_manager.py",
      "line": 295,
      "type": "function"
    },
    "backend/queen-ai/app/core/system_reboot_manager.py::get_reboot_history": {
      "file": "backend/queen-ai/app/core/system_reboot_manager.py",
      "line": 314,
      "type": "function"
    },
    "backend/queen-ai/app/core/system_reboot_manager.py::cancel_reboot": {
      "file": "backend/queen-ai/app/core/system_reboot_manager.py",
      "line": 327,
      "type": "function"
    },
    "backend/queen-ai/app/core/hive_board.py::__init__": {
      "file": "backend/queen-ai/app/core/hive_board.py",
      "line": 67,
      "type": "function"
    },
    "backend/queen-ai/app/core/hive_board.py::_calculate_relevance": {
      "file": "backend/queen-ai/app/core/hive_board.py",
      "line": 360,
      "type": "function"
    },
    "backend/queen-ai/app/core/redis_hive_board.py::__init__": {
      "file": "backend/queen-ai/app/core/redis_hive_board.py",
      "line": 41,
      "type": "function"
    },
    "backend/queen-ai/app/core/autonomous_fixer.py::__init__": {
      "file": "backend/queen-ai/app/core/autonomous_fixer.py",
      "line": 47,
      "type": "function"
    },
    "backend/queen-ai/app/core/autonomous_fixer.py::_format_previous_approaches": {
      "file": "backend/queen-ai/app/core/autonomous_fixer.py",
      "line": 327,
      "type": "function"
    },
    "backend/queen-ai/app/core/autonomous_fixer.py::_select_best_approach": {
      "file": "backend/queen-ai/app/core/autonomous_fixer.py",
      "line": 392,
      "type": "function"
    },
    "backend/queen-ai/app/core/security.py::require_api_key": {
      "file": "backend/queen-ai/app/core/security.py",
      "line": 289,
      "type": "function"
    },
    "backend/queen-ai/app/core/security.py::require_admin": {
      "file": "backend/queen-ai/app/core/security.py",
      "line": 304,
      "type": "function"
    },
    "backend/queen-ai/app/core/security.py::__init__": {
      "file": "backend/queen-ai/app/core/security.py",
      "line": 38,
      "type": "function"
    },
    "backend/queen-ai/app/core/security.py::verify_api_key": {
      "file": "backend/queen-ai/app/core/security.py",
      "line": 45,
      "type": "function"
    },
    "backend/queen-ai/app/core/security.py::is_admin": {
      "file": "backend/queen-ai/app/core/security.py",
      "line": 63,
      "type": "function"
    },
    "backend/queen-ai/app/core/security.py::check_rate_limit": {
      "file": "backend/queen-ai/app/core/security.py",
      "line": 67,
      "type": "function"
    },
    "backend/queen-ai/app/core/security.py::block_ip": {
      "file": "backend/queen-ai/app/core/security.py",
      "line": 110,
      "type": "function"
    },
    "backend/queen-ai/app/core/security.py::unblock_ip": {
      "file": "backend/queen-ai/app/core/security.py",
      "line": 115,
      "type": "function"
    },
    "backend/queen-ai/app/core/security.py::is_blocked": {
      "file": "backend/queen-ai/app/core/security.py",
      "line": 121,
      "type": "function"
    },
    "backend/queen-ai/app/core/security.py::create_timelock": {
      "file": "backend/queen-ai/app/core/security.py",
      "line": 125,
      "type": "function"
    },
    "backend/queen-ai/app/core/security.py::check_timelock": {
      "file": "backend/queen-ai/app/core/security.py",
      "line": 144,
      "type": "function"
    },
    "backend/queen-ai/app/core/security.py::enable_emergency_mode": {
      "file": "backend/queen-ai/app/core/security.py",
      "line": 163,
      "type": "function"
    },
    "backend/queen-ai/app/core/security.py::disable_emergency_mode": {
      "file": "backend/queen-ai/app/core/security.py",
      "line": 175,
      "type": "function"
    },
    "backend/queen-ai/app/core/security.py::is_emergency_mode": {
      "file": "backend/queen-ai/app/core/security.py",
      "line": 180,
      "type": "function"
    },
    "backend/queen-ai/app/core/security.py::generate_api_key": {
      "file": "backend/queen-ai/app/core/security.py",
      "line": 184,
      "type": "function"
    },
    "backend/queen-ai/app/core/security.py::hash_api_key": {
      "file": "backend/queen-ai/app/core/security.py",
      "line": 188,
      "type": "function"
    },
    "backend/queen-ai/app/core/security.py::audit_log": {
      "file": "backend/queen-ai/app/core/security.py",
      "line": 192,
      "type": "function"
    },
    "backend/queen-ai/app/core/security.py::verify_multisig": {
      "file": "backend/queen-ai/app/core/security.py",
      "line": 211,
      "type": "function"
    },
    "backend/queen-ai/app/core/redis_message_bus.py::__init__": {
      "file": "backend/queen-ai/app/core/redis_message_bus.py",
      "line": 43,
      "type": "function"
    },
    "backend/queen-ai/app/core/redis_message_bus.py::register_bee": {
      "file": "backend/queen-ai/app/core/redis_message_bus.py",
      "line": 91,
      "type": "function"
    },
    "backend/queen-ai/app/core/session_manager.py::__init__": {
      "file": "backend/queen-ai/app/core/session_manager.py",
      "line": 25,
      "type": "function"
    },
    "backend/queen-ai/app/core/decision_engine.py::__init__": {
      "file": "backend/queen-ai/app/core/decision_engine.py",
      "line": 34,
      "type": "function"
    },
    "backend/queen-ai/app/core/decision_engine.py::_calculate_rebalance_amount": {
      "file": "backend/queen-ai/app/core/decision_engine.py",
      "line": 293,
      "type": "function"
    },
    "backend/queen-ai/app/core/decision_engine.py::_calculate_liquidity_addition": {
      "file": "backend/queen-ai/app/core/decision_engine.py",
      "line": 300,
      "type": "function"
    },
    "backend/queen-ai/app/core/enhanced_sandbox_system.py::__init__": {
      "file": "backend/queen-ai/app/core/enhanced_sandbox_system.py",
      "line": 24,
      "type": "function"
    },
    "backend/queen-ai/app/core/enhanced_sandbox_system.py::_create_directories": {
      "file": "backend/queen-ai/app/core/enhanced_sandbox_system.py",
      "line": 96,
      "type": "function"
    },
    "backend/queen-ai/app/core/enhanced_sandbox_system.py::_copy_codebase": {
      "file": "backend/queen-ai/app/core/enhanced_sandbox_system.py",
      "line": 102,
      "type": "function"
    },
    "backend/queen-ai/app/core/enhanced_sandbox_system.py::_should_copy_file": {
      "file": "backend/queen-ai/app/core/enhanced_sandbox_system.py",
      "line": 141,
      "type": "function"
    },
    "backend/queen-ai/app/core/enhanced_sandbox_system.py::_has_frontend_changes": {
      "file": "backend/queen-ai/app/core/enhanced_sandbox_system.py",
      "line": 467,
      "type": "function"
    },
    "backend/queen-ai/app/core/enhanced_sandbox_system.py::get_diff": {
      "file": "backend/queen-ai/app/core/enhanced_sandbox_system.py",
      "line": 499,
      "type": "function"
    },
    "backend/queen-ai/app/core/enhanced_sandbox_system.py::cleanup": {
      "file": "backend/queen-ai/app/core/enhanced_sandbox_system.py",
      "line": 527,
      "type": "function"
    },
    "backend/queen-ai/app/core/enhanced_sandbox_system.py::_save_metadata": {
      "file": "backend/queen-ai/app/core/enhanced_sandbox_system.py",
      "line": 546,
      "type": "function"
    },
    "backend/queen-ai/app/core/enhanced_sandbox_system.py::get_metadata": {
      "file": "backend/queen-ai/app/core/enhanced_sandbox_system.py",
      "line": 551,
      "type": "function"
    },
    "backend/queen-ai/app/core/bug_analyzer.py::__init__": {
      "file": "backend/queen-ai/app/core/bug_analyzer.py",
      "line": 28,
      "type": "function"
    },
    "backend/queen-ai/app/core/bug_analyzer.py::_format_locations": {
      "file": "backend/queen-ai/app/core/bug_analyzer.py",
      "line": 152,
      "type": "function"
    },
    "backend/queen-ai/app/core/bug_analyzer.py::_parse_claude_analysis": {
      "file": "backend/queen-ai/app/core/bug_analyzer.py",
      "line": 162,
      "type": "function"
    },
    "backend/queen-ai/app/core/orchestrator.py::__init__": {
      "file": "backend/queen-ai/app/core/orchestrator.py",
      "line": 41,
      "type": "function"
    },
    "backend/queen-ai/app/core/queen_system_manager.py::__init__": {
      "file": "backend/queen-ai/app/core/queen_system_manager.py",
      "line": 71,
      "type": "function"
    },
    "backend/queen-ai/app/core/queen_system_manager.py::_load_system_index": {
      "file": "backend/queen-ai/app/core/queen_system_manager.py",
      "line": 103,
      "type": "function"
    },
    "backend/queen-ai/app/core/queen_system_manager.py::index_system": {
      "file": "backend/queen-ai/app/core/queen_system_manager.py",
      "line": 122,
      "type": "function"
    },
    "backend/queen-ai/app/core/queen_system_manager.py::_index_directory": {
      "file": "backend/queen-ai/app/core/queen_system_manager.py",
      "line": 148,
      "type": "function"
    },
    "backend/queen-ai/app/core/queen_system_manager.py::_should_ignore": {
      "file": "backend/queen-ai/app/core/queen_system_manager.py",
      "line": 175,
      "type": "function"
    },
    "backend/queen-ai/app/core/queen_system_manager.py::_count_lines": {
      "file": "backend/queen-ai/app/core/queen_system_manager.py",
      "line": 183,
      "type": "function"
    },
    "backend/queen-ai/app/core/queen_system_manager.py::_index_dependencies": {
      "file": "backend/queen-ai/app/core/queen_system_manager.py",
      "line": 191,
      "type": "function"
    },
    "backend/queen-ai/app/core/queen_system_manager.py::_index_api_endpoints": {
      "file": "backend/queen-ai/app/core/queen_system_manager.py",
      "line": 210,
      "type": "function"
    },
    "backend/queen-ai/app/core/queen_system_manager.py::_extract_endpoints": {
      "file": "backend/queen-ai/app/core/queen_system_manager.py",
      "line": 221,
      "type": "function"
    },
    "backend/queen-ai/app/core/queen_system_manager.py::_load_queen_memory": {
      "file": "backend/queen-ai/app/core/queen_system_manager.py",
      "line": 244,
      "type": "function"
    },
    "backend/queen-ai/app/core/queen_system_manager.py::_get_default_rules": {
      "file": "backend/queen-ai/app/core/queen_system_manager.py",
      "line": 262,
      "type": "function"
    },
    "backend/queen-ai/app/core/queen_system_manager.py::_get_default_do_nots": {
      "file": "backend/queen-ai/app/core/queen_system_manager.py",
      "line": 277,
      "type": "function"
    },
    "backend/queen-ai/app/core/queen_system_manager.py::_get_system_goals": {
      "file": "backend/queen-ai/app/core/queen_system_manager.py",
      "line": 292,
      "type": "function"
    },
    "backend/queen-ai/app/core/queen_system_manager.py::save_queen_memory": {
      "file": "backend/queen-ai/app/core/queen_system_manager.py",
      "line": 305,
      "type": "function"
    },
    "backend/queen-ai/app/core/queen_system_manager.py::add_todo": {
      "file": "backend/queen-ai/app/core/queen_system_manager.py",
      "line": 311,
      "type": "function"
    },
    "backend/queen-ai/app/core/queen_system_manager.py::complete_todo": {
      "file": "backend/queen-ai/app/core/queen_system_manager.py",
      "line": 321,
      "type": "function"
    },
    "backend/queen-ai/app/core/queen_system_manager.py::_load_protected_files": {
      "file": "backend/queen-ai/app/core/queen_system_manager.py",
      "line": 332,
      "type": "function"
    },
    "backend/queen-ai/app/core/queen_system_manager.py::is_file_protected": {
      "file": "backend/queen-ai/app/core/queen_system_manager.py",
      "line": 336,
      "type": "function"
    },
    "backend/queen-ai/app/core/queen_system_manager.py::can_modify_file": {
      "file": "backend/queen-ai/app/core/queen_system_manager.py",
      "line": 348,
      "type": "function"
    },
    "backend/queen-ai/app/core/queen_system_manager.py::can_fetch_url": {
      "file": "backend/queen-ai/app/core/queen_system_manager.py",
      "line": 369,
      "type": "function"
    },
    "backend/queen-ai/app/core/queen_system_manager.py::_calculate_file_hash": {
      "file": "backend/queen-ai/app/core/queen_system_manager.py",
      "line": 495,
      "type": "function"
    },
    "backend/queen-ai/app/core/queen_system_manager.py::can_execute_command": {
      "file": "backend/queen-ai/app/core/queen_system_manager.py",
      "line": 505,
      "type": "function"
    },
    "backend/queen-ai/app/core/queen_system_manager.py::log_action": {
      "file": "backend/queen-ai/app/core/queen_system_manager.py",
      "line": 579,
      "type": "function"
    },
    "backend/queen-ai/app/core/queen_system_manager.py::get_context_summary": {
      "file": "backend/queen-ai/app/core/queen_system_manager.py",
      "line": 600,
      "type": "function"
    },
    "backend/queen-ai/app/core/code_proposal_system.py::__init__": {
      "file": "backend/queen-ai/app/core/code_proposal_system.py",
      "line": 33,
      "type": "function"
    },
    "backend/queen-ai/app/core/code_proposal_system.py::create_proposal": {
      "file": "backend/queen-ai/app/core/code_proposal_system.py",
      "line": 57,
      "type": "function"
    },
    "backend/queen-ai/app/core/code_proposal_system.py::approve_proposal": {
      "file": "backend/queen-ai/app/core/code_proposal_system.py",
      "line": 246,
      "type": "function"
    },
    "backend/queen-ai/app/core/code_proposal_system.py::reject_proposal": {
      "file": "backend/queen-ai/app/core/code_proposal_system.py",
      "line": 280,
      "type": "function"
    },
    "backend/queen-ai/app/core/code_proposal_system.py::rollback": {
      "file": "backend/queen-ai/app/core/code_proposal_system.py",
      "line": 357,
      "type": "function"
    },
    "backend/queen-ai/app/core/code_proposal_system.py::get_all_proposals": {
      "file": "backend/queen-ai/app/core/code_proposal_system.py",
      "line": 396,
      "type": "function"
    },
    "backend/queen-ai/app/core/code_proposal_system.py::get_proposal": {
      "file": "backend/queen-ai/app/core/code_proposal_system.py",
      "line": 408,
      "type": "function"
    },
    "backend/queen-ai/app/core/code_proposal_system.py::_copy_to_sandbox": {
      "file": "backend/queen-ai/app/core/code_proposal_system.py",
      "line": 414,
      "type": "function"
    },
    "backend/queen-ai/app/core/code_proposal_system.py::_run_linting": {
      "file": "backend/queen-ai/app/core/code_proposal_system.py",
      "line": 430,
      "type": "function"
    },
    "backend/queen-ai/app/core/code_proposal_system.py::_run_python_tests": {
      "file": "backend/queen-ai/app/core/code_proposal_system.py",
      "line": 452,
      "type": "function"
    },
    "backend/queen-ai/app/core/code_proposal_system.py::_check_syntax": {
      "file": "backend/queen-ai/app/core/code_proposal_system.py",
      "line": 474,
      "type": "function"
    },
    "backend/queen-ai/app/core/code_proposal_system.py::_create_backup": {
      "file": "backend/queen-ai/app/core/code_proposal_system.py",
      "line": 493,
      "type": "function"
    },
    "backend/queen-ai/app/core/code_proposal_system.py::_restore_backup": {
      "file": "backend/queen-ai/app/core/code_proposal_system.py",
      "line": 508,
      "type": "function"
    },
    "backend/queen-ai/app/core/code_proposal_system.py::_save_proposal": {
      "file": "backend/queen-ai/app/core/code_proposal_system.py",
      "line": 522,
      "type": "function"
    },
    "backend/queen-ai/app/core/code_proposal_system.py::_load_proposals": {
      "file": "backend/queen-ai/app/core/code_proposal_system.py",
      "line": 528,
      "type": "function"
    },
    "backend/queen-ai/app/core/emergency_controls.py::__init__": {
      "file": "backend/queen-ai/app/core/emergency_controls.py",
      "line": 51,
      "type": "function"
    },
    "backend/queen-ai/app/core/emergency_controls.py::trigger_emergency_shutdown": {
      "file": "backend/queen-ai/app/core/emergency_controls.py",
      "line": 60,
      "type": "function"
    },
    "backend/queen-ai/app/core/emergency_controls.py::pause_system": {
      "file": "backend/queen-ai/app/core/emergency_controls.py",
      "line": 93,
      "type": "function"
    },
    "backend/queen-ai/app/core/emergency_controls.py::resume_system": {
      "file": "backend/queen-ai/app/core/emergency_controls.py",
      "line": 114,
      "type": "function"
    },
    "backend/queen-ai/app/core/emergency_controls.py::pause_bee": {
      "file": "backend/queen-ai/app/core/emergency_controls.py",
      "line": 123,
      "type": "function"
    },
    "backend/queen-ai/app/core/emergency_controls.py::resume_bee": {
      "file": "backend/queen-ai/app/core/emergency_controls.py",
      "line": 145,
      "type": "function"
    },
    "backend/queen-ai/app/core/emergency_controls.py::is_bee_paused": {
      "file": "backend/queen-ai/app/core/emergency_controls.py",
      "line": 151,
      "type": "function"
    },
    "backend/queen-ai/app/core/emergency_controls.py::disable_feature": {
      "file": "backend/queen-ai/app/core/emergency_controls.py",
      "line": 155,
      "type": "function"
    },
    "backend/queen-ai/app/core/emergency_controls.py::enable_feature": {
      "file": "backend/queen-ai/app/core/emergency_controls.py",
      "line": 168,
      "type": "function"
    },
    "backend/queen-ai/app/core/emergency_controls.py::is_feature_enabled": {
      "file": "backend/queen-ai/app/core/emergency_controls.py",
      "line": 174,
      "type": "function"
    },
    "backend/queen-ai/app/core/emergency_controls.py::record_failure": {
      "file": "backend/queen-ai/app/core/emergency_controls.py",
      "line": 178,
      "type": "function"
    },
    "backend/queen-ai/app/core/emergency_controls.py::reset_circuit_breaker": {
      "file": "backend/queen-ai/app/core/emergency_controls.py",
      "line": 227,
      "type": "function"
    },
    "backend/queen-ai/app/core/emergency_controls.py::record_success": {
      "file": "backend/queen-ai/app/core/emergency_controls.py",
      "line": 237,
      "type": "function"
    },
    "backend/queen-ai/app/core/emergency_controls.py::can_operate": {
      "file": "backend/queen-ai/app/core/emergency_controls.py",
      "line": 246,
      "type": "function"
    },
    "backend/queen-ai/app/core/emergency_controls.py::get_state": {
      "file": "backend/queen-ai/app/core/emergency_controls.py",
      "line": 250,
      "type": "function"
    },
    "backend/queen-ai/app/core/emergency_controls.py::override_decision": {
      "file": "backend/queen-ai/app/core/emergency_controls.py",
      "line": 260,
      "type": "function"
    },
    "backend/queen-ai/app/core/emergency_controls.py::force_recovery": {
      "file": "backend/queen-ai/app/core/emergency_controls.py",
      "line": 290,
      "type": "function"
    },
    "backend/queen-ai/app/core/stateless_architecture.py::__init__": {
      "file": "backend/queen-ai/app/core/stateless_architecture.py",
      "line": 36,
      "type": "function"
    },
    "backend/queen-ai/app/core/stateless_architecture.py::_generate_instance_id": {
      "file": "backend/queen-ai/app/core/stateless_architecture.py",
      "line": 48,
      "type": "function"
    },
    "backend/queen-ai/app/core/stateless_architecture.py::_setup_shutdown_handlers": {
      "file": "backend/queen-ai/app/core/stateless_architecture.py",
      "line": 65,
      "type": "function"
    },
    "backend/queen-ai/app/core/stateless_architecture.py::_handle_shutdown_signal": {
      "file": "backend/queen-ai/app/core/stateless_architecture.py",
      "line": 72,
      "type": "function"
    },
    "backend/queen-ai/app/core/stateless_architecture.py::is_shutting_down": {
      "file": "backend/queen-ai/app/core/stateless_architecture.py",
      "line": 357,
      "type": "function"
    },
    "backend/queen-ai/app/core/stateless_architecture.py::add_pending_operation": {
      "file": "backend/queen-ai/app/core/stateless_architecture.py",
      "line": 361,
      "type": "function"
    },
    "backend/queen-ai/app/core/stateless_architecture.py::register_session": {
      "file": "backend/queen-ai/app/core/stateless_architecture.py",
      "line": 365,
      "type": "function"
    },
    "backend/queen-ai/app/core/stateless_architecture.py::remove_session": {
      "file": "backend/queen-ai/app/core/stateless_architecture.py",
      "line": 369,
      "type": "function"
    },
    "backend/queen-ai/app/config/logging_config.py::setup_logging": {
      "file": "backend/queen-ai/app/config/logging_config.py",
      "line": 11,
      "type": "function"
    },
    "backend/queen-ai/app/config/logging_config.py::get_logger": {
      "file": "backend/queen-ai/app/config/logging_config.py",
      "line": 60,
      "type": "function"
    },
    "backend/queen-ai/app/learning/observer.py::__init__": {
      "file": "backend/queen-ai/app/learning/observer.py",
      "line": 50,
      "type": "function"
    },
    "backend/queen-ai/app/learning/observer.py::_anonymize_user_id": {
      "file": "backend/queen-ai/app/learning/observer.py",
      "line": 78,
      "type": "function"
    },
    "backend/queen-ai/app/learning/observer.py::pause_collection": {
      "file": "backend/queen-ai/app/learning/observer.py",
      "line": 337,
      "type": "function"
    },
    "backend/queen-ai/app/learning/observer.py::resume_collection": {
      "file": "backend/queen-ai/app/learning/observer.py",
      "line": 342,
      "type": "function"
    },
    "backend/queen-ai/app/learning/observer.py::is_collecting": {
      "file": "backend/queen-ai/app/learning/observer.py",
      "line": 347,
      "type": "function"
    },
    "backend/queen-ai/app/learning/bigquery_logger.py::__init__": {
      "file": "backend/queen-ai/app/learning/bigquery_logger.py",
      "line": 43,
      "type": "function"
    },
    "backend/queen-ai/app/uagents/integration.py::__init__": {
      "file": "backend/queen-ai/app/uagents/integration.py",
      "line": 85,
      "type": "function"
    },
    "backend/queen-ai/app/uagents/integration.py::get_stats": {
      "file": "backend/queen-ai/app/uagents/integration.py",
      "line": 432,
      "type": "function"
    },
    "backend/queen-ai/app/agents/market_data_agent.py::__init__": {
      "file": "backend/queen-ai/app/agents/market_data_agent.py",
      "line": 34,
      "type": "function"
    },
    "backend/queen-ai/app/agents/market_data_agent.py::_calculate_liquidity": {
      "file": "backend/queen-ai/app/agents/market_data_agent.py",
      "line": 359,
      "type": "function"
    },
    "backend/queen-ai/app/agents/market_data_agent.py::set_omk_contract": {
      "file": "backend/queen-ai/app/agents/market_data_agent.py",
      "line": 378,
      "type": "function"
    },
    "backend/queen-ai/app/agents/market_data_agent.py::set_otc_price": {
      "file": "backend/queen-ai/app/agents/market_data_agent.py",
      "line": 385,
      "type": "function"
    },
    "backend/queen-ai/app/agents/market_data_agent.py::get_config": {
      "file": "backend/queen-ai/app/agents/market_data_agent.py",
      "line": 391,
      "type": "function"
    },
    "backend/queen-ai/app/agents/market_data_agent.py::_get_fallback_crypto_data": {
      "file": "backend/queen-ai/app/agents/market_data_agent.py",
      "line": 405,
      "type": "function"
    },
    "backend/queen-ai/app/agents/market_data_agent.py::_get_fallback_omk_data": {
      "file": "backend/queen-ai/app/agents/market_data_agent.py",
      "line": 415,
      "type": "function"
    },
    "backend/queen-ai/app/agents/market_data_agent.py::_get_complete_fallback_data": {
      "file": "backend/queen-ai/app/agents/market_data_agent.py",
      "line": 428,
      "type": "function"
    },
    "backend/queen-ai/app/utils/logging_config.py::configure_logging": {
      "file": "backend/queen-ai/app/utils/logging_config.py",
      "line": 17,
      "type": "function"
    },
    "backend/queen-ai/app/utils/logging_config.py::_setup_file_handlers": {
      "file": "backend/queen-ai/app/utils/logging_config.py",
      "line": 95,
      "type": "function"
    },
    "backend/queen-ai/app/utils/logging_config.py::_setup_cloud_logging": {
      "file": "backend/queen-ai/app/utils/logging_config.py",
      "line": 157,
      "type": "function"
    },
    "backend/queen-ai/app/utils/logging_config.py::get_logger": {
      "file": "backend/queen-ai/app/utils/logging_config.py",
      "line": 187,
      "type": "function"
    },
    "backend/queen-ai/app/utils/logging_config.py::log_performance": {
      "file": "backend/queen-ai/app/utils/logging_config.py",
      "line": 198,
      "type": "function"
    },
    "backend/queen-ai/app/utils/logging_config.py::log_api_request": {
      "file": "backend/queen-ai/app/utils/logging_config.py",
      "line": 211,
      "type": "function"
    },
    "backend/queen-ai/app/utils/logging_config.py::log_security_event": {
      "file": "backend/queen-ai/app/utils/logging_config.py",
      "line": 226,
      "type": "function"
    },
    "backend/queen-ai/app/utils/logging_config.py::log_llm_interaction": {
      "file": "backend/queen-ai/app/utils/logging_config.py",
      "line": 240,
      "type": "function"
    },
    "backend/queen-ai/app/utils/logging_config.py::log_bee_action": {
      "file": "backend/queen-ai/app/utils/logging_config.py",
      "line": 264,
      "type": "function"
    },
    "backend/queen-ai/app/utils/logging_config.py::log_decision": {
      "file": "backend/queen-ai/app/utils/logging_config.py",
      "line": 285,
      "type": "function"
    },
    "backend/queen-ai/app/utils/logging_config.py::log_blockchain_transaction": {
      "file": "backend/queen-ai/app/utils/logging_config.py",
      "line": 305,
      "type": "function"
    },
    "backend/queen-ai/app/utils/logging_config.py::log_function_call": {
      "file": "backend/queen-ai/app/utils/logging_config.py",
      "line": 326,
      "type": "function"
    },
    "backend/queen-ai/app/utils/logging_config.py::decorator": {
      "file": "backend/queen-ai/app/utils/logging_config.py",
      "line": 338,
      "type": "function"
    },
    "backend/queen-ai/app/utils/logging_config.py::sync_wrapper": {
      "file": "backend/queen-ai/app/utils/logging_config.py",
      "line": 372,
      "type": "function"
    },
    "backend/queen-ai/app/utils/deployment_helpers.py::generate_deployment_script": {
      "file": "backend/queen-ai/app/utils/deployment_helpers.py",
      "line": 20,
      "type": "function"
    },
    "backend/queen-ai/app/utils/deployment_helpers.py::execute_hardhat_deployment": {
      "file": "backend/queen-ai/app/utils/deployment_helpers.py",
      "line": 66,
      "type": "function"
    },
    "backend/queen-ai/app/utils/deployment_helpers.py::parse_deployment_output": {
      "file": "backend/queen-ai/app/utils/deployment_helpers.py",
      "line": 140,
      "type": "function"
    },
    "backend/queen-ai/app/utils/deployment_helpers.py::cleanup_deployment_script": {
      "file": "backend/queen-ai/app/utils/deployment_helpers.py",
      "line": 202,
      "type": "function"
    },
    "backend/queen-ai/app/utils/deployment_helpers.py::verify_contract_on_etherscan": {
      "file": "backend/queen-ai/app/utils/deployment_helpers.py",
      "line": 223,
      "type": "function"
    },
    "backend/queen-ai/app/utils/deployment_helpers.py::get_network_explorer_url": {
      "file": "backend/queen-ai/app/utils/deployment_helpers.py",
      "line": 299,
      "type": "function"
    },
    "backend/queen-ai/app/utils/deployment_helpers.py::get_deployment_info_path": {
      "file": "backend/queen-ai/app/utils/deployment_helpers.py",
      "line": 324,
      "type": "function"
    },
    "backend/queen-ai/app/utils/deployment_helpers.py::save_deployment_info": {
      "file": "backend/queen-ai/app/utils/deployment_helpers.py",
      "line": 338,
      "type": "function"
    },
    "backend/queen-ai/app/utils/deployment_helpers.py::load_deployment_info": {
      "file": "backend/queen-ai/app/utils/deployment_helpers.py",
      "line": 369,
      "type": "function"
    },
    "backend/queen-ai/app/utils/blockchain.py::__init__": {
      "file": "backend/queen-ai/app/utils/blockchain.py",
      "line": 29,
      "type": "function"
    },
    "backend/queen-ai/app/models/database.py::load_json": {
      "file": "backend/queen-ai/app/models/database.py",
      "line": 22,
      "type": "function"
    },
    "backend/queen-ai/app/models/database.py::save_json": {
      "file": "backend/queen-ai/app/models/database.py",
      "line": 33,
      "type": "function"
    },
    "backend/queen-ai/app/models/database.py::get_all_users": {
      "file": "backend/queen-ai/app/models/database.py",
      "line": 43,
      "type": "function"
    },
    "backend/queen-ai/app/models/database.py::get_user_by_id": {
      "file": "backend/queen-ai/app/models/database.py",
      "line": 47,
      "type": "function"
    },
    "backend/queen-ai/app/models/database.py::get_user_by_email": {
      "file": "backend/queen-ai/app/models/database.py",
      "line": 75,
      "type": "function"
    },
    "backend/queen-ai/app/models/database.py::update_user": {
      "file": "backend/queen-ai/app/models/database.py",
      "line": 80,
      "type": "function"
    },
    "backend/queen-ai/app/models/database.py::create_user": {
      "file": "backend/queen-ai/app/models/database.py",
      "line": 114,
      "type": "function"
    },
    "backend/queen-ai/app/models/database.py::get_all_otc_requests": {
      "file": "backend/queen-ai/app/models/database.py",
      "line": 130,
      "type": "function"
    },
    "backend/queen-ai/app/models/database.py::get_otc_request_by_id": {
      "file": "backend/queen-ai/app/models/database.py",
      "line": 139,
      "type": "function"
    },
    "backend/queen-ai/app/models/database.py::create_otc_request": {
      "file": "backend/queen-ai/app/models/database.py",
      "line": 144,
      "type": "function"
    },
    "backend/queen-ai/app/models/database.py::update_otc_request": {
      "file": "backend/queen-ai/app/models/database.py",
      "line": 159,
      "type": "function"
    },
    "backend/queen-ai/app/models/database.py::approve_otc_request": {
      "file": "backend/queen-ai/app/models/database.py",
      "line": 172,
      "type": "function"
    },
    "backend/queen-ai/app/models/database.py::reject_otc_request": {
      "file": "backend/queen-ai/app/models/database.py",
      "line": 180,
      "type": "function"
    },
    "backend/queen-ai/app/models/database.py::get_analytics": {
      "file": "backend/queen-ai/app/models/database.py",
      "line": 191,
      "type": "function"
    },
    "backend/queen-ai/app/models/database.py::update_analytics": {
      "file": "backend/queen-ai/app/models/database.py",
      "line": 216,
      "type": "function"
    },
    "backend/queen-ai/app/models/database.py::log_transaction": {
      "file": "backend/queen-ai/app/models/database.py",
      "line": 222,
      "type": "function"
    },
    "backend/queen-ai/app/models/database.py::log_user_signup": {
      "file": "backend/queen-ai/app/models/database.py",
      "line": 237,
      "type": "function"
    },
    "backend/queen-ai/app/models/database.py::get_system_config": {
      "file": "backend/queen-ai/app/models/database.py",
      "line": 255,
      "type": "function"
    },
    "backend/queen-ai/app/models/database.py::update_system_config": {
      "file": "backend/queen-ai/app/models/database.py",
      "line": 288,
      "type": "function"
    },
    "backend/queen-ai/app/models/database.py::get_active_otc_flow": {
      "file": "backend/queen-ai/app/models/database.py",
      "line": 296,
      "type": "function"
    },
    "backend/queen-ai/app/models/database.py::initialize_database": {
      "file": "backend/queen-ai/app/models/database.py",
      "line": 313,
      "type": "function"
    },
    "backend/queen-ai/app/models/database.py::get_all_private_investors": {
      "file": "backend/queen-ai/app/models/database.py",
      "line": 342,
      "type": "function"
    },
    "backend/queen-ai/app/models/database.py::create_private_investor": {
      "file": "backend/queen-ai/app/models/database.py",
      "line": 346,
      "type": "function"
    },
    "backend/queen-ai/app/models/database.py::get_private_investor": {
      "file": "backend/queen-ai/app/models/database.py",
      "line": 359,
      "type": "function"
    },
    "backend/queen-ai/app/models/database.py::update_private_investor": {
      "file": "backend/queen-ai/app/models/database.py",
      "line": 363,
      "type": "function"
    },
    "backend/queen-ai/app/models/system_config.py::get_config": {
      "file": "backend/queen-ai/app/models/system_config.py",
      "line": 50,
      "type": "function"
    },
    "backend/queen-ai/app/models/system_config.py::update_config": {
      "file": "backend/queen-ai/app/models/system_config.py",
      "line": 54,
      "type": "function"
    },
    "backend/queen-ai/app/models/system_config.py::get_active_otc_flow": {
      "file": "backend/queen-ai/app/models/system_config.py",
      "line": 62,
      "type": "function"
    },
    "backend/queen-ai/app/integrations/elastic_search.py::__init__": {
      "file": "backend/queen-ai/app/integrations/elastic_search.py",
      "line": 32,
      "type": "function"
    },
    "backend/queen-ai/app/integrations/test_elastic.py::test_elastic_syntax": {
      "file": "backend/queen-ai/app/integrations/test_elastic.py",
      "line": 8,
      "type": "function"
    },
    "backend/queen-ai/app/integrations/claude_integration.py::__init__": {
      "file": "backend/queen-ai/app/integrations/claude_integration.py",
      "line": 24,
      "type": "function"
    },
    "backend/queen-ai/app/integrations/claude_integration.py::_build_system_prompt": {
      "file": "backend/queen-ai/app/integrations/claude_integration.py",
      "line": 140,
      "type": "function"
    },
    "backend/queen-ai/app/integrations/claude_integration.py::_get_system_state": {
      "file": "backend/queen-ai/app/integrations/claude_integration.py",
      "line": 317,
      "type": "function"
    },
    "backend/queen-ai/app/integrations/claude_integration.py::_format_conversation_history": {
      "file": "backend/queen-ai/app/integrations/claude_integration.py",
      "line": 329,
      "type": "function"
    },
    "backend/queen-ai/app/integrations/claude_integration.py::_detect_code_proposal": {
      "file": "backend/queen-ai/app/integrations/claude_integration.py",
      "line": 339,
      "type": "function"
    },
    "backend/queen-ai/app/integrations/claude_integration.py::record_correction": {
      "file": "backend/queen-ai/app/integrations/claude_integration.py",
      "line": 392,
      "type": "function"
    },
    "backend/queen-ai/app/integrations/claude_integration.py::record_pattern": {
      "file": "backend/queen-ai/app/integrations/claude_integration.py",
      "line": 402,
      "type": "function"
    },
    "backend/queen-ai/app/integrations/claude_integration.py::clear_history": {
      "file": "backend/queen-ai/app/integrations/claude_integration.py",
      "line": 446,
      "type": "function"
    },
    "backend/queen-ai/app/integrations/claude_integration.py::get_conversation_history": {
      "file": "backend/queen-ai/app/integrations/claude_integration.py",
      "line": 450,
      "type": "function"
    },
    "backend/queen-ai/app/blockchain/solana_client.py::__init__": {
      "file": "backend/queen-ai/app/blockchain/solana_client.py",
      "line": 45,
      "type": "function"
    },
    "backend/queen-ai/app/blockchain/bridge.py::__post_init__": {
      "file": "backend/queen-ai/app/blockchain/bridge.py",
      "line": 71,
      "type": "function"
    },
    "backend/queen-ai/app/blockchain/bridge.py::is_stuck": {
      "file": "backend/queen-ai/app/blockchain/bridge.py",
      "line": 81,
      "type": "function"
    },
    "backend/queen-ai/app/blockchain/bridge.py::time_remaining": {
      "file": "backend/queen-ai/app/blockchain/bridge.py",
      "line": 90,
      "type": "function"
    },
    "backend/queen-ai/app/blockchain/bridge.py::__init__": {
      "file": "backend/queen-ai/app/blockchain/bridge.py",
      "line": 109,
      "type": "function"
    },
    "backend/queen-ai/app/blockchain/solana_rpc_client.py::__init__": {
      "file": "backend/queen-ai/app/blockchain/solana_rpc_client.py",
      "line": 303,
      "type": "function"
    },
    "backend/queen-ai/app/blockchain/transaction_manager.py::__init__": {
      "file": "backend/queen-ai/app/blockchain/transaction_manager.py",
      "line": 72,
      "type": "function"
    },
    "backend/queen-ai/app/blockchain/ethereum_client.py::__init__": {
      "file": "backend/queen-ai/app/blockchain/ethereum_client.py",
      "line": 41,
      "type": "function"
    },
    "backend/queen-ai/app/blockchain/wallet_manager.py::__init__": {
      "file": "backend/queen-ai/app/blockchain/wallet_manager.py",
      "line": 32,
      "type": "function"
    },
    "backend/queen-ai/app/blockchain/wallet_manager.py::generate_wallet": {
      "file": "backend/queen-ai/app/blockchain/wallet_manager.py",
      "line": 37,
      "type": "function"
    },
    "backend/queen-ai/app/blockchain/wallet_manager.py::create_from_mnemonic": {
      "file": "backend/queen-ai/app/blockchain/wallet_manager.py",
      "line": 61,
      "type": "function"
    },
    "backend/queen-ai/app/blockchain/wallet_manager.py::import_wallet": {
      "file": "backend/queen-ai/app/blockchain/wallet_manager.py",
      "line": 106,
      "type": "function"
    },
    "backend/queen-ai/app/blockchain/wallet_manager.py::get_wallet": {
      "file": "backend/queen-ai/app/blockchain/wallet_manager.py",
      "line": 135,
      "type": "function"
    },
    "backend/queen-ai/app/blockchain/wallet_manager.py::set_current_wallet": {
      "file": "backend/queen-ai/app/blockchain/wallet_manager.py",
      "line": 150,
      "type": "function"
    },
    "backend/queen-ai/app/blockchain/wallet_manager.py::list_wallets": {
      "file": "backend/queen-ai/app/blockchain/wallet_manager.py",
      "line": 158,
      "type": "function"
    },
    "backend/queen-ai/app/blockchain/wallet_manager.py::export_private_key": {
      "file": "backend/queen-ai/app/blockchain/wallet_manager.py",
      "line": 174,
      "type": "function"
    },
    "backend/queen-ai/app/blockchain/wallet_manager.py::get_mnemonic": {
      "file": "backend/queen-ai/app/blockchain/wallet_manager.py",
      "line": 196,
      "type": "function"
    },
    "backend/queen-ai/app/blockchain/wallet_manager.py::sign_message": {
      "file": "backend/queen-ai/app/blockchain/wallet_manager.py",
      "line": 208,
      "type": "function"
    },
    "backend/queen-ai/app/blockchain/wallet_manager.py::remove_wallet": {
      "file": "backend/queen-ai/app/blockchain/wallet_manager.py",
      "line": 241,
      "type": "function"
    },
    "backend/queen-ai/app/db/base.py::get_db": {
      "file": "backend/queen-ai/app/db/base.py",
      "line": 29,
      "type": "function"
    },
    "backend/queen-ai/app/db/base.py::init_db": {
      "file": "backend/queen-ai/app/db/base.py",
      "line": 46,
      "type": "function"
    },
    "backend/queen-ai/app/services/context_analyzer.py::__init__": {
      "file": "backend/queen-ai/app/services/context_analyzer.py",
      "line": 13,
      "type": "function"
    },
    "backend/queen-ai/app/services/context_analyzer.py::analyze_message": {
      "file": "backend/queen-ai/app/services/context_analyzer.py",
      "line": 68,
      "type": "function"
    },
    "backend/queen-ai/app/services/context_analyzer.py::_detect_intent": {
      "file": "backend/queen-ai/app/services/context_analyzer.py",
      "line": 110,
      "type": "function"
    },
    "backend/queen-ai/app/services/context_analyzer.py::_analyze_history": {
      "file": "backend/queen-ai/app/services/context_analyzer.py",
      "line": 131,
      "type": "function"
    },
    "backend/queen-ai/app/services/context_analyzer.py::_generate_recommendations": {
      "file": "backend/queen-ai/app/services/context_analyzer.py",
      "line": 146,
      "type": "function"
    },
    "backend/queen-ai/app/services/context_analyzer.py::_assign_bee": {
      "file": "backend/queen-ai/app/services/context_analyzer.py",
      "line": 268,
      "type": "function"
    },
    "backend/queen-ai/app/services/context_analyzer.py::_handle_system_diagnostic": {
      "file": "backend/queen-ai/app/services/context_analyzer.py",
      "line": 286,
      "type": "function"
    },
    "backend/queen-ai/app/services/context_analyzer.py::diagnose_system": {
      "file": "backend/queen-ai/app/services/context_analyzer.py",
      "line": 304,
      "type": "function"
    },
    "backend/queen-ai/app/services/context_analyzer.py::_check_frontend_routes": {
      "file": "backend/queen-ai/app/services/context_analyzer.py",
      "line": 318,
      "type": "function"
    },
    "backend/queen-ai/app/services/context_analyzer.py::_check_backend_routes": {
      "file": "backend/queen-ai/app/services/context_analyzer.py",
      "line": 343,
      "type": "function"
    },
    "backend/queen-ai/app/services/context_analyzer.py::_check_bees_status": {
      "file": "backend/queen-ai/app/services/context_analyzer.py",
      "line": 358,
      "type": "function"
    },
    "backend/queen-ai/app/services/context_analyzer.py::_check_database": {
      "file": "backend/queen-ai/app/services/context_analyzer.py",
      "line": 377,
      "type": "function"
    },
    "backend/queen-ai/app/services/context_analyzer.py::_check_blockchain": {
      "file": "backend/queen-ai/app/services/context_analyzer.py",
      "line": 386,
      "type": "function"
    },
    "backend/queen-ai/app/api/v1/queen_dev.py::get_proposal_system": {
      "file": "backend/queen-ai/app/api/v1/queen_dev.py",
      "line": 33,
      "type": "function"
    },
    "backend/queen-ai/app/api/v1/queen_dev.py::get_system_manager": {
      "file": "backend/queen-ai/app/api/v1/queen_dev.py",
      "line": 39,
      "type": "function"
    },
    "backend/queen-ai/app/api/v1/queen_dev.py::get_reboot_manager": {
      "file": "backend/queen-ai/app/api/v1/queen_dev.py",
      "line": 45,
      "type": "function"
    },
    "backend/queen-ai/app/api/v1/queen_dev.py::get_security_bee": {
      "file": "backend/queen-ai/app/api/v1/queen_dev.py",
      "line": 57,
      "type": "function"
    },
    "backend/queen-ai/app/api/v1/frontend.py::get_security_bee": {
      "file": "backend/queen-ai/app/api/v1/frontend.py",
      "line": 18,
      "type": "function"
    },
    "backend/queen-ai/app/api/v1/admin_claude.py::get_security_bee": {
      "file": "backend/queen-ai/app/api/v1/admin_claude.py",
      "line": 25,
      "type": "function"
    },
    "backend/queen-ai/app/api/v1/admin_claude.py::get_claude": {
      "file": "backend/queen-ai/app/api/v1/admin_claude.py",
      "line": 31,
      "type": "function"
    },
    "backend/queen-ai/app/api/v1/admin.py::get_security_bee": {
      "file": "backend/queen-ai/app/api/v1/admin.py",
      "line": 31,
      "type": "function"
    },
    "backend/queen-ai/app/api/v1/admin.py::verify_admin": {
      "file": "backend/queen-ai/app/api/v1/admin.py",
      "line": 39,
      "type": "function"
    },
    "backend/queen-ai/app/api/v1/notifications.py::verify_admin": {
      "file": "backend/queen-ai/app/api/v1/notifications.py",
      "line": 19,
      "type": "function"
    },
    "backend/queen-ai/app/api/v1/claude_analysis.py::verify_admin": {
      "file": "backend/queen-ai/app/api/v1/claude_analysis.py",
      "line": 37,
      "type": "function"
    },
    "backend/queen-ai/app/api/v1/claude_analysis_old_backup.py::verify_admin": {
      "file": "backend/queen-ai/app/api/v1/claude_analysis_old_backup.py",
      "line": 36,
      "type": "function"
    },
    "backend/queen-ai/app/api/v1/websocket.py::__init__": {
      "file": "backend/queen-ai/app/api/v1/websocket.py",
      "line": 21,
      "type": "function"
    },
    "backend/queen-ai/app/api/v1/websocket.py::disconnect": {
      "file": "backend/queen-ai/app/api/v1/websocket.py",
      "line": 54,
      "type": "function"
    },
    "backend/queen-ai/app/api/v1/endpoints/teacher_bee.py::get_security_bee": {
      "file": "backend/queen-ai/app/api/v1/endpoints/teacher_bee.py",
      "line": 20,
      "type": "function"
    },
    "backend/queen-ai/app/api/v1/endpoints/teacher_bee.py::_get_system_message": {
      "file": "backend/queen-ai/app/api/v1/endpoints/teacher_bee.py",
      "line": 240,
      "type": "function"
    },
    "backend/queen-ai/app/blockchain/oracles/pyth_oracle.py::__init__": {
      "file": "backend/queen-ai/app/blockchain/oracles/pyth_oracle.py",
      "line": 50,
      "type": "function"
    },
    "backend/queen-ai/app/blockchain/oracles/pyth_oracle.py::_parse_price_data": {
      "file": "backend/queen-ai/app/blockchain/oracles/pyth_oracle.py",
      "line": 302,
      "type": "function"
    },
    "backend/queen-ai/app/blockchain/oracles/pyth_oracle.py::_parse_price_from_bytes": {
      "file": "backend/queen-ai/app/blockchain/oracles/pyth_oracle.py",
      "line": 322,
      "type": "function"
    },
    "backend/queen-ai/app/blockchain/oracles/pyth_oracle.py::_parse_confidence_from_bytes": {
      "file": "backend/queen-ai/app/blockchain/oracles/pyth_oracle.py",
      "line": 326,
      "type": "function"
    },
    "backend/queen-ai/app/blockchain/oracles/pyth_oracle.py::_parse_status_from_bytes": {
      "file": "backend/queen-ai/app/blockchain/oracles/pyth_oracle.py",
      "line": 343,
      "type": "function"
    },
    "backend/queen-ai/app/blockchain/oracles/pyth_oracle.py::_parse_ema_from_bytes": {
      "file": "backend/queen-ai/app/blockchain/oracles/pyth_oracle.py",
      "line": 361,
      "type": "function"
    },
    "backend/queen-ai/app/blockchain/oracles/pyth_oracle.py::_get_cached_price": {
      "file": "backend/queen-ai/app/blockchain/oracles/pyth_oracle.py",
      "line": 380,
      "type": "function"
    },
    "backend/queen-ai/app/blockchain/oracles/pyth_oracle.py::_cache_price": {
      "file": "backend/queen-ai/app/blockchain/oracles/pyth_oracle.py",
      "line": 393,
      "type": "function"
    },
    "backend/queen-ai/app/blockchain/oracles/pyth_oracle.py::add_custom_feed": {
      "file": "backend/queen-ai/app/blockchain/oracles/pyth_oracle.py",
      "line": 402,
      "type": "function"
    },
    "backend/queen-ai/app/blockchain/oracles/chainlink_oracle.py::__init__": {
      "file": "backend/queen-ai/app/blockchain/oracles/chainlink_oracle.py",
      "line": 75,
      "type": "function"
    },
    "backend/queen-ai/app/blockchain/oracles/chainlink_oracle.py::add_custom_feed": {
      "file": "backend/queen-ai/app/blockchain/oracles/chainlink_oracle.py",
      "line": 317,
      "type": "function"
    },
    "backend/queen-ai/app/blockchain/dex/uniswap_router.py::__init__": {
      "file": "backend/queen-ai/app/blockchain/dex/uniswap_router.py",
      "line": 147,
      "type": "function"
    },
    "backend/queen-ai/app/blockchain/dex/uniswap_router.py::_calculate_price_impact": {
      "file": "backend/queen-ai/app/blockchain/dex/uniswap_router.py",
      "line": 492,
      "type": "function"
    },
    "backend/queen-ai/app/blockchain/dex/raydium_router.py::__init__": {
      "file": "backend/queen-ai/app/blockchain/dex/raydium_router.py",
      "line": 34,
      "type": "function"
    },
    "backend/queen-ai/app/blockchain/dex/raydium_router.py::_calculate_swap_output": {
      "file": "backend/queen-ai/app/blockchain/dex/raydium_router.py",
      "line": 273,
      "type": "function"
    },
    "backend/queen-ai/app/blockchain/dex/raydium_router.py::_calculate_price_impact": {
      "file": "backend/queen-ai/app/blockchain/dex/raydium_router.py",
      "line": 293,
      "type": "function"
    },
    "backend/queen-ai/app/integrations/data_collectors/price_oracles.py::__init__": {
      "file": "backend/queen-ai/app/integrations/data_collectors/price_oracles.py",
      "line": 22,
      "type": "function"
    },
    "backend/queen-ai/app/integrations/data_collectors/dex_pools.py::__init__": {
      "file": "backend/queen-ai/app/integrations/data_collectors/dex_pools.py",
      "line": 22,
      "type": "function"
    },
    "backend/queen-ai/app/integrations/data_collectors/blockchain_transactions.py::__init__": {
      "file": "backend/queen-ai/app/integrations/data_collectors/blockchain_transactions.py",
      "line": 23,
      "type": "function"
    },
    "backend/queen-ai/app/core/security/context_manager.py::__init__": {
      "file": "backend/queen-ai/app/core/security/context_manager.py",
      "line": 77,
      "type": "function"
    },
    "backend/queen-ai/app/core/security/context_manager.py::get_or_create_context": {
      "file": "backend/queen-ai/app/core/security/context_manager.py",
      "line": 87,
      "type": "function"
    },
    "backend/queen-ai/app/core/security/context_manager.py::update_threat_level": {
      "file": "backend/queen-ai/app/core/security/context_manager.py",
      "line": 113,
      "type": "function"
    },
    "backend/queen-ai/app/core/security/context_manager.py::_calculate_threat_level": {
      "file": "backend/queen-ai/app/core/security/context_manager.py",
      "line": 196,
      "type": "function"
    },
    "backend/queen-ai/app/core/security/context_manager.py::_detect_escalation": {
      "file": "backend/queen-ai/app/core/security/context_manager.py",
      "line": 215,
      "type": "function"
    },
    "backend/queen-ai/app/core/security/context_manager.py::should_block_user": {
      "file": "backend/queen-ai/app/core/security/context_manager.py",
      "line": 247,
      "type": "function"
    },
    "backend/queen-ai/app/core/security/context_manager.py::block_user": {
      "file": "backend/queen-ai/app/core/security/context_manager.py",
      "line": 279,
      "type": "function"
    },
    "backend/queen-ai/app/core/security/context_manager.py::unblock_user": {
      "file": "backend/queen-ai/app/core/security/context_manager.py",
      "line": 308,
      "type": "function"
    },
    "backend/queen-ai/app/core/security/context_manager.py::get_security_summary": {
      "file": "backend/queen-ai/app/core/security/context_manager.py",
      "line": 318,
      "type": "function"
    },
    "backend/queen-ai/app/core/security/context_manager.py::get_global_stats": {
      "file": "backend/queen-ai/app/core/security/context_manager.py",
      "line": 359,
      "type": "function"
    },
    "backend/queen-ai/app/core/security/context_manager.py::cleanup_old_contexts": {
      "file": "backend/queen-ai/app/core/security/context_manager.py",
      "line": 373,
      "type": "function"
    },
    "backend/queen-ai/app/core/security/prompt_protection.py::__init__": {
      "file": "backend/queen-ai/app/core/security/prompt_protection.py",
      "line": 141,
      "type": "function"
    },
    "backend/queen-ai/app/core/security/prompt_protection.py::sanitize_input": {
      "file": "backend/queen-ai/app/core/security/prompt_protection.py",
      "line": 150,
      "type": "function"
    },
    "backend/queen-ai/app/core/security/prompt_protection.py::detect_invisible_chars": {
      "file": "backend/queen-ai/app/core/security/prompt_protection.py",
      "line": 178,
      "type": "function"
    },
    "backend/queen-ai/app/core/security/prompt_protection.py::detect_injection": {
      "file": "backend/queen-ai/app/core/security/prompt_protection.py",
      "line": 201,
      "type": "function"
    },
    "backend/queen-ai/app/core/security/prompt_protection.py::score_threat": {
      "file": "backend/queen-ai/app/core/security/prompt_protection.py",
      "line": 284,
      "type": "function"
    },
    "backend/queen-ai/app/core/security/prompt_protection.py::normalize_unicode": {
      "file": "backend/queen-ai/app/core/security/prompt_protection.py",
      "line": 297,
      "type": "function"
    },
    "backend/queen-ai/app/core/security/prompt_protection.py::_generate_reasoning": {
      "file": "backend/queen-ai/app/core/security/prompt_protection.py",
      "line": 321,
      "type": "function"
    },
    "backend/queen-ai/app/core/security/prompt_protection.py::get_stats": {
      "file": "backend/queen-ai/app/core/security/prompt_protection.py",
      "line": 355,
      "type": "function"
    },
    "backend/queen-ai/app/core/security/prompt_protection.py::reset_stats": {
      "file": "backend/queen-ai/app/core/security/prompt_protection.py",
      "line": 365,
      "type": "function"
    },
    "backend/queen-ai/app/core/security/output_filter.py::__init__": {
      "file": "backend/queen-ai/app/core/security/output_filter.py",
      "line": 101,
      "type": "function"
    },
    "backend/queen-ai/app/core/security/output_filter.py::filter_response": {
      "file": "backend/queen-ai/app/core/security/output_filter.py",
      "line": 111,
      "type": "function"
    },
    "backend/queen-ai/app/core/security/output_filter.py::redact_secrets": {
      "file": "backend/queen-ai/app/core/security/output_filter.py",
      "line": 136,
      "type": "function"
    },
    "backend/queen-ai/app/core/security/output_filter.py::mask_sensitive_data": {
      "file": "backend/queen-ai/app/core/security/output_filter.py",
      "line": 166,
      "type": "function"
    },
    "backend/queen-ai/app/core/security/output_filter.py::detect_malicious_code": {
      "file": "backend/queen-ai/app/core/security/output_filter.py",
      "line": 199,
      "type": "function"
    },
    "backend/queen-ai/app/core/security/output_filter.py::validate_code_proposal": {
      "file": "backend/queen-ai/app/core/security/output_filter.py",
      "line": 229,
      "type": "function"
    },
    "backend/queen-ai/app/core/security/output_filter.py::validate_safety": {
      "file": "backend/queen-ai/app/core/security/output_filter.py",
      "line": 265,
      "type": "function"
    },
    "backend/queen-ai/app/core/security/output_filter.py::get_stats": {
      "file": "backend/queen-ai/app/core/security/output_filter.py",
      "line": 305,
      "type": "function"
    },
    "backend/queen-ai/app/core/security/output_filter.py::reset_stats": {
      "file": "backend/queen-ai/app/core/security/output_filter.py",
      "line": 315,
      "type": "function"
    },
    "backend/queen-ai/app/core/security/output_filter.py::replacer": {
      "file": "backend/queen-ai/app/core/security/output_filter.py",
      "line": 182,
      "type": "function"
    },
    "backend/queen-ai/app/core/security/image_scanner.py::__init__": {
      "file": "backend/queen-ai/app/core/security/image_scanner.py",
      "line": 92,
      "type": "function"
    },
    "backend/queen-ai/app/core/security/image_scanner.py::_extract_metadata": {
      "file": "backend/queen-ai/app/core/security/image_scanner.py",
      "line": 223,
      "type": "function"
    },
    "backend/queen-ai/app/core/security/image_scanner.py::_has_suspicious_metadata": {
      "file": "backend/queen-ai/app/core/security/image_scanner.py",
      "line": 247,
      "type": "function"
    },
    "backend/queen-ai/app/core/security/image_scanner.py::_extract_text": {
      "file": "backend/queen-ai/app/core/security/image_scanner.py",
      "line": 257,
      "type": "function"
    },
    "backend/queen-ai/app/core/security/image_scanner.py::_check_text_for_threats": {
      "file": "backend/queen-ai/app/core/security/image_scanner.py",
      "line": 276,
      "type": "function"
    },
    "backend/queen-ai/app/core/security/image_scanner.py::_has_steganography_indicators": {
      "file": "backend/queen-ai/app/core/security/image_scanner.py",
      "line": 289,
      "type": "function"
    },
    "backend/queen-ai/app/core/security/image_scanner.py::validate_base64_image": {
      "file": "backend/queen-ai/app/core/security/image_scanner.py",
      "line": 318,
      "type": "function"
    },
    "backend/queen-ai/app/core/security/image_scanner.py::get_stats": {
      "file": "backend/queen-ai/app/core/security/image_scanner.py",
      "line": 349,
      "type": "function"
    },
    "backend/queen-ai/app/core/security/image_scanner.py::reset_stats": {
      "file": "backend/queen-ai/app/core/security/image_scanner.py",
      "line": 365,
      "type": "function"
    },
    "backend/queen-ai/app/llm/providers/gemini.py::__init__": {
      "file": "backend/queen-ai/app/llm/providers/gemini.py",
      "line": 27,
      "type": "function"
    },
    "backend/queen-ai/app/llm/providers/openai.py::__init__": {
      "file": "backend/queen-ai/app/llm/providers/openai.py",
      "line": 24,
      "type": "function"
    },
    "backend/queen-ai/app/llm/providers/anthropic.py::__init__": {
      "file": "backend/queen-ai/app/llm/providers/anthropic.py",
      "line": 24,
      "type": "function"
    },
    "omk-frontend/app/layout.tsx::inter": {
      "file": "omk-frontend/app/layout.tsx",
      "line": 8,
      "type": "function"
    },
    "omk-frontend/app/layout.tsx::RootLayout": {
      "file": "omk-frontend/app/layout.tsx",
      "line": 15,
      "type": "function"
    },
    "omk-frontend/app/page.tsx::GreetingScreen": {
      "file": "omk-frontend/app/page.tsx",
      "line": 15,
      "type": "function"
    },
    "omk-frontend/app/page.tsx::router": {
      "file": "omk-frontend/app/page.tsx",
      "line": 16,
      "type": "function"
    },
    "omk-frontend/app/page.tsx::fallback": {
      "file": "omk-frontend/app/page.tsx",
      "line": 36,
      "type": "function"
    },
    "omk-frontend/app/page.tsx::timer": {
      "file": "omk-frontend/app/page.tsx",
      "line": 65,
      "type": "function"
    },
    "omk-frontend/app/page.tsx::handleLanguageSelect": {
      "file": "omk-frontend/app/page.tsx",
      "line": 69,
      "type": "function"
    },
    "omk-frontend/app/page.tsx::currentGreeting": {
      "file": "omk-frontend/app/page.tsx",
      "line": 88,
      "type": "function"
    },
    "omk-frontend/components/layout/AppShell.tsx::AppShell": {
      "file": "omk-frontend/components/layout/AppShell.tsx",
      "line": 8,
      "type": "function"
    },
    "omk-frontend/components/layout/AppShell.tsx::pathname": {
      "file": "omk-frontend/components/layout/AppShell.tsx",
      "line": 9,
      "type": "function"
    },
    "omk-frontend/components/layout/AppShell.tsx::router": {
      "file": "omk-frontend/components/layout/AppShell.tsx",
      "line": 10,
      "type": "function"
    },
    "omk-frontend/components/layout/AppShell.tsx::showComponents": {
      "file": "omk-frontend/components/layout/AppShell.tsx",
      "line": 13,
      "type": "function"
    },
    "omk-frontend/components/layout/AppShell.tsx::handleMenuClick": {
      "file": "omk-frontend/components/layout/AppShell.tsx",
      "line": 16,
      "type": "function"
    },
    "omk-frontend/components/cards/PrivateInvestorCard.tsx::PrivateInvestorCard": {
      "file": "omk-frontend/components/cards/PrivateInvestorCard.tsx",
      "line": 20,
      "type": "function"
    },
    "omk-frontend/components/cards/PrivateInvestorCard.tsx::fetchInvestors": {
      "file": "omk-frontend/components/cards/PrivateInvestorCard.tsx",
      "line": 38,
      "type": "function"
    },
    "omk-frontend/components/cards/PrivateInvestorCard.tsx::token": {
      "file": "omk-frontend/components/cards/PrivateInvestorCard.tsx",
      "line": 79,
      "type": "function"
    },
    "omk-frontend/components/cards/PrivateInvestorCard.tsx::response": {
      "file": "omk-frontend/components/cards/PrivateInvestorCard.tsx",
      "line": 80,
      "type": "function"
    },
    "omk-frontend/components/cards/PrivateInvestorCard.tsx::data": {
      "file": "omk-frontend/components/cards/PrivateInvestorCard.tsx",
      "line": 95,
      "type": "function"
    },
    "omk-frontend/components/cards/PrivateInvestorCard.tsx::totalAllocated": {
      "file": "omk-frontend/components/cards/PrivateInvestorCard.tsx",
      "line": 63,
      "type": "function"
    },
    "omk-frontend/components/cards/PrivateInvestorCard.tsx::totalDistributed": {
      "file": "omk-frontend/components/cards/PrivateInvestorCard.tsx",
      "line": 64,
      "type": "function"
    },
    "omk-frontend/components/cards/PrivateInvestorCard.tsx::pendingInvestors": {
      "file": "omk-frontend/components/cards/PrivateInvestorCard.tsx",
      "line": 65,
      "type": "function"
    },
    "omk-frontend/components/cards/PrivateInvestorCard.tsx::handleRegisterInvestor": {
      "file": "omk-frontend/components/cards/PrivateInvestorCard.tsx",
      "line": 67,
      "type": "function"
    },
    "omk-frontend/components/cards/PrivateInvestorCard.tsx::handleExecuteTGE": {
      "file": "omk-frontend/components/cards/PrivateInvestorCard.tsx",
      "line": 113,
      "type": "function"
    },
    "omk-frontend/components/cards/PrivateInvestorCard.tsx::handleDistributeToInvestor": {
      "file": "omk-frontend/components/cards/PrivateInvestorCard.tsx",
      "line": 122,
      "type": "function"
    },
    "omk-frontend/components/cards/PrivateInvestorCard.tsx::handleDistributeAll": {
      "file": "omk-frontend/components/cards/PrivateInvestorCard.tsx",
      "line": 133,
      "type": "function"
    },
    "omk-frontend/components/cards/WalletEducationCard.tsx::WalletEducationCard": {
      "file": "omk-frontend/components/cards/WalletEducationCard.tsx",
      "line": 16,
      "type": "function"
    },
    "omk-frontend/components/cards/MarketDataCard.tsx::MarketDataCard": {
      "file": "omk-frontend/components/cards/MarketDataCard.tsx",
      "line": 38,
      "type": "function"
    },
    "omk-frontend/components/cards/MarketDataCard.tsx::interval": {
      "file": "omk-frontend/components/cards/MarketDataCard.tsx",
      "line": 46,
      "type": "function"
    },
    "omk-frontend/components/cards/MarketDataCard.tsx::fetchMarketData": {
      "file": "omk-frontend/components/cards/MarketDataCard.tsx",
      "line": 50,
      "type": "function"
    },
    "omk-frontend/components/cards/MarketDataCard.tsx::response": {
      "file": "omk-frontend/components/cards/MarketDataCard.tsx",
      "line": 53,
      "type": "function"
    },
    "omk-frontend/components/cards/MarketDataCard.tsx::data": {
      "file": "omk-frontend/components/cards/MarketDataCard.tsx",
      "line": 55,
      "type": "function"
    },
    "omk-frontend/components/cards/MarketDataCard.tsx::generateMockData": {
      "file": "omk-frontend/components/cards/MarketDataCard.tsx",
      "line": 70,
      "type": "function"
    },
    "omk-frontend/components/cards/MarketDataCard.tsx::generatePriceHistory": {
      "file": "omk-frontend/components/cards/MarketDataCard.tsx",
      "line": 98,
      "type": "function"
    },
    "omk-frontend/components/cards/MarketDataCard.tsx::history": {
      "file": "omk-frontend/components/cards/MarketDataCard.tsx",
      "line": 100,
      "type": "function"
    },
    "omk-frontend/components/cards/MarketDataCard.tsx::basePrice": {
      "file": "omk-frontend/components/cards/MarketDataCard.tsx",
      "line": 101,
      "type": "function"
    },
    "omk-frontend/components/cards/MarketDataCard.tsx::now": {
      "file": "omk-frontend/components/cards/MarketDataCard.tsx",
      "line": 102,
      "type": "function"
    },
    "omk-frontend/components/cards/MarketDataCard.tsx::time": {
      "file": "omk-frontend/components/cards/MarketDataCard.tsx",
      "line": 105,
      "type": "function"
    },
    "omk-frontend/components/cards/MarketDataCard.tsx::variance": {
      "file": "omk-frontend/components/cards/MarketDataCard.tsx",
      "line": 106,
      "type": "function"
    },
    "omk-frontend/components/cards/MarketDataCard.tsx::price": {
      "file": "omk-frontend/components/cards/MarketDataCard.tsx",
      "line": 107,
      "type": "function"
    },
    "omk-frontend/components/cards/MarketDataCard.tsx::x": {
      "file": "omk-frontend/components/cards/MarketDataCard.tsx",
      "line": 365,
      "type": "function"
    },
    "omk-frontend/components/cards/MarketDataCard.tsx::y": {
      "file": "omk-frontend/components/cards/MarketDataCard.tsx",
      "line": 366,
      "type": "function"
    },
    "omk-frontend/components/cards/VisualWalletGuideCard.tsx::VisualWalletGuideCard": {
      "file": "omk-frontend/components/cards/VisualWalletGuideCard.tsx",
      "line": 14,
      "type": "function"
    },
    "omk-frontend/components/cards/VisualWalletGuideCard.tsx::fileInputRef": {
      "file": "omk-frontend/components/cards/VisualWalletGuideCard.tsx",
      "line": 16,
      "type": "function"
    },
    "omk-frontend/components/cards/VisualWalletGuideCard.tsx::handleImageUpload": {
      "file": "omk-frontend/components/cards/VisualWalletGuideCard.tsx",
      "line": 18,
      "type": "function"
    },
    "omk-frontend/components/cards/VisualWalletGuideCard.tsx::file": {
      "file": "omk-frontend/components/cards/VisualWalletGuideCard.tsx",
      "line": 19,
      "type": "function"
    },
    "omk-frontend/components/cards/VisualWalletGuideCard.tsx::steps": {
      "file": "omk-frontend/components/cards/VisualWalletGuideCard.tsx",
      "line": 25,
      "type": "function"
    },
    "omk-frontend/components/cards/VisualWalletGuideCard.tsx::step": {
      "file": "omk-frontend/components/cards/VisualWalletGuideCard.tsx",
      "line": 138,
      "type": "function"
    },
    "omk-frontend/components/cards/PropertyCard.tsx::PropertyCard": {
      "file": "omk-frontend/components/cards/PropertyCard.tsx",
      "line": 28,
      "type": "function"
    },
    "omk-frontend/components/cards/PropertyCard.tsx::monthlyReturn": {
      "file": "omk-frontend/components/cards/PropertyCard.tsx",
      "line": 71,
      "type": "function"
    },
    "omk-frontend/components/cards/PropertyCard.tsx::yearlyReturn": {
      "file": "omk-frontend/components/cards/PropertyCard.tsx",
      "line": 72,
      "type": "function"
    },
    "omk-frontend/components/cards/DashboardCard.tsx::DashboardCard": {
      "file": "omk-frontend/components/cards/DashboardCard.tsx",
      "line": 19,
      "type": "function"
    },
    "omk-frontend/components/cards/DashboardCard.tsx::router": {
      "file": "omk-frontend/components/cards/DashboardCard.tsx",
      "line": 20,
      "type": "function"
    },
    "omk-frontend/components/cards/DashboardCard.tsx::ethValue": {
      "file": "omk-frontend/components/cards/DashboardCard.tsx",
      "line": 27,
      "type": "function"
    },
    "omk-frontend/components/cards/DashboardCard.tsx::omkValue": {
      "file": "omk-frontend/components/cards/DashboardCard.tsx",
      "line": 28,
      "type": "function"
    },
    "omk-frontend/components/cards/DashboardCard.tsx::realEstateValue": {
      "file": "omk-frontend/components/cards/DashboardCard.tsx",
      "line": 29,
      "type": "function"
    },
    "omk-frontend/components/cards/DashboardCard.tsx::totalValue": {
      "file": "omk-frontend/components/cards/DashboardCard.tsx",
      "line": 30,
      "type": "function"
    },
    "omk-frontend/components/cards/DashboardCard.tsx::handleBuyOMK": {
      "file": "omk-frontend/components/cards/DashboardCard.tsx",
      "line": 33,
      "type": "function"
    },
    "omk-frontend/components/cards/DashboardCard.tsx::handleInvestMore": {
      "file": "omk-frontend/components/cards/DashboardCard.tsx",
      "line": 37,
      "type": "function"
    },
    "omk-frontend/components/cards/DashboardCard.tsx::portfolio": {
      "file": "omk-frontend/components/cards/DashboardCard.tsx",
      "line": 41,
      "type": "function"
    },
    "omk-frontend/components/cards/DashboardCard.tsx::holdings": {
      "file": "omk-frontend/components/cards/DashboardCard.tsx",
      "line": 49,
      "type": "function"
    },
    "omk-frontend/components/cards/SwapCard.tsx::SwapCard": {
      "file": "omk-frontend/components/cards/SwapCard.tsx",
      "line": 18,
      "type": "function"
    },
    "omk-frontend/components/cards/SwapCard.tsx::currentToken": {
      "file": "omk-frontend/components/cards/SwapCard.tsx",
      "line": 28,
      "type": "function"
    },
    "omk-frontend/components/cards/SwapCard.tsx::balance": {
      "file": "omk-frontend/components/cards/SwapCard.tsx",
      "line": 36,
      "type": "function"
    },
    "omk-frontend/components/cards/SwapCard.tsx::omkPrice": {
      "file": "omk-frontend/components/cards/SwapCard.tsx",
      "line": 47,
      "type": "function"
    },
    "omk-frontend/components/cards/SwapCard.tsx::input": {
      "file": "omk-frontend/components/cards/SwapCard.tsx",
      "line": 52,
      "type": "function"
    },
    "omk-frontend/components/cards/SwapCard.tsx::tokenPrice": {
      "file": "omk-frontend/components/cards/SwapCard.tsx",
      "line": 53,
      "type": "function"
    },
    "omk-frontend/components/cards/SwapCard.tsx::valueUSD": {
      "file": "omk-frontend/components/cards/SwapCard.tsx",
      "line": 96,
      "type": "function"
    },
    "omk-frontend/components/cards/SwapCard.tsx::omkAmount": {
      "file": "omk-frontend/components/cards/SwapCard.tsx",
      "line": 55,
      "type": "function"
    },
    "omk-frontend/components/cards/SwapCard.tsx::handleExecuteSwap": {
      "file": "omk-frontend/components/cards/SwapCard.tsx",
      "line": 69,
      "type": "function"
    },
    "omk-frontend/components/cards/SwapCard.tsx::canSwap": {
      "file": "omk-frontend/components/cards/SwapCard.tsx",
      "line": 97,
      "type": "function"
    },
    "omk-frontend/components/cards/InfoCard.tsx::InfoCard": {
      "file": "omk-frontend/components/cards/InfoCard.tsx",
      "line": 21,
      "type": "function"
    },
    "omk-frontend/components/cards/InfoCard.tsx::hasExpandedContent": {
      "file": "omk-frontend/components/cards/InfoCard.tsx",
      "line": 23,
      "type": "function"
    },
    "omk-frontend/components/cards/OnboardingFlowCard.tsx::OnboardingFlowCard": {
      "file": "omk-frontend/components/cards/OnboardingFlowCard.tsx",
      "line": 14,
      "type": "function"
    },
    "omk-frontend/components/cards/OnboardingFlowCard.tsx::nextStep": {
      "file": "omk-frontend/components/cards/OnboardingFlowCard.tsx",
      "line": 17,
      "type": "function"
    },
    "omk-frontend/components/cards/OnboardingFlowCard.tsx::currentIndex": {
      "file": "omk-frontend/components/cards/OnboardingFlowCard.tsx",
      "line": 19,
      "type": "function"
    },
    "omk-frontend/components/cards/WalletFundingGuideCard.tsx::WalletFundingGuideCard": {
      "file": "omk-frontend/components/cards/WalletFundingGuideCard.tsx",
      "line": 10,
      "type": "function"
    },
    "omk-frontend/components/cards/SwapCard.old.tsx::SwapCard": {
      "file": "omk-frontend/components/cards/SwapCard.old.tsx",
      "line": 18,
      "type": "function"
    },
    "omk-frontend/components/cards/SwapCard.old.tsx::from": {
      "file": "omk-frontend/components/cards/SwapCard.old.tsx",
      "line": 76,
      "type": "function"
    },
    "omk-frontend/components/cards/SwapCard.old.tsx::rate": {
      "file": "omk-frontend/components/cards/SwapCard.old.tsx",
      "line": 77,
      "type": "function"
    },
    "omk-frontend/components/cards/SwapCard.old.tsx::to": {
      "file": "omk-frontend/components/cards/SwapCard.old.tsx",
      "line": 78,
      "type": "function"
    },
    "omk-frontend/components/cards/SwapCard.old.tsx::handleSwapTokens": {
      "file": "omk-frontend/components/cards/SwapCard.old.tsx",
      "line": 92,
      "type": "function"
    },
    "omk-frontend/components/cards/SwapCard.old.tsx::temp": {
      "file": "omk-frontend/components/cards/SwapCard.old.tsx",
      "line": 93,
      "type": "function"
    },
    "omk-frontend/components/cards/SwapCard.old.tsx::handleExecuteSwap": {
      "file": "omk-frontend/components/cards/SwapCard.old.tsx",
      "line": 99,
      "type": "function"
    },
    "omk-frontend/components/cards/WalletConnectCard.tsx::useDeviceType": {
      "file": "omk-frontend/components/cards/WalletConnectCard.tsx",
      "line": 11,
      "type": "function"
    },
    "omk-frontend/components/cards/WalletConnectCard.tsx::checkDevice": {
      "file": "omk-frontend/components/cards/WalletConnectCard.tsx",
      "line": 15,
      "type": "function"
    },
    "omk-frontend/components/cards/WalletConnectCard.tsx::width": {
      "file": "omk-frontend/components/cards/WalletConnectCard.tsx",
      "line": 16,
      "type": "function"
    },
    "omk-frontend/components/cards/WalletConnectCard.tsx::WalletConnectCard": {
      "file": "omk-frontend/components/cards/WalletConnectCard.tsx",
      "line": 39,
      "type": "function"
    },
    "omk-frontend/components/cards/WalletConnectCard.tsx::deviceType": {
      "file": "omk-frontend/components/cards/WalletConnectCard.tsx",
      "line": 44,
      "type": "function"
    },
    "omk-frontend/components/cards/WalletConnectCard.tsx::isMobile": {
      "file": "omk-frontend/components/cards/WalletConnectCard.tsx",
      "line": 45,
      "type": "function"
    },
    "omk-frontend/components/cards/WalletConnectCard.tsx::alreadyConnected": {
      "file": "omk-frontend/components/cards/WalletConnectCard.tsx",
      "line": 65,
      "type": "function"
    },
    "omk-frontend/components/cards/WalletConnectCard.tsx::handleConnect": {
      "file": "omk-frontend/components/cards/WalletConnectCard.tsx",
      "line": 87,
      "type": "function"
    },
    "omk-frontend/components/cards/WalletConnectCard.tsx::isWalletConnect": {
      "file": "omk-frontend/components/cards/WalletConnectCard.tsx",
      "line": 349,
      "type": "function"
    },
    "omk-frontend/components/cards/WalletConnectCard.tsx::isCoinbase": {
      "file": "omk-frontend/components/cards/WalletConnectCard.tsx",
      "line": 282,
      "type": "function"
    },
    "omk-frontend/components/cards/WalletConnectCard.tsx::isInjected": {
      "file": "omk-frontend/components/cards/WalletConnectCard.tsx",
      "line": 348,
      "type": "function"
    },
    "omk-frontend/components/cards/OTCPurchaseCard.tsx::OTCPurchaseCard": {
      "file": "omk-frontend/components/cards/OTCPurchaseCard.tsx",
      "line": 30,
      "type": "function"
    },
    "omk-frontend/components/cards/OTCPurchaseCard.tsx::fetchConfig": {
      "file": "omk-frontend/components/cards/OTCPurchaseCard.tsx",
      "line": 60,
      "type": "function"
    },
    "omk-frontend/components/cards/OTCPurchaseCard.tsx::response": {
      "file": "omk-frontend/components/cards/OTCPurchaseCard.tsx",
      "line": 130,
      "type": "function"
    },
    "omk-frontend/components/cards/OTCPurchaseCard.tsx::data": {
      "file": "omk-frontend/components/cards/OTCPurchaseCard.tsx",
      "line": 147,
      "type": "function"
    },
    "omk-frontend/components/cards/OTCPurchaseCard.tsx::config": {
      "file": "omk-frontend/components/cards/OTCPurchaseCard.tsx",
      "line": 65,
      "type": "function"
    },
    "omk-frontend/components/cards/OTCPurchaseCard.tsx::handleConnectWallet": {
      "file": "omk-frontend/components/cards/OTCPurchaseCard.tsx",
      "line": 102,
      "type": "function"
    },
    "omk-frontend/components/cards/OTCPurchaseCard.tsx::handleManualWallet": {
      "file": "omk-frontend/components/cards/OTCPurchaseCard.tsx",
      "line": 110,
      "type": "function"
    },
    "omk-frontend/components/cards/OTCPurchaseCard.tsx::calculatePrice": {
      "file": "omk-frontend/components/cards/OTCPurchaseCard.tsx",
      "line": 114,
      "type": "function"
    },
    "omk-frontend/components/cards/OTCPurchaseCard.tsx::tokens": {
      "file": "omk-frontend/components/cards/OTCPurchaseCard.tsx",
      "line": 115,
      "type": "function"
    },
    "omk-frontend/components/cards/OTCPurchaseCard.tsx::price": {
      "file": "omk-frontend/components/cards/OTCPurchaseCard.tsx",
      "line": 116,
      "type": "function"
    },
    "omk-frontend/components/cards/OTCPurchaseCard.tsx::handleSubmit": {
      "file": "omk-frontend/components/cards/OTCPurchaseCard.tsx",
      "line": 125,
      "type": "function"
    },
    "omk-frontend/components/cards/OTCPurchaseCard.tsx::allocation": {
      "file": "omk-frontend/components/cards/OTCPurchaseCard.tsx",
      "line": 574,
      "type": "function"
    },
    "omk-frontend/components/cards/OTCPurchaseCard.tsx::minAllocation": {
      "file": "omk-frontend/components/cards/OTCPurchaseCard.tsx",
      "line": 345,
      "type": "function"
    },
    "omk-frontend/components/cards/OTCPurchaseCard.tsx::totalCost": {
      "file": "omk-frontend/components/cards/OTCPurchaseCard.tsx",
      "line": 575,
      "type": "function"
    },
    "omk-frontend/components/cards/OTCPurchaseCard.tsx::treasuryWallet": {
      "file": "omk-frontend/components/cards/OTCPurchaseCard.tsx",
      "line": 577,
      "type": "function"
    },
    "omk-frontend/components/cards/OTCPurchaseCard.tsx::copyToClipboard": {
      "file": "omk-frontend/components/cards/OTCPurchaseCard.tsx",
      "line": 579,
      "type": "function"
    },
    "omk-frontend/components/cards/OTCPurchaseCard.tsx::tgeDateObj": {
      "file": "omk-frontend/components/cards/OTCPurchaseCard.tsx",
      "line": 747,
      "type": "function"
    },
    "omk-frontend/components/cards/OTCPurchaseCard.tsx::now": {
      "file": "omk-frontend/components/cards/OTCPurchaseCard.tsx",
      "line": 748,
      "type": "function"
    },
    "omk-frontend/components/cards/OTCPurchaseCard.tsx::daysUntilTGE": {
      "file": "omk-frontend/components/cards/OTCPurchaseCard.tsx",
      "line": 749,
      "type": "function"
    },
    "omk-frontend/components/cards/InteractiveCard.tsx::InteractiveCard": {
      "file": "omk-frontend/components/cards/InteractiveCard.tsx",
      "line": 12,
      "type": "function"
    },
    "omk-frontend/components/providers/Web3Provider.tsx::Web3Provider": {
      "file": "omk-frontend/components/providers/Web3Provider.tsx",
      "line": 8,
      "type": "function"
    },
    "omk-frontend/components/providers/ThemeProvider.tsx::ThemeProvider": {
      "file": "omk-frontend/components/providers/ThemeProvider.tsx",
      "line": 6,
      "type": "function"
    },
    "omk-frontend/components/providers/ThemeProvider.tsx::savedTheme": {
      "file": "omk-frontend/components/providers/ThemeProvider.tsx",
      "line": 11,
      "type": "function"
    },
    "omk-frontend/components/education/TeacherBeeChat.tsx::TeacherBeeChat": {
      "file": "omk-frontend/components/education/TeacherBeeChat.tsx",
      "line": 21,
      "type": "function"
    },
    "omk-frontend/components/education/TeacherBeeChat.tsx::messagesEndRef": {
      "file": "omk-frontend/components/education/TeacherBeeChat.tsx",
      "line": 26,
      "type": "function"
    },
    "omk-frontend/components/education/TeacherBeeChat.tsx::handleSend": {
      "file": "omk-frontend/components/education/TeacherBeeChat.tsx",
      "line": 51,
      "type": "function"
    },
    "omk-frontend/components/education/TeacherBeeChat.tsx::response": {
      "file": "omk-frontend/components/education/TeacherBeeChat.tsx",
      "line": 66,
      "type": "function"
    },
    "omk-frontend/components/education/TeacherBeeChat.tsx::utterance": {
      "file": "omk-frontend/components/education/TeacherBeeChat.tsx",
      "line": 79,
      "type": "function"
    },
    "omk-frontend/components/education/TeacherBeeChat.tsx::quickActions": {
      "file": "omk-frontend/components/education/TeacherBeeChat.tsx",
      "line": 98,
      "type": "function"
    },
    "omk-frontend/components/education/TeacherBeeChat.tsx::handleQuickAction": {
      "file": "omk-frontend/components/education/TeacherBeeChat.tsx",
      "line": 105,
      "type": "function"
    },
    "omk-frontend/components/web3/BalanceBubble.tsx::BalanceBubble": {
      "file": "omk-frontend/components/web3/BalanceBubble.tsx",
      "line": 12,
      "type": "function"
    },
    "omk-frontend/components/web3/BalanceBubble.tsx::router": {
      "file": "omk-frontend/components/web3/BalanceBubble.tsx",
      "line": 16,
      "type": "function"
    },
    "omk-frontend/components/web3/BalanceBubble.tsx::handleCopyAddress": {
      "file": "omk-frontend/components/web3/BalanceBubble.tsx",
      "line": 26,
      "type": "function"
    },
    "omk-frontend/components/web3/BalanceBubble.tsx::handleDisconnect": {
      "file": "omk-frontend/components/web3/BalanceBubble.tsx",
      "line": 34,
      "type": "function"
    },
    "omk-frontend/components/web3/BalanceBubble.tsx::handleBuyOMK": {
      "file": "omk-frontend/components/web3/BalanceBubble.tsx",
      "line": 40,
      "type": "function"
    },
    "omk-frontend/components/web3/BalanceBubble.tsx::handleSwap": {
      "file": "omk-frontend/components/web3/BalanceBubble.tsx",
      "line": 45,
      "type": "function"
    },
    "omk-frontend/components/web3/BalanceBubble.tsx::handleProfile": {
      "file": "omk-frontend/components/web3/BalanceBubble.tsx",
      "line": 50,
      "type": "function"
    },
    "omk-frontend/components/web3/BalanceBubble.tsx::handleSettings": {
      "file": "omk-frontend/components/web3/BalanceBubble.tsx",
      "line": 55,
      "type": "function"
    },
    "omk-frontend/components/web3/BalanceBubble.tsx::totalValue": {
      "file": "omk-frontend/components/web3/BalanceBubble.tsx",
      "line": 64,
      "type": "function"
    },
    "omk-frontend/components/web3/WalletConnectModal.tsx::WalletConnectModal": {
      "file": "omk-frontend/components/web3/WalletConnectModal.tsx",
      "line": 14,
      "type": "function"
    },
    "omk-frontend/components/web3/WalletConnectModal.tsx::connectWallet": {
      "file": "omk-frontend/components/web3/WalletConnectModal.tsx",
      "line": 22,
      "type": "function"
    },
    "omk-frontend/components/web3/WalletConnectModal.tsx::handleHasWallet": {
      "file": "omk-frontend/components/web3/WalletConnectModal.tsx",
      "line": 24,
      "type": "function"
    },
    "omk-frontend/components/web3/WalletConnectModal.tsx::handleNoWallet": {
      "file": "omk-frontend/components/web3/WalletConnectModal.tsx",
      "line": 28,
      "type": "function"
    },
    "omk-frontend/components/web3/WalletConnectModal.tsx::handleChainSelect": {
      "file": "omk-frontend/components/web3/WalletConnectModal.tsx",
      "line": 33,
      "type": "function"
    },
    "omk-frontend/components/web3/WalletConnectModal.tsx::handleConnect": {
      "file": "omk-frontend/components/web3/WalletConnectModal.tsx",
      "line": 38,
      "type": "function"
    },
    "omk-frontend/components/menu/FloatingMenu.tsx::FloatingMenu": {
      "file": "omk-frontend/components/menu/FloatingMenu.tsx",
      "line": 23,
      "type": "function"
    },
    "omk-frontend/components/menu/FloatingMenu.tsx::handleItemClick": {
      "file": "omk-frontend/components/menu/FloatingMenu.tsx",
      "line": 56,
      "type": "function"
    },
    "omk-frontend/components/interactive/ROICalculator.tsx::ROICalculator": {
      "file": "omk-frontend/components/interactive/ROICalculator.tsx",
      "line": 12,
      "type": "function"
    },
    "omk-frontend/components/interactive/ROICalculator.tsx::APY": {
      "file": "omk-frontend/components/interactive/ROICalculator.tsx",
      "line": 18,
      "type": "function"
    },
    "omk-frontend/components/interactive/ROICalculator.tsx::calculateROI": {
      "file": "omk-frontend/components/interactive/ROICalculator.tsx",
      "line": 20,
      "type": "function"
    },
    "omk-frontend/components/interactive/ROICalculator.tsx::principal": {
      "file": "omk-frontend/components/interactive/ROICalculator.tsx",
      "line": 21,
      "type": "function"
    },
    "omk-frontend/components/interactive/ROICalculator.tsx::years": {
      "file": "omk-frontend/components/interactive/ROICalculator.tsx",
      "line": 36,
      "type": "function"
    },
    "omk-frontend/components/interactive/ROICalculator.tsx::finalAmount": {
      "file": "omk-frontend/components/interactive/ROICalculator.tsx",
      "line": 37,
      "type": "function"
    },
    "omk-frontend/components/interactive/ROICalculator.tsx::profit": {
      "file": "omk-frontend/components/interactive/ROICalculator.tsx",
      "line": 38,
      "type": "function"
    },
    "omk-frontend/components/interactive/ROICalculator.tsx::roi": {
      "file": "omk-frontend/components/interactive/ROICalculator.tsx",
      "line": 39,
      "type": "function"
    },
    "omk-frontend/components/interactive/ROICalculator.tsx::result": {
      "file": "omk-frontend/components/interactive/ROICalculator.tsx",
      "line": 41,
      "type": "function"
    },
    "omk-frontend/app/kingdom/page.tsx::KingdomAdminPortal": {
      "file": "omk-frontend/app/kingdom/page.tsx",
      "line": 16,
      "type": "function"
    },
    "omk-frontend/app/kingdom/page.tsx::router": {
      "file": "omk-frontend/app/kingdom/page.tsx",
      "line": 17,
      "type": "function"
    },
    "omk-frontend/app/kingdom/page.tsx::checkAuth": {
      "file": "omk-frontend/app/kingdom/page.tsx",
      "line": 29,
      "type": "function"
    },
    "omk-frontend/app/kingdom/page.tsx::token": {
      "file": "omk-frontend/app/kingdom/page.tsx",
      "line": 397,
      "type": "function"
    },
    "omk-frontend/app/kingdom/page.tsx::isDev": {
      "file": "omk-frontend/app/kingdom/page.tsx",
      "line": 98,
      "type": "function"
    },
    "omk-frontend/app/kingdom/page.tsx::controller": {
      "file": "omk-frontend/app/kingdom/page.tsx",
      "line": 401,
      "type": "function"
    },
    "omk-frontend/app/kingdom/page.tsx::timeoutId": {
      "file": "omk-frontend/app/kingdom/page.tsx",
      "line": 402,
      "type": "function"
    },
    "omk-frontend/app/kingdom/page.tsx::response": {
      "file": "omk-frontend/app/kingdom/page.tsx",
      "line": 943,
      "type": "function"
    },
    "omk-frontend/app/kingdom/page.tsx::data": {
      "file": "omk-frontend/app/kingdom/page.tsx",
      "line": 123,
      "type": "function"
    },
    "omk-frontend/app/kingdom/page.tsx::loadSystemConfig": {
      "file": "omk-frontend/app/kingdom/page.tsx",
      "line": 116,
      "type": "function"
    },
    "omk-frontend/app/kingdom/page.tsx::loadDashboardStats": {
      "file": "omk-frontend/app/kingdom/page.tsx",
      "line": 132,
      "type": "function"
    },
    "omk-frontend/app/kingdom/page.tsx::headers": {
      "file": "omk-frontend/app/kingdom/page.tsx",
      "line": 398,
      "type": "function"
    },
    "omk-frontend/app/kingdom/page.tsx::hiveRes": {
      "file": "omk-frontend/app/kingdom/page.tsx",
      "line": 138,
      "type": "function"
    },
    "omk-frontend/app/kingdom/page.tsx::hiveData": {
      "file": "omk-frontend/app/kingdom/page.tsx",
      "line": 140,
      "type": "function"
    },
    "omk-frontend/app/kingdom/page.tsx::otcRes": {
      "file": "omk-frontend/app/kingdom/page.tsx",
      "line": 147,
      "type": "function"
    },
    "omk-frontend/app/kingdom/page.tsx::otcData": {
      "file": "omk-frontend/app/kingdom/page.tsx",
      "line": 149,
      "type": "function"
    },
    "omk-frontend/app/kingdom/page.tsx::handleLogout": {
      "file": "omk-frontend/app/kingdom/page.tsx",
      "line": 162,
      "type": "function"
    },
    "omk-frontend/app/kingdom/page.tsx::tabs": {
      "file": "omk-frontend/app/kingdom/page.tsx",
      "line": 180,
      "type": "function"
    },
    "omk-frontend/app/kingdom/page.tsx::categories": {
      "file": "omk-frontend/app/kingdom/page.tsx",
      "line": 196,
      "type": "function"
    },
    "omk-frontend/app/kingdom/page.tsx::categoryTabs": {
      "file": "omk-frontend/app/kingdom/page.tsx",
      "line": 281,
      "type": "function"
    },
    "omk-frontend/app/kingdom/page.tsx::isAnyCategoryActive": {
      "file": "omk-frontend/app/kingdom/page.tsx",
      "line": 282,
      "type": "function"
    },
    "omk-frontend/app/kingdom/page.tsx::Icon": {
      "file": "omk-frontend/app/kingdom/page.tsx",
      "line": 1120,
      "type": "function"
    },
    "omk-frontend/app/kingdom/page.tsx::OverviewTab": {
      "file": "omk-frontend/app/kingdom/page.tsx",
      "line": 389,
      "type": "function"
    },
    "omk-frontend/app/kingdom/page.tsx::fetchData": {
      "file": "omk-frontend/app/kingdom/page.tsx",
      "line": 395,
      "type": "function"
    },
    "omk-frontend/app/kingdom/page.tsx::interval": {
      "file": "omk-frontend/app/kingdom/page.tsx",
      "line": 437,
      "type": "function"
    },
    "omk-frontend/app/kingdom/page.tsx::SystemConfigTab": {
      "file": "omk-frontend/app/kingdom/page.tsx",
      "line": 576,
      "type": "function"
    },
    "omk-frontend/app/kingdom/page.tsx::handleSaveOTCPhase": {
      "file": "omk-frontend/app/kingdom/page.tsx",
      "line": 596,
      "type": "function"
    },
    "omk-frontend/app/kingdom/page.tsx::UsersTab": {
      "file": "omk-frontend/app/kingdom/page.tsx",
      "line": 968,
      "type": "function"
    },
    "omk-frontend/app/kingdom/page.tsx::UserManagement": {
      "file": "omk-frontend/app/kingdom/page.tsx",
      "line": 969,
      "type": "function"
    },
    "omk-frontend/app/kingdom/page.tsx::OTCManagementTab": {
      "file": "omk-frontend/app/kingdom/page.tsx",
      "line": 977,
      "type": "function"
    },
    "omk-frontend/app/kingdom/page.tsx::OTCRequestManager": {
      "file": "omk-frontend/app/kingdom/page.tsx",
      "line": 978,
      "type": "function"
    },
    "omk-frontend/app/kingdom/page.tsx::QueenDevelopmentTab": {
      "file": "omk-frontend/app/kingdom/page.tsx",
      "line": 987,
      "type": "function"
    },
    "omk-frontend/app/kingdom/page.tsx::QueenDevelopmentHub": {
      "file": "omk-frontend/app/kingdom/page.tsx",
      "line": 988,
      "type": "function"
    },
    "omk-frontend/app/kingdom/page.tsx::ClaudeAnalysisTab": {
      "file": "omk-frontend/app/kingdom/page.tsx",
      "line": 996,
      "type": "function"
    },
    "omk-frontend/app/kingdom/page.tsx::ClaudeSystemAnalysis": {
      "file": "omk-frontend/app/kingdom/page.tsx",
      "line": 997,
      "type": "function"
    },
    "omk-frontend/app/kingdom/page.tsx::DataPipelineManager": {
      "file": "omk-frontend/app/kingdom/page.tsx",
      "line": 1041,
      "type": "function"
    },
    "omk-frontend/app/kingdom/page.tsx::ElasticSearchDashboard": {
      "file": "omk-frontend/app/kingdom/page.tsx",
      "line": 1050,
      "type": "function"
    },
    "omk-frontend/app/kingdom/page.tsx::BigQueryAnalytics": {
      "file": "omk-frontend/app/kingdom/page.tsx",
      "line": 1059,
      "type": "function"
    },
    "omk-frontend/app/kingdom/page.tsx::HiveDashboardTab": {
      "file": "omk-frontend/app/kingdom/page.tsx",
      "line": 1008,
      "type": "function"
    },
    "omk-frontend/app/kingdom/page.tsx::HiveIntelligence": {
      "file": "omk-frontend/app/kingdom/page.tsx",
      "line": 1009,
      "type": "function"
    },
    "omk-frontend/app/kingdom/page.tsx::AnalyticsTab": {
      "file": "omk-frontend/app/kingdom/page.tsx",
      "line": 1024,
      "type": "function"
    },
    "omk-frontend/app/kingdom/page.tsx::EnhancedAnalytics": {
      "file": "omk-frontend/app/kingdom/page.tsx",
      "line": 1025,
      "type": "function"
    },
    "omk-frontend/app/kingdom/page.tsx::DataPipelineTab": {
      "file": "omk-frontend/app/kingdom/page.tsx",
      "line": 1040,
      "type": "function"
    },
    "omk-frontend/app/kingdom/page.tsx::ElasticSearchTab": {
      "file": "omk-frontend/app/kingdom/page.tsx",
      "line": 1049,
      "type": "function"
    },
    "omk-frontend/app/kingdom/page.tsx::BigQueryTab": {
      "file": "omk-frontend/app/kingdom/page.tsx",
      "line": 1058,
      "type": "function"
    },
    "omk-frontend/app/kingdom/page.tsx::ContractsTab": {
      "file": "omk-frontend/app/kingdom/page.tsx",
      "line": 1067,
      "type": "function"
    },
    "omk-frontend/app/kingdom/page.tsx::StatCard": {
      "file": "omk-frontend/app/kingdom/page.tsx",
      "line": 1083,
      "type": "function"
    },
    "omk-frontend/app/kingdom/page.tsx::colors": {
      "file": "omk-frontend/app/kingdom/page.tsx",
      "line": 1084,
      "type": "function"
    },
    "omk-frontend/app/kingdom/page.tsx::QuickAction": {
      "file": "omk-frontend/app/kingdom/page.tsx",
      "line": 1103,
      "type": "function"
    },
    "omk-frontend/app/kingdom/page.tsx::HealthItem": {
      "file": "omk-frontend/app/kingdom/page.tsx",
      "line": 1112,
      "type": "function"
    },
    "omk-frontend/app/kingdom/page.tsx::statusConfig": {
      "file": "omk-frontend/app/kingdom/page.tsx",
      "line": 1113,
      "type": "function"
    },
    "omk-frontend/app/kingdom/page.tsx::config": {
      "file": "omk-frontend/app/kingdom/page.tsx",
      "line": 1119,
      "type": "function"
    },
    "omk-frontend/app/kingdom/page.tsx::ToggleOption": {
      "file": "omk-frontend/app/kingdom/page.tsx",
      "line": 1133,
      "type": "function"
    },
    "omk-frontend/app/kingdom/page.tsx::handleToggle": {
      "file": "omk-frontend/app/kingdom/page.tsx",
      "line": 1141,
      "type": "function"
    },
    "omk-frontend/app/kingdom/page.tsx::newValue": {
      "file": "omk-frontend/app/kingdom/page.tsx",
      "line": 1144,
      "type": "function"
    },
    "omk-frontend/app/chat/page.tsx::ChatInterface": {
      "file": "omk-frontend/app/chat/page.tsx",
      "line": 24,
      "type": "function"
    },
    "omk-frontend/app/chat/page.tsx::router": {
      "file": "omk-frontend/app/chat/page.tsx",
      "line": 25,
      "type": "function"
    },
    "omk-frontend/app/chat/page.tsx::messagesEndRef": {
      "file": "omk-frontend/app/chat/page.tsx",
      "line": 27,
      "type": "function"
    },
    "omk-frontend/app/chat/page.tsx::setTheme": {
      "file": "omk-frontend/app/chat/page.tsx",
      "line": 40,
      "type": "function"
    },
    "omk-frontend/app/chat/page.tsx::hasInitialized": {
      "file": "omk-frontend/app/chat/page.tsx",
      "line": 51,
      "type": "function"
    },
    "omk-frontend/app/chat/page.tsx::chatContainerRef": {
      "file": "omk-frontend/app/chat/page.tsx",
      "line": 52,
      "type": "function"
    },
    "omk-frontend/app/chat/page.tsx::connectedWalletsRef": {
      "file": "omk-frontend/app/chat/page.tsx",
      "line": 53,
      "type": "function"
    },
    "omk-frontend/app/chat/page.tsx::checkQueenConnection": {
      "file": "omk-frontend/app/chat/page.tsx",
      "line": 70,
      "type": "function"
    },
    "omk-frontend/app/chat/page.tsx::response": {
      "file": "omk-frontend/app/chat/page.tsx",
      "line": 1704,
      "type": "function"
    },
    "omk-frontend/app/chat/page.tsx::data": {
      "file": "omk-frontend/app/chat/page.tsx",
      "line": 1709,
      "type": "function"
    },
    "omk-frontend/app/chat/page.tsx::interval": {
      "file": "omk-frontend/app/chat/page.tsx",
      "line": 83,
      "type": "function"
    },
    "omk-frontend/app/chat/page.tsx::params": {
      "file": "omk-frontend/app/chat/page.tsx",
      "line": 89,
      "type": "function"
    },
    "omk-frontend/app/chat/page.tsx::view": {
      "file": "omk-frontend/app/chat/page.tsx",
      "line": 90,
      "type": "function"
    },
    "omk-frontend/app/chat/page.tsx::handleChatMessage": {
      "file": "omk-frontend/app/chat/page.tsx",
      "line": 113,
      "type": "function"
    },
    "omk-frontend/app/chat/page.tsx::addMessage": {
      "file": "omk-frontend/app/chat/page.tsx",
      "line": 165,
      "type": "function"
    },
    "omk-frontend/app/chat/page.tsx::newMessage": {
      "file": "omk-frontend/app/chat/page.tsx",
      "line": 166,
      "type": "function"
    },
    "omk-frontend/app/chat/page.tsx::scrollToBottom": {
      "file": "omk-frontend/app/chat/page.tsx",
      "line": 177,
      "type": "function"
    },
    "omk-frontend/app/chat/page.tsx::container": {
      "file": "omk-frontend/app/chat/page.tsx",
      "line": 199,
      "type": "function"
    },
    "omk-frontend/app/chat/page.tsx::handleScroll": {
      "file": "omk-frontend/app/chat/page.tsx",
      "line": 202,
      "type": "function"
    },
    "omk-frontend/app/chat/page.tsx::isNearBottom": {
      "file": "omk-frontend/app/chat/page.tsx",
      "line": 204,
      "type": "function"
    },
    "omk-frontend/app/chat/page.tsx::handleThemeSelect": {
      "file": "omk-frontend/app/chat/page.tsx",
      "line": 212,
      "type": "function"
    },
    "omk-frontend/app/chat/page.tsx::res": {
      "file": "omk-frontend/app/chat/page.tsx",
      "line": 320,
      "type": "function"
    },
    "omk-frontend/app/chat/page.tsx::handleSend": {
      "file": "omk-frontend/app/chat/page.tsx",
      "line": 232,
      "type": "function"
    },
    "omk-frontend/app/chat/page.tsx::userInput": {
      "file": "omk-frontend/app/chat/page.tsx",
      "line": 236,
      "type": "function"
    },
    "omk-frontend/app/chat/page.tsx::actionButtons": {
      "file": "omk-frontend/app/chat/page.tsx",
      "line": 276,
      "type": "function"
    },
    "omk-frontend/app/chat/page.tsx::handleEmailLoginFlow": {
      "file": "omk-frontend/app/chat/page.tsx",
      "line": 296,
      "type": "function"
    },
    "omk-frontend/app/chat/page.tsx::emailRegex": {
      "file": "omk-frontend/app/chat/page.tsx",
      "line": 347,
      "type": "function"
    },
    "omk-frontend/app/chat/page.tsx::handleEmailSignupFlow": {
      "file": "omk-frontend/app/chat/page.tsx",
      "line": 343,
      "type": "function"
    },
    "omk-frontend/app/chat/page.tsx::handleOptionClick": {
      "file": "omk-frontend/app/chat/page.tsx",
      "line": 423,
      "type": "function"
    },
    "omk-frontend/app/chat/page.tsx::otcPhase": {
      "file": "omk-frontend/app/chat/page.tsx",
      "line": 462,
      "type": "function"
    },
    "omk-frontend/app/chat/page.tsx::tgeDate": {
      "file": "omk-frontend/app/chat/page.tsx",
      "line": 468,
      "type": "function"
    },
    "omk-frontend/app/chat/page.tsx::tgeDateFormatted": {
      "file": "omk-frontend/app/chat/page.tsx",
      "line": 469,
      "type": "function"
    },
    "omk-frontend/app/chat/page.tsx::trackConversion": {
      "file": "omk-frontend/app/chat/page.tsx",
      "line": 566,
      "type": "function"
    },
    "omk-frontend/app/chat/page.tsx::handleMenuClick": {
      "file": "omk-frontend/app/chat/page.tsx",
      "line": 581,
      "type": "function"
    },
    "omk-frontend/app/chat/page.tsx::formData": {
      "file": "omk-frontend/app/chat/page.tsx",
      "line": 1698,
      "type": "function"
    },
    "omk-frontend/app/swap/page.tsx::SwapPage": {
      "file": "omk-frontend/app/swap/page.tsx",
      "line": 18,
      "type": "function"
    },
    "omk-frontend/app/swap/page.tsx::router": {
      "file": "omk-frontend/app/swap/page.tsx",
      "line": 20,
      "type": "function"
    },
    "omk-frontend/app/swap/page.tsx::from": {
      "file": "omk-frontend/app/swap/page.tsx",
      "line": 52,
      "type": "function"
    },
    "omk-frontend/app/swap/page.tsx::rate": {
      "file": "omk-frontend/app/swap/page.tsx",
      "line": 53,
      "type": "function"
    },
    "omk-frontend/app/swap/page.tsx::to": {
      "file": "omk-frontend/app/swap/page.tsx",
      "line": 54,
      "type": "function"
    },
    "omk-frontend/app/swap/page.tsx::handleSwap": {
      "file": "omk-frontend/app/swap/page.tsx",
      "line": 61,
      "type": "function"
    },
    "omk-frontend/app/swap/page.tsx::temp": {
      "file": "omk-frontend/app/swap/page.tsx",
      "line": 63,
      "type": "function"
    },
    "omk-frontend/app/swap/page.tsx::handleMaxClick": {
      "file": "omk-frontend/app/swap/page.tsx",
      "line": 69,
      "type": "function"
    },
    "omk-frontend/app/swap/page.tsx::handleSwapTokens": {
      "file": "omk-frontend/app/swap/page.tsx",
      "line": 73,
      "type": "function"
    },
    "omk-frontend/app/swap/page.tsx::priceImpact": {
      "file": "omk-frontend/app/swap/page.tsx",
      "line": 81,
      "type": "function"
    },
    "omk-frontend/app/swap/page.tsx::networkFee": {
      "file": "omk-frontend/app/swap/page.tsx",
      "line": 82,
      "type": "function"
    },
    "omk-frontend/app/swap/page.tsx::minReceived": {
      "file": "omk-frontend/app/swap/page.tsx",
      "line": 83,
      "type": "function"
    },
    "omk-frontend/app/dashboard/page_old_backup.tsx::DashboardPage": {
      "file": "omk-frontend/app/dashboard/page_old_backup.tsx",
      "line": 17,
      "type": "function"
    },
    "omk-frontend/app/dashboard/page_old_backup.tsx::router": {
      "file": "omk-frontend/app/dashboard/page_old_backup.tsx",
      "line": 19,
      "type": "function"
    },
    "omk-frontend/app/dashboard/page.tsx::DashboardPage": {
      "file": "omk-frontend/app/dashboard/page.tsx",
      "line": 20,
      "type": "function"
    },
    "omk-frontend/app/dashboard/page.tsx::router": {
      "file": "omk-frontend/app/dashboard/page.tsx",
      "line": 22,
      "type": "function"
    },
    "omk-frontend/app/invest/page_old_backup.tsx::InvestPage": {
      "file": "omk-frontend/app/invest/page_old_backup.tsx",
      "line": 25,
      "type": "function"
    },
    "omk-frontend/app/invest/page_old_backup.tsx::router": {
      "file": "omk-frontend/app/invest/page_old_backup.tsx",
      "line": 27,
      "type": "function"
    },
    "omk-frontend/app/invest/page_old_backup.tsx::filteredProperties": {
      "file": "omk-frontend/app/invest/page_old_backup.tsx",
      "line": 100,
      "type": "function"
    },
    "omk-frontend/app/invest/page.tsx::InvestPage": {
      "file": "omk-frontend/app/invest/page.tsx",
      "line": 20,
      "type": "function"
    },
    "omk-frontend/app/invest/page.tsx::router": {
      "file": "omk-frontend/app/invest/page.tsx",
      "line": 22,
      "type": "function"
    },
    "omk-frontend/app/(auth)/connect/page.tsx::ConnectPage": {
      "file": "omk-frontend/app/(auth)/connect/page.tsx",
      "line": 8,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/ClaudeSystemAnalysis.tsx::BACKEND_URL": {
      "file": "omk-frontend/app/kingdom/components/ClaudeSystemAnalysis.tsx",
      "line": 11,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/ClaudeSystemAnalysis.tsx::ClaudeSystemAnalysis": {
      "file": "omk-frontend/app/kingdom/components/ClaudeSystemAnalysis.tsx",
      "line": 43,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/ClaudeSystemAnalysis.tsx::fetchAnalysisData": {
      "file": "omk-frontend/app/kingdom/components/ClaudeSystemAnalysis.tsx",
      "line": 53,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/ClaudeSystemAnalysis.tsx::token": {
      "file": "omk-frontend/app/kingdom/components/ClaudeSystemAnalysis.tsx",
      "line": 79,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/ClaudeSystemAnalysis.tsx::response": {
      "file": "omk-frontend/app/kingdom/components/ClaudeSystemAnalysis.tsx",
      "line": 80,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/ClaudeSystemAnalysis.tsx::data": {
      "file": "omk-frontend/app/kingdom/components/ClaudeSystemAnalysis.tsx",
      "line": 64,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/ClaudeSystemAnalysis.tsx::requestImplementation": {
      "file": "omk-frontend/app/kingdom/components/ClaudeSystemAnalysis.tsx",
      "line": 76,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/ClaudeSystemAnalysis.tsx::result": {
      "file": "omk-frontend/app/kingdom/components/ClaudeSystemAnalysis.tsx",
      "line": 93,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/ClaudeSystemAnalysis.tsx::getPriorityColor": {
      "file": "omk-frontend/app/kingdom/components/ClaudeSystemAnalysis.tsx",
      "line": 109,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/ClaudeSystemAnalysis.tsx::getStatusIcon": {
      "file": "omk-frontend/app/kingdom/components/ClaudeSystemAnalysis.tsx",
      "line": 119,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/ClaudeSystemAnalysis.tsx::color": {
      "file": "omk-frontend/app/kingdom/components/ClaudeSystemAnalysis.tsx",
      "line": 314,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/DataPipelineManager.tsx::BACKEND_URL": {
      "file": "omk-frontend/app/kingdom/components/DataPipelineManager.tsx",
      "line": 11,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/DataPipelineManager.tsx::DataPipelineManager": {
      "file": "omk-frontend/app/kingdom/components/DataPipelineManager.tsx",
      "line": 34,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/DataPipelineManager.tsx::interval": {
      "file": "omk-frontend/app/kingdom/components/DataPipelineManager.tsx",
      "line": 44,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/DataPipelineManager.tsx::loadPipelineStatus": {
      "file": "omk-frontend/app/kingdom/components/DataPipelineManager.tsx",
      "line": 48,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/DataPipelineManager.tsx::token": {
      "file": "omk-frontend/app/kingdom/components/DataPipelineManager.tsx",
      "line": 104,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/DataPipelineManager.tsx::response": {
      "file": "omk-frontend/app/kingdom/components/DataPipelineManager.tsx",
      "line": 105,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/DataPipelineManager.tsx::data": {
      "file": "omk-frontend/app/kingdom/components/DataPipelineManager.tsx",
      "line": 116,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/DataPipelineManager.tsx::runPipeline": {
      "file": "omk-frontend/app/kingdom/components/DataPipelineManager.tsx",
      "line": 66,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/DataPipelineManager.tsx::schedulePipeline": {
      "file": "omk-frontend/app/kingdom/components/DataPipelineManager.tsx",
      "line": 100,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/QueenDevelopmentHub.tsx::BACKEND_URL": {
      "file": "omk-frontend/app/kingdom/components/QueenDevelopmentHub.tsx",
      "line": 12,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/QueenDevelopmentHub.tsx::QueenDevelopmentHub": {
      "file": "omk-frontend/app/kingdom/components/QueenDevelopmentHub.tsx",
      "line": 35,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/QueenDevelopmentHub.tsx::messagesEndRef": {
      "file": "omk-frontend/app/kingdom/components/QueenDevelopmentHub.tsx",
      "line": 43,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/QueenDevelopmentHub.tsx::loadConversationHistory": {
      "file": "omk-frontend/app/kingdom/components/QueenDevelopmentHub.tsx",
      "line": 54,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/QueenDevelopmentHub.tsx::token": {
      "file": "omk-frontend/app/kingdom/components/QueenDevelopmentHub.tsx",
      "line": 697,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/QueenDevelopmentHub.tsx::response": {
      "file": "omk-frontend/app/kingdom/components/QueenDevelopmentHub.tsx",
      "line": 698,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/QueenDevelopmentHub.tsx::data": {
      "file": "omk-frontend/app/kingdom/components/QueenDevelopmentHub.tsx",
      "line": 710,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/QueenDevelopmentHub.tsx::loadProposals": {
      "file": "omk-frontend/app/kingdom/components/QueenDevelopmentHub.tsx",
      "line": 76,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/QueenDevelopmentHub.tsx::sendMessage": {
      "file": "omk-frontend/app/kingdom/components/QueenDevelopmentHub.tsx",
      "line": 98,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/QueenDevelopmentHub.tsx::userMessage": {
      "file": "omk-frontend/app/kingdom/components/QueenDevelopmentHub.tsx",
      "line": 101,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/QueenDevelopmentHub.tsx::analyzeSystem": {
      "file": "omk-frontend/app/kingdom/components/QueenDevelopmentHub.tsx",
      "line": 155,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/QueenDevelopmentHub.tsx::ChatInterface": {
      "file": "omk-frontend/app/kingdom/components/QueenDevelopmentHub.tsx",
      "line": 308,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/QueenDevelopmentHub.tsx::MessageBubble": {
      "file": "omk-frontend/app/kingdom/components/QueenDevelopmentHub.tsx",
      "line": 362,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/QueenDevelopmentHub.tsx::isUser": {
      "file": "omk-frontend/app/kingdom/components/QueenDevelopmentHub.tsx",
      "line": 363,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/QueenDevelopmentHub.tsx::ProposalsInterface": {
      "file": "omk-frontend/app/kingdom/components/QueenDevelopmentHub.tsx",
      "line": 398,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/QueenDevelopmentHub.tsx::ProposalCard": {
      "file": "omk-frontend/app/kingdom/components/QueenDevelopmentHub.tsx",
      "line": 434,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/QueenDevelopmentHub.tsx::config": {
      "file": "omk-frontend/app/kingdom/components/QueenDevelopmentHub.tsx",
      "line": 446,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/QueenDevelopmentHub.tsx::Icon": {
      "file": "omk-frontend/app/kingdom/components/QueenDevelopmentHub.tsx",
      "line": 447,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/QueenDevelopmentHub.tsx::ProposalDetail": {
      "file": "omk-frontend/app/kingdom/components/QueenDevelopmentHub.tsx",
      "line": 480,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/QueenDevelopmentHub.tsx::handleAction": {
      "file": "omk-frontend/app/kingdom/components/QueenDevelopmentHub.tsx",
      "line": 484,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/QueenDevelopmentHub.tsx::url": {
      "file": "omk-frontend/app/kingdom/components/QueenDevelopmentHub.tsx",
      "line": 490,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/QueenDevelopmentHub.tsx::MetadataCard": {
      "file": "omk-frontend/app/kingdom/components/QueenDevelopmentHub.tsx",
      "line": 638,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/QueenDevelopmentHub.tsx::ActionButton": {
      "file": "omk-frontend/app/kingdom/components/QueenDevelopmentHub.tsx",
      "line": 647,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/QueenDevelopmentHub.tsx::BugFixingMode": {
      "file": "omk-frontend/app/kingdom/components/QueenDevelopmentHub.tsx",
      "line": 673,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/QueenDevelopmentHub.tsx::AutonomousFixer": {
      "file": "omk-frontend/app/kingdom/components/QueenDevelopmentHub.tsx",
      "line": 674,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/QueenDevelopmentHub.tsx::DatabaseQueriesMode": {
      "file": "omk-frontend/app/kingdom/components/QueenDevelopmentHub.tsx",
      "line": 680,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/QueenDevelopmentHub.tsx::EXAMPLE_QUERIES": {
      "file": "omk-frontend/app/kingdom/components/QueenDevelopmentHub.tsx",
      "line": 685,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/QueenDevelopmentHub.tsx::executeQuery": {
      "file": "omk-frontend/app/kingdom/components/QueenDevelopmentHub.tsx",
      "line": 694,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/ElasticSearchDashboard.tsx::BACKEND_URL": {
      "file": "omk-frontend/app/kingdom/components/ElasticSearchDashboard.tsx",
      "line": 11,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/ElasticSearchDashboard.tsx::ElasticSearchDashboard": {
      "file": "omk-frontend/app/kingdom/components/ElasticSearchDashboard.tsx",
      "line": 29,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/ElasticSearchDashboard.tsx::loadRecentActivities": {
      "file": "omk-frontend/app/kingdom/components/ElasticSearchDashboard.tsx",
      "line": 42,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/ElasticSearchDashboard.tsx::token": {
      "file": "omk-frontend/app/kingdom/components/ElasticSearchDashboard.tsx",
      "line": 69,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/ElasticSearchDashboard.tsx::response": {
      "file": "omk-frontend/app/kingdom/components/ElasticSearchDashboard.tsx",
      "line": 76,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/ElasticSearchDashboard.tsx::data": {
      "file": "omk-frontend/app/kingdom/components/ElasticSearchDashboard.tsx",
      "line": 91,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/ElasticSearchDashboard.tsx::handleSearch": {
      "file": "omk-frontend/app/kingdom/components/ElasticSearchDashboard.tsx",
      "line": 60,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/ElasticSearchDashboard.tsx::endpoint": {
      "file": "omk-frontend/app/kingdom/components/ElasticSearchDashboard.tsx",
      "line": 70,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/ElasticSearchDashboard.tsx::filters": {
      "file": "omk-frontend/app/kingdom/components/ElasticSearchDashboard.tsx",
      "line": 74,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/ElasticSearchDashboard.tsx::handleKeyPress": {
      "file": "omk-frontend/app/kingdom/components/ElasticSearchDashboard.tsx",
      "line": 108,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/EnhancedAnalytics.tsx::BACKEND_URL": {
      "file": "omk-frontend/app/kingdom/components/EnhancedAnalytics.tsx",
      "line": 11,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/EnhancedAnalytics.tsx::EnhancedAnalytics": {
      "file": "omk-frontend/app/kingdom/components/EnhancedAnalytics.tsx",
      "line": 13,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/EnhancedAnalytics.tsx::handleVisibilityChange": {
      "file": "omk-frontend/app/kingdom/components/EnhancedAnalytics.tsx",
      "line": 23,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/EnhancedAnalytics.tsx::interval": {
      "file": "omk-frontend/app/kingdom/components/EnhancedAnalytics.tsx",
      "line": 34,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/EnhancedAnalytics.tsx::fetchAnalytics": {
      "file": "omk-frontend/app/kingdom/components/EnhancedAnalytics.tsx",
      "line": 42,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/EnhancedAnalytics.tsx::token": {
      "file": "omk-frontend/app/kingdom/components/EnhancedAnalytics.tsx",
      "line": 44,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/EnhancedAnalytics.tsx::headers": {
      "file": "omk-frontend/app/kingdom/components/EnhancedAnalytics.tsx",
      "line": 45,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/EnhancedAnalytics.tsx::MetricCard": {
      "file": "omk-frontend/app/kingdom/components/EnhancedAnalytics.tsx",
      "line": 176,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/EnhancedAnalytics.tsx::RevenueOverview": {
      "file": "omk-frontend/app/kingdom/components/EnhancedAnalytics.tsx",
      "line": 200,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/EnhancedAnalytics.tsx::UserGrowth": {
      "file": "omk-frontend/app/kingdom/components/EnhancedAnalytics.tsx",
      "line": 285,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/EnhancedAnalytics.tsx::TransactionActivity": {
      "file": "omk-frontend/app/kingdom/components/EnhancedAnalytics.tsx",
      "line": 318,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/EnhancedAnalytics.tsx::OTCPipeline": {
      "file": "omk-frontend/app/kingdom/components/EnhancedAnalytics.tsx",
      "line": 356,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/EnhancedAnalytics.tsx::pending": {
      "file": "omk-frontend/app/kingdom/components/EnhancedAnalytics.tsx",
      "line": 357,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/EnhancedAnalytics.tsx::approved": {
      "file": "omk-frontend/app/kingdom/components/EnhancedAnalytics.tsx",
      "line": 358,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/EnhancedAnalytics.tsx::rejected": {
      "file": "omk-frontend/app/kingdom/components/EnhancedAnalytics.tsx",
      "line": 359,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/EnhancedAnalytics.tsx::total": {
      "file": "omk-frontend/app/kingdom/components/EnhancedAnalytics.tsx",
      "line": 360,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/ContractDeployer_OLD_BACKUP.tsx::ContractDeployer": {
      "file": "omk-frontend/app/kingdom/components/ContractDeployer_OLD_BACKUP.tsx",
      "line": 38,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/ContractDeployer_OLD_BACKUP.tsx::loadContracts": {
      "file": "omk-frontend/app/kingdom/components/ContractDeployer_OLD_BACKUP.tsx",
      "line": 58,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/ContractDeployer_OLD_BACKUP.tsx::response": {
      "file": "omk-frontend/app/kingdom/components/ContractDeployer_OLD_BACKUP.tsx",
      "line": 235,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/ContractDeployer_OLD_BACKUP.tsx::data": {
      "file": "omk-frontend/app/kingdom/components/ContractDeployer_OLD_BACKUP.tsx",
      "line": 247,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/ContractDeployer_OLD_BACKUP.tsx::loadDeployments": {
      "file": "omk-frontend/app/kingdom/components/ContractDeployer_OLD_BACKUP.tsx",
      "line": 75,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/ContractDeployer_OLD_BACKUP.tsx::compileAllContracts": {
      "file": "omk-frontend/app/kingdom/components/ContractDeployer_OLD_BACKUP.tsx",
      "line": 89,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/ContractDeployer_OLD_BACKUP.tsx::prepareDeployment": {
      "file": "omk-frontend/app/kingdom/components/ContractDeployer_OLD_BACKUP.tsx",
      "line": 115,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/ContractDeployer_OLD_BACKUP.tsx::executePrepareDeployment": {
      "file": "omk-frontend/app/kingdom/components/ContractDeployer_OLD_BACKUP.tsx",
      "line": 120,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/ContractDeployer_OLD_BACKUP.tsx::executeDeployment": {
      "file": "omk-frontend/app/kingdom/components/ContractDeployer_OLD_BACKUP.tsx",
      "line": 154,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/ContractDeployer_OLD_BACKUP.tsx::confirmed": {
      "file": "omk-frontend/app/kingdom/components/ContractDeployer_OLD_BACKUP.tsx",
      "line": 155,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/ContractDeployer_OLD_BACKUP.tsx::cancelDeployment": {
      "file": "omk-frontend/app/kingdom/components/ContractDeployer_OLD_BACKUP.tsx",
      "line": 192,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/ContractDeployer_OLD_BACKUP.tsx::toggleContractSelection": {
      "file": "omk-frontend/app/kingdom/components/ContractDeployer_OLD_BACKUP.tsx",
      "line": 210,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/ContractDeployer_OLD_BACKUP.tsx::newSelection": {
      "file": "omk-frontend/app/kingdom/components/ContractDeployer_OLD_BACKUP.tsx",
      "line": 211,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/ContractDeployer_OLD_BACKUP.tsx::batchPrepareDeployment": {
      "file": "omk-frontend/app/kingdom/components/ContractDeployer_OLD_BACKUP.tsx",
      "line": 220,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/ContractDeployer_OLD_BACKUP.tsx::contractsArray": {
      "file": "omk-frontend/app/kingdom/components/ContractDeployer_OLD_BACKUP.tsx",
      "line": 227,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/ContractDeployer_OLD_BACKUP.tsx::copyToClipboard": {
      "file": "omk-frontend/app/kingdom/components/ContractDeployer_OLD_BACKUP.tsx",
      "line": 260,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/ContractDeployer_OLD_BACKUP.tsx::getStatusBadge": {
      "file": "omk-frontend/app/kingdom/components/ContractDeployer_OLD_BACKUP.tsx",
      "line": 265,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/ContractDeployer_OLD_BACKUP.tsx::badge": {
      "file": "omk-frontend/app/kingdom/components/ContractDeployer_OLD_BACKUP.tsx",
      "line": 275,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/ContractDeployer_OLD_BACKUP.tsx::Icon": {
      "file": "omk-frontend/app/kingdom/components/ContractDeployer_OLD_BACKUP.tsx",
      "line": 276,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/BigQueryAnalytics.tsx::BACKEND_URL": {
      "file": "omk-frontend/app/kingdom/components/BigQueryAnalytics.tsx",
      "line": 15,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/BigQueryAnalytics.tsx::BigQueryAnalytics": {
      "file": "omk-frontend/app/kingdom/components/BigQueryAnalytics.tsx",
      "line": 112,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/BigQueryAnalytics.tsx::executeQuery": {
      "file": "omk-frontend/app/kingdom/components/BigQueryAnalytics.tsx",
      "line": 119,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/BigQueryAnalytics.tsx::token": {
      "file": "omk-frontend/app/kingdom/components/BigQueryAnalytics.tsx",
      "line": 123,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/BigQueryAnalytics.tsx::response": {
      "file": "omk-frontend/app/kingdom/components/BigQueryAnalytics.tsx",
      "line": 124,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/BigQueryAnalytics.tsx::data": {
      "file": "omk-frontend/app/kingdom/components/BigQueryAnalytics.tsx",
      "line": 135,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/BigQueryAnalytics.tsx::handlePrebuiltQuery": {
      "file": "omk-frontend/app/kingdom/components/BigQueryAnalytics.tsx",
      "line": 151,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/BigQueryAnalytics.tsx::handleCustomQuery": {
      "file": "omk-frontend/app/kingdom/components/BigQueryAnalytics.tsx",
      "line": 157,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/BigQueryAnalytics.tsx::exportToCSV": {
      "file": "omk-frontend/app/kingdom/components/BigQueryAnalytics.tsx",
      "line": 165,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/BigQueryAnalytics.tsx::csv": {
      "file": "omk-frontend/app/kingdom/components/BigQueryAnalytics.tsx",
      "line": 168,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/BigQueryAnalytics.tsx::blob": {
      "file": "omk-frontend/app/kingdom/components/BigQueryAnalytics.tsx",
      "line": 173,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/BigQueryAnalytics.tsx::url": {
      "file": "omk-frontend/app/kingdom/components/BigQueryAnalytics.tsx",
      "line": 174,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/BigQueryAnalytics.tsx::a": {
      "file": "omk-frontend/app/kingdom/components/BigQueryAnalytics.tsx",
      "line": 175,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/BigQueryAnalytics.tsx::getChartData": {
      "file": "omk-frontend/app/kingdom/components/BigQueryAnalytics.tsx",
      "line": 184,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/BigQueryAnalytics.tsx::Icon": {
      "file": "omk-frontend/app/kingdom/components/BigQueryAnalytics.tsx",
      "line": 210,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/ContractDeployer.tsx::ContractDeployer": {
      "file": "omk-frontend/app/kingdom/components/ContractDeployer.tsx",
      "line": 56,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/ContractDeployer.tsx::loadContracts": {
      "file": "omk-frontend/app/kingdom/components/ContractDeployer.tsx",
      "line": 97,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/ContractDeployer.tsx::token": {
      "file": "omk-frontend/app/kingdom/components/ContractDeployer.tsx",
      "line": 173,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/ContractDeployer.tsx::response": {
      "file": "omk-frontend/app/kingdom/components/ContractDeployer.tsx",
      "line": 260,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/ContractDeployer.tsx::data": {
      "file": "omk-frontend/app/kingdom/components/ContractDeployer.tsx",
      "line": 276,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/ContractDeployer.tsx::loadDeployments": {
      "file": "omk-frontend/app/kingdom/components/ContractDeployer.tsx",
      "line": 124,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/ContractDeployer.tsx::compileAllContracts": {
      "file": "omk-frontend/app/kingdom/components/ContractDeployer.tsx",
      "line": 138,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/ContractDeployer.tsx::loadContractArtifact": {
      "file": "omk-frontend/app/kingdom/components/ContractDeployer.tsx",
      "line": 171,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/ContractDeployer.tsx::prepareDeployment": {
      "file": "omk-frontend/app/kingdom/components/ContractDeployer.tsx",
      "line": 198,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/ContractDeployer.tsx::artifact": {
      "file": "omk-frontend/app/kingdom/components/ContractDeployer.tsx",
      "line": 211,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/ContractDeployer.tsx::executeDeployment": {
      "file": "omk-frontend/app/kingdom/components/ContractDeployer.tsx",
      "line": 220,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/ContractDeployer.tsx::targetChainId": {
      "file": "omk-frontend/app/kingdom/components/ContractDeployer.tsx",
      "line": 224,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/ContractDeployer.tsx::handleDeploymentSuccess": {
      "file": "omk-frontend/app/kingdom/components/ContractDeployer.tsx",
      "line": 255,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/ContractDeployer.tsx::handleConnectWallet": {
      "file": "omk-frontend/app/kingdom/components/ContractDeployer.tsx",
      "line": 292,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/ContractDeployer.tsx::injected": {
      "file": "omk-frontend/app/kingdom/components/ContractDeployer.tsx",
      "line": 293,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/ContractDeployer.tsx::getNetworkName": {
      "file": "omk-frontend/app/kingdom/components/ContractDeployer.tsx",
      "line": 301,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/ContractDeployer.tsx::getStatusBadge": {
      "file": "omk-frontend/app/kingdom/components/ContractDeployer.tsx",
      "line": 310,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/ContractDeployer.tsx::badge": {
      "file": "omk-frontend/app/kingdom/components/ContractDeployer.tsx",
      "line": 320,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/ContractDeployer.tsx::Icon": {
      "file": "omk-frontend/app/kingdom/components/ContractDeployer.tsx",
      "line": 321,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/ContractDeployer.tsx::newSelection": {
      "file": "omk-frontend/app/kingdom/components/ContractDeployer.tsx",
      "line": 518,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/UserManagement.tsx::BACKEND_URL": {
      "file": "omk-frontend/app/kingdom/components/UserManagement.tsx",
      "line": 11,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/UserManagement.tsx::UserManagement": {
      "file": "omk-frontend/app/kingdom/components/UserManagement.tsx",
      "line": 13,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/UserManagement.tsx::fetchUsers": {
      "file": "omk-frontend/app/kingdom/components/UserManagement.tsx",
      "line": 29,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/UserManagement.tsx::token": {
      "file": "omk-frontend/app/kingdom/components/UserManagement.tsx",
      "line": 292,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/UserManagement.tsx::response": {
      "file": "omk-frontend/app/kingdom/components/UserManagement.tsx",
      "line": 32,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/UserManagement.tsx::data": {
      "file": "omk-frontend/app/kingdom/components/UserManagement.tsx",
      "line": 40,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/UserManagement.tsx::filterUsers": {
      "file": "omk-frontend/app/kingdom/components/UserManagement.tsx",
      "line": 57,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/UserManagement.tsx::StatBox": {
      "file": "omk-frontend/app/kingdom/components/UserManagement.tsx",
      "line": 250,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/UserManagement.tsx::StatusBadge": {
      "file": "omk-frontend/app/kingdom/components/UserManagement.tsx",
      "line": 269,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/UserManagement.tsx::UserDetailModal": {
      "file": "omk-frontend/app/kingdom/components/UserManagement.tsx",
      "line": 285,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/UserManagement.tsx::handleAction": {
      "file": "omk-frontend/app/kingdom/components/UserManagement.tsx",
      "line": 289,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/TestnetUtilities.tsx::TestnetUtilities": {
      "file": "omk-frontend/app/kingdom/components/TestnetUtilities.tsx",
      "line": 14,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/TestnetUtilities.tsx::isOnSepolia": {
      "file": "omk-frontend/app/kingdom/components/TestnetUtilities.tsx",
      "line": 21,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/TestnetUtilities.tsx::handleConnectWallet": {
      "file": "omk-frontend/app/kingdom/components/TestnetUtilities.tsx",
      "line": 23,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/TestnetUtilities.tsx::injected": {
      "file": "omk-frontend/app/kingdom/components/TestnetUtilities.tsx",
      "line": 24,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/TestnetUtilities.tsx::handleSwitchToSepolia": {
      "file": "omk-frontend/app/kingdom/components/TestnetUtilities.tsx",
      "line": 33,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/TestnetUtilities.tsx::handleRequestFunds": {
      "file": "omk-frontend/app/kingdom/components/TestnetUtilities.tsx",
      "line": 48,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/TestnetUtilities.tsx::copyAddress": {
      "file": "omk-frontend/app/kingdom/components/TestnetUtilities.tsx",
      "line": 80,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/TestnetUtilities.tsx::faucets": {
      "file": "omk-frontend/app/kingdom/components/TestnetUtilities.tsx",
      "line": 87,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/QueenDevelopment.tsx::BACKEND_URL": {
      "file": "omk-frontend/app/kingdom/components/QueenDevelopment.tsx",
      "line": 12,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/QueenDevelopment.tsx::QueenDevelopment": {
      "file": "omk-frontend/app/kingdom/components/QueenDevelopment.tsx",
      "line": 35,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/QueenDevelopment.tsx::messagesEndRef": {
      "file": "omk-frontend/app/kingdom/components/QueenDevelopment.tsx",
      "line": 42,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/QueenDevelopment.tsx::loadConversationHistory": {
      "file": "omk-frontend/app/kingdom/components/QueenDevelopment.tsx",
      "line": 53,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/QueenDevelopment.tsx::token": {
      "file": "omk-frontend/app/kingdom/components/QueenDevelopment.tsx",
      "line": 445,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/QueenDevelopment.tsx::response": {
      "file": "omk-frontend/app/kingdom/components/QueenDevelopment.tsx",
      "line": 448,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/QueenDevelopment.tsx::data": {
      "file": "omk-frontend/app/kingdom/components/QueenDevelopment.tsx",
      "line": 453,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/QueenDevelopment.tsx::loadProposals": {
      "file": "omk-frontend/app/kingdom/components/QueenDevelopment.tsx",
      "line": 75,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/QueenDevelopment.tsx::sendMessage": {
      "file": "omk-frontend/app/kingdom/components/QueenDevelopment.tsx",
      "line": 97,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/QueenDevelopment.tsx::userMessage": {
      "file": "omk-frontend/app/kingdom/components/QueenDevelopment.tsx",
      "line": 100,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/QueenDevelopment.tsx::analyzeSystem": {
      "file": "omk-frontend/app/kingdom/components/QueenDevelopment.tsx",
      "line": 154,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/QueenDevelopment.tsx::ChatInterface": {
      "file": "omk-frontend/app/kingdom/components/QueenDevelopment.tsx",
      "line": 264,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/QueenDevelopment.tsx::MessageBubble": {
      "file": "omk-frontend/app/kingdom/components/QueenDevelopment.tsx",
      "line": 318,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/QueenDevelopment.tsx::isUser": {
      "file": "omk-frontend/app/kingdom/components/QueenDevelopment.tsx",
      "line": 319,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/QueenDevelopment.tsx::ProposalsInterface": {
      "file": "omk-frontend/app/kingdom/components/QueenDevelopment.tsx",
      "line": 354,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/QueenDevelopment.tsx::ProposalCard": {
      "file": "omk-frontend/app/kingdom/components/QueenDevelopment.tsx",
      "line": 390,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/QueenDevelopment.tsx::config": {
      "file": "omk-frontend/app/kingdom/components/QueenDevelopment.tsx",
      "line": 402,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/QueenDevelopment.tsx::Icon": {
      "file": "omk-frontend/app/kingdom/components/QueenDevelopment.tsx",
      "line": 403,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/QueenDevelopment.tsx::ProposalDetail": {
      "file": "omk-frontend/app/kingdom/components/QueenDevelopment.tsx",
      "line": 436,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/QueenDevelopment.tsx::handleAction": {
      "file": "omk-frontend/app/kingdom/components/QueenDevelopment.tsx",
      "line": 440,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/QueenDevelopment.tsx::url": {
      "file": "omk-frontend/app/kingdom/components/QueenDevelopment.tsx",
      "line": 446,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/QueenDevelopment.tsx::MetadataCard": {
      "file": "omk-frontend/app/kingdom/components/QueenDevelopment.tsx",
      "line": 594,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/QueenDevelopment.tsx::ActionButton": {
      "file": "omk-frontend/app/kingdom/components/QueenDevelopment.tsx",
      "line": 603,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/HiveIntelligence.tsx::BACKEND_URL": {
      "file": "omk-frontend/app/kingdom/components/HiveIntelligence.tsx",
      "line": 12,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/HiveIntelligence.tsx::HiveIntelligence": {
      "file": "omk-frontend/app/kingdom/components/HiveIntelligence.tsx",
      "line": 14,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/HiveIntelligence.tsx::fetchAllData": {
      "file": "omk-frontend/app/kingdom/components/HiveIntelligence.tsx",
      "line": 46,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/HiveIntelligence.tsx::token": {
      "file": "omk-frontend/app/kingdom/components/HiveIntelligence.tsx",
      "line": 48,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/HiveIntelligence.tsx::headers": {
      "file": "omk-frontend/app/kingdom/components/HiveIntelligence.tsx",
      "line": 49,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/HiveIntelligence.tsx::StatCard": {
      "file": "omk-frontend/app/kingdom/components/HiveIntelligence.tsx",
      "line": 181,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/HiveIntelligence.tsx::LiveActivityFeed": {
      "file": "omk-frontend/app/kingdom/components/HiveIntelligence.tsx",
      "line": 205,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/HiveIntelligence.tsx::MessageBusStats": {
      "file": "omk-frontend/app/kingdom/components/HiveIntelligence.tsx",
      "line": 244,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/HiveIntelligence.tsx::BeePerformanceGrid": {
      "file": "omk-frontend/app/kingdom/components/HiveIntelligence.tsx",
      "line": 313,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/HiveIntelligence.tsx::bees": {
      "file": "omk-frontend/app/kingdom/components/HiveIntelligence.tsx",
      "line": 314,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/HiveIntelligence.tsx::HiveBoardStats": {
      "file": "omk-frontend/app/kingdom/components/HiveIntelligence.tsx",
      "line": 378,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/OTCRequestManager.tsx::OTCRequestManager": {
      "file": "omk-frontend/app/kingdom/components/OTCRequestManager.tsx",
      "line": 20,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/OTCRequestManager.tsx::loadRequests": {
      "file": "omk-frontend/app/kingdom/components/OTCRequestManager.tsx",
      "line": 30,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/OTCRequestManager.tsx::token": {
      "file": "omk-frontend/app/kingdom/components/OTCRequestManager.tsx",
      "line": 33,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/OTCRequestManager.tsx::queryParam": {
      "file": "omk-frontend/app/kingdom/components/OTCRequestManager.tsx",
      "line": 34,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/OTCRequestManager.tsx::response": {
      "file": "omk-frontend/app/kingdom/components/OTCRequestManager.tsx",
      "line": 90,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/OTCRequestManager.tsx::data": {
      "file": "omk-frontend/app/kingdom/components/OTCRequestManager.tsx",
      "line": 45,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/OTCRequestManager.tsx::handleApprove": {
      "file": "omk-frontend/app/kingdom/components/OTCRequestManager.tsx",
      "line": 64,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/OTCRequestManager.tsx::handleReject": {
      "file": "omk-frontend/app/kingdom/components/OTCRequestManager.tsx",
      "line": 85,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/OTCRequestManager.tsx::reason": {
      "file": "omk-frontend/app/kingdom/components/OTCRequestManager.tsx",
      "line": 86,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/OTCRequestManager.tsx::getStatusColor": {
      "file": "omk-frontend/app/kingdom/components/OTCRequestManager.tsx",
      "line": 111,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/OTCRequestManager.tsx::getStatusIcon": {
      "file": "omk-frontend/app/kingdom/components/OTCRequestManager.tsx",
      "line": 120,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/OTCRequestManager.tsx::StatusIcon": {
      "file": "omk-frontend/app/kingdom/components/OTCRequestManager.tsx",
      "line": 176,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/AutonomousFixer.tsx::BACKEND_URL": {
      "file": "omk-frontend/app/kingdom/components/AutonomousFixer.tsx",
      "line": 12,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/AutonomousFixer.tsx::AutonomousFixer": {
      "file": "omk-frontend/app/kingdom/components/AutonomousFixer.tsx",
      "line": 27,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/AutonomousFixer.tsx::loadActiveFixes": {
      "file": "omk-frontend/app/kingdom/components/AutonomousFixer.tsx",
      "line": 39,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/AutonomousFixer.tsx::token": {
      "file": "omk-frontend/app/kingdom/components/AutonomousFixer.tsx",
      "line": 176,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/AutonomousFixer.tsx::response": {
      "file": "omk-frontend/app/kingdom/components/AutonomousFixer.tsx",
      "line": 177,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/AutonomousFixer.tsx::data": {
      "file": "omk-frontend/app/kingdom/components/AutonomousFixer.tsx",
      "line": 186,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/AutonomousFixer.tsx::checkIndexingStatus": {
      "file": "omk-frontend/app/kingdom/components/AutonomousFixer.tsx",
      "line": 55,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/AutonomousFixer.tsx::indexCodebase": {
      "file": "omk-frontend/app/kingdom/components/AutonomousFixer.tsx",
      "line": 71,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/AutonomousFixer.tsx::submitBugReport": {
      "file": "omk-frontend/app/kingdom/components/AutonomousFixer.tsx",
      "line": 99,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/AutonomousFixer.tsx::bugText": {
      "file": "omk-frontend/app/kingdom/components/AutonomousFixer.tsx",
      "line": 103,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/AutonomousFixer.tsx::newFix": {
      "file": "omk-frontend/app/kingdom/components/AutonomousFixer.tsx",
      "line": 132,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/AutonomousFixer.tsx::approveFix": {
      "file": "omk-frontend/app/kingdom/components/AutonomousFixer.tsx",
      "line": 146,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/AutonomousFixer.tsx::rejectFix": {
      "file": "omk-frontend/app/kingdom/components/AutonomousFixer.tsx",
      "line": 174,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/AutonomousFixer.tsx::getSeverityColor": {
      "file": "omk-frontend/app/kingdom/components/AutonomousFixer.tsx",
      "line": 197,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/AutonomousFixer.tsx::getStatusIcon": {
      "file": "omk-frontend/app/kingdom/components/AutonomousFixer.tsx",
      "line": 206,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/HiveMonitor.tsx::HiveMonitor": {
      "file": "omk-frontend/app/kingdom/components/HiveMonitor.tsx",
      "line": 18,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/HiveMonitor.tsx::handleVisibilityChange": {
      "file": "omk-frontend/app/kingdom/components/HiveMonitor.tsx",
      "line": 26,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/HiveMonitor.tsx::interval": {
      "file": "omk-frontend/app/kingdom/components/HiveMonitor.tsx",
      "line": 37,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/HiveMonitor.tsx::loadBees": {
      "file": "omk-frontend/app/kingdom/components/HiveMonitor.tsx",
      "line": 45,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/HiveMonitor.tsx::token": {
      "file": "omk-frontend/app/kingdom/components/HiveMonitor.tsx",
      "line": 47,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/HiveMonitor.tsx::response": {
      "file": "omk-frontend/app/kingdom/components/HiveMonitor.tsx",
      "line": 48,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/HiveMonitor.tsx::data": {
      "file": "omk-frontend/app/kingdom/components/HiveMonitor.tsx",
      "line": 57,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/HiveMonitor.tsx::getStatusColor": {
      "file": "omk-frontend/app/kingdom/components/HiveMonitor.tsx",
      "line": 82,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/HiveMonitor.tsx::getStatusIcon": {
      "file": "omk-frontend/app/kingdom/components/HiveMonitor.tsx",
      "line": 91,
      "type": "function"
    },
    "omk-frontend/app/kingdom/components/HiveMonitor.tsx::StatusIcon": {
      "file": "omk-frontend/app/kingdom/components/HiveMonitor.tsx",
      "line": 139,
      "type": "function"
    },
    "omk-frontend/app/kingdom/login/page.tsx::KingdomLogin": {
      "file": "omk-frontend/app/kingdom/login/page.tsx",
      "line": 8,
      "type": "function"
    },
    "omk-frontend/app/kingdom/login/page.tsx::router": {
      "file": "omk-frontend/app/kingdom/login/page.tsx",
      "line": 9,
      "type": "function"
    },
    "omk-frontend/app/kingdom/login/page.tsx::handleLogin": {
      "file": "omk-frontend/app/kingdom/login/page.tsx",
      "line": 15,
      "type": "function"
    },
    "omk-frontend/app/kingdom/login/page.tsx::response": {
      "file": "omk-frontend/app/kingdom/login/page.tsx",
      "line": 22,
      "type": "function"
    },
    "omk-frontend/app/kingdom/login/page.tsx::data": {
      "file": "omk-frontend/app/kingdom/login/page.tsx",
      "line": 30,
      "type": "function"
    },
    "omk-frontend/app/learn/wallets/page.tsx::LearnWalletsPage": {
      "file": "omk-frontend/app/learn/wallets/page.tsx",
      "line": 9,
      "type": "function"
    },
    "omk-frontend/app/learn/wallets/page.tsx::router": {
      "file": "omk-frontend/app/learn/wallets/page.tsx",
      "line": 10,
      "type": "function"
    },
    "omk-frontend/app/learn/wallets/page.tsx::learningPaths": {
      "file": "omk-frontend/app/learn/wallets/page.tsx",
      "line": 14,
      "type": "function"
    },
    "omk-frontend/app/learn/wallets/page.tsx::handleTopicClick": {
      "file": "omk-frontend/app/learn/wallets/page.tsx",
      "line": 38,
      "type": "function"
    },
    "omk-frontend/app/learn/wallets/page.tsx::getInitialMessage": {
      "file": "omk-frontend/app/learn/wallets/page.tsx",
      "line": 43,
      "type": "function"
    },
    "omk-frontend/stores/authStore.ts::useAuthStore": {
      "file": "omk-frontend/stores/authStore.ts",
      "line": 48,
      "type": "function"
    },
    "omk-frontend/stores/authStore.ts::wallets": {
      "file": "omk-frontend/stores/authStore.ts",
      "line": 68,
      "type": "function"
    },
    "omk-frontend/stores/authStore.ts::primary": {
      "file": "omk-frontend/stores/authStore.ts",
      "line": 69,
      "type": "function"
    },
    "omk-frontend/stores/authStore.ts::wallet": {
      "file": "omk-frontend/stores/authStore.ts",
      "line": 81,
      "type": "function"
    },
    "omk-frontend/lib/utils.ts::cn": {
      "file": "omk-frontend/lib/utils.ts",
      "line": 4,
      "type": "function"
    },
    "omk-frontend/lib/utils.ts::formatAddress": {
      "file": "omk-frontend/lib/utils.ts",
      "line": 8,
      "type": "function"
    },
    "omk-frontend/lib/utils.ts::formatNumber": {
      "file": "omk-frontend/lib/utils.ts",
      "line": 12,
      "type": "function"
    },
    "omk-frontend/lib/utils.ts::formatCurrency": {
      "file": "omk-frontend/lib/utils.ts",
      "line": 19,
      "type": "function"
    },
    "omk-frontend/lib/utils.ts::absValue": {
      "file": "omk-frontend/lib/utils.ts",
      "line": 21,
      "type": "function"
    },
    "omk-frontend/lib/api.ts::API_BASE_URL": {
      "file": "omk-frontend/lib/api.ts",
      "line": 3,
      "type": "function"
    },
    "omk-frontend/lib/api.ts::api": {
      "file": "omk-frontend/lib/api.ts",
      "line": 7,
      "type": "function"
    },
    "omk-frontend/lib/api.ts::token": {
      "file": "omk-frontend/lib/api.ts",
      "line": 17,
      "type": "function"
    },
    "omk-frontend/lib/api.ts::frontendAPI": {
      "file": "omk-frontend/lib/api.ts",
      "line": 26,
      "type": "function"
    },
    "omk-frontend/lib/chatEvents.ts::triggerChatMessage": {
      "file": "omk-frontend/lib/chatEvents.ts",
      "line": 15,
      "type": "function"
    },
    "omk-frontend/lib/chatEvents.ts::chatActions": {
      "file": "omk-frontend/lib/chatEvents.ts",
      "line": 23,
      "type": "function"
    },
    "omk-frontend/lib/translations.ts::useTranslations": {
      "file": "omk-frontend/lib/translations.ts",
      "line": 171,
      "type": "function"
    },
    "omk-frontend/lib/store.ts::useAppStore": {
      "file": "omk-frontend/lib/store.ts",
      "line": 36,
      "type": "function"
    },
    "omk-frontend/services/queenApi.ts::QUEEN_API_BASE": {
      "file": "omk-frontend/services/queenApi.ts",
      "line": 6,
      "type": "function"
    },
    "omk-frontend/services/queenApi.ts::response": {
      "file": "omk-frontend/services/queenApi.ts",
      "line": 206,
      "type": "function"
    },
    "omk-frontend/services/queenApi.ts::data": {
      "file": "omk-frontend/services/queenApi.ts",
      "line": 85,
      "type": "function"
    },
    "omk-frontend/services/queenApi.ts::queenApi": {
      "file": "omk-frontend/services/queenApi.ts",
      "line": 226,
      "type": "function"
    },
    "omk-frontend/lib/contracts/dispenser.ts::DISPENSER_ADDRESS": {
      "file": "omk-frontend/lib/contracts/dispenser.ts",
      "line": 6,
      "type": "function"
    },
    "omk-frontend/lib/contracts/dispenser.ts::DISPENSER_ABI": {
      "file": "omk-frontend/lib/contracts/dispenser.ts",
      "line": 8,
      "type": "function"
    },
    "omk-frontend/lib/contracts/dispenser.ts::SUPPORTED_TOKENS": {
      "file": "omk-frontend/lib/contracts/dispenser.ts",
      "line": 99,
      "type": "function"
    },
    "omk-frontend/lib/contracts/dispenser.ts::ERC20_ABI": {
      "file": "omk-frontend/lib/contracts/dispenser.ts",
      "line": 127,
      "type": "function"
    },
    "omk-frontend/lib/web3/config.ts::projectId": {
      "file": "omk-frontend/lib/web3/config.ts",
      "line": 6,
      "type": "function"
    },
    "omk-frontend/lib/web3/config.ts::hasValidProjectId": {
      "file": "omk-frontend/lib/web3/config.ts",
      "line": 9,
      "type": "function"
    },
    "omk-frontend/lib/web3/config.ts::getConnectors": {
      "file": "omk-frontend/lib/web3/config.ts",
      "line": 18,
      "type": "function"
    },
    "omk-frontend/lib/web3/config.ts::baseConnectors": {
      "file": "omk-frontend/lib/web3/config.ts",
      "line": 19,
      "type": "function"
    },
    "omk-frontend/lib/web3/config.ts::config": {
      "file": "omk-frontend/lib/web3/config.ts",
      "line": 53,
      "type": "function"
    },
    "omk-frontend/lib/ai/teacherBee.ts::apiKey": {
      "file": "omk-frontend/lib/ai/teacherBee.ts",
      "line": 3,
      "type": "function"
    },
    "omk-frontend/lib/ai/teacherBee.ts::prompt": {
      "file": "omk-frontend/lib/ai/teacherBee.ts",
      "line": 16,
      "type": "function"
    },
    "omk-frontend/lib/ai/teacherBee.ts::result": {
      "file": "omk-frontend/lib/ai/teacherBee.ts",
      "line": 17,
      "type": "function"
    },
    "omk-frontend/lib/ai/teacherBee.ts::response": {
      "file": "omk-frontend/lib/ai/teacherBee.ts",
      "line": 18,
      "type": "function"
    },
    "omk-frontend/lib/ai/teacherBee.ts::guides": {
      "file": "omk-frontend/lib/ai/teacherBee.ts",
      "line": 117,
      "type": "function"
    },
    "omk-frontend/lib/ai/teacherBee.ts::guide": {
      "file": "omk-frontend/lib/ai/teacherBee.ts",
      "line": 245,
      "type": "function"
    },
    "omk-frontend/lib/ai/teacherBee.ts::tips": {
      "file": "omk-frontend/lib/ai/teacherBee.ts",
      "line": 254,
      "type": "function"
    },
    "omk-frontend/lib/ai/teacherBee.ts::teacherBee": {
      "file": "omk-frontend/lib/ai/teacherBee.ts",
      "line": 313,
      "type": "function"
    },
    "omk-frontend/app/hooks/useWebSocket.ts::useWebSocket": {
      "file": "omk-frontend/app/hooks/useWebSocket.ts",
      "line": 18,
      "type": "function"
    },
    "omk-frontend/app/hooks/useWebSocket.ts::wsRef": {
      "file": "omk-frontend/app/hooks/useWebSocket.ts",
      "line": 31,
      "type": "function"
    },
    "omk-frontend/app/hooks/useWebSocket.ts::reconnectAttemptsRef": {
      "file": "omk-frontend/app/hooks/useWebSocket.ts",
      "line": 32,
      "type": "function"
    },
    "omk-frontend/app/hooks/useWebSocket.ts::reconnectTimeoutRef": {
      "file": "omk-frontend/app/hooks/useWebSocket.ts",
      "line": 33,
      "type": "function"
    },
    "omk-frontend/app/hooks/useWebSocket.ts::connect": {
      "file": "omk-frontend/app/hooks/useWebSocket.ts",
      "line": 35,
      "type": "function"
    },
    "omk-frontend/app/hooks/useWebSocket.ts::ws": {
      "file": "omk-frontend/app/hooks/useWebSocket.ts",
      "line": 42,
      "type": "function"
    },
    "omk-frontend/app/hooks/useWebSocket.ts::data": {
      "file": "omk-frontend/app/hooks/useWebSocket.ts",
      "line": 53,
      "type": "function"
    },
    "omk-frontend/app/hooks/useWebSocket.ts::disconnect": {
      "file": "omk-frontend/app/hooks/useWebSocket.ts",
      "line": 91,
      "type": "function"
    },
    "omk-frontend/app/hooks/useWebSocket.ts::send": {
      "file": "omk-frontend/app/hooks/useWebSocket.ts",
      "line": 101,
      "type": "function"
    },
    "omk-frontend/app/hooks/useWebSocket.ts::useHiveWebSocket": {
      "file": "omk-frontend/app/hooks/useWebSocket.ts",
      "line": 129,
      "type": "function"
    },
    "omk-frontend/app/hooks/useWebSocket.ts::BACKEND_URL": {
      "file": "omk-frontend/app/hooks/useWebSocket.ts",
      "line": 176,
      "type": "function"
    },
    "omk-frontend/app/hooks/useWebSocket.ts::wsUrl": {
      "file": "omk-frontend/app/hooks/useWebSocket.ts",
      "line": 177,
      "type": "function"
    },
    "omk-frontend/app/hooks/useWebSocket.ts::useAnalyticsWebSocket": {
      "file": "omk-frontend/app/hooks/useWebSocket.ts",
      "line": 152,
      "type": "function"
    },
    "omk-frontend/app/hooks/useWebSocket.ts::useBeeWebSocket": {
      "file": "omk-frontend/app/hooks/useWebSocket.ts",
      "line": 175,
      "type": "function"
    },
    "omk-frontend/app/api/analytics/conversion/route.ts::POST": {
      "file": "omk-frontend/app/api/analytics/conversion/route.ts",
      "line": 5,
      "type": "function"
    },
    "omk-frontend/app/api/analytics/conversion/route.ts::data": {
      "file": "omk-frontend/app/api/analytics/conversion/route.ts",
      "line": 7,
      "type": "function"
    },
    "omk-frontend/app/api/analytics/conversion/route.ts::highValueEvents": {
      "file": "omk-frontend/app/api/analytics/conversion/route.ts",
      "line": 39,
      "type": "function"
    },
    "omk-frontend/app/api/analytics/conversion/route.ts::cryptoConvertEvents": {
      "file": "omk-frontend/app/api/analytics/conversion/route.ts",
      "line": 51,
      "type": "function"
    },
    "omk-frontend/app/api/analytics/conversion/route.ts::queenApiUrl": {
      "file": "omk-frontend/app/api/analytics/conversion/route.ts",
      "line": 64,
      "type": "function"
    },
    "omk-frontend/app/api/analytics/conversion/route.ts::GET": {
      "file": "omk-frontend/app/api/analytics/conversion/route.ts",
      "line": 97,
      "type": "function"
    },
    "omk-frontend/app/api/teacher-bee/analyze-screenshot/route.ts::POST": {
      "file": "omk-frontend/app/api/teacher-bee/analyze-screenshot/route.ts",
      "line": 3,
      "type": "function"
    },
    "omk-frontend/app/api/teacher-bee/analyze-screenshot/route.ts::formData": {
      "file": "omk-frontend/app/api/teacher-bee/analyze-screenshot/route.ts",
      "line": 5,
      "type": "function"
    },
    "omk-frontend/app/api/teacher-bee/analyze-screenshot/route.ts::question": {
      "file": "omk-frontend/app/api/teacher-bee/analyze-screenshot/route.ts",
      "line": 48,
      "type": "function"
    },
    "omk-frontend/app/api/teacher-bee/analyze-screenshot/route.ts::screenshot": {
      "file": "omk-frontend/app/api/teacher-bee/analyze-screenshot/route.ts",
      "line": 7,
      "type": "function"
    },
    "omk-frontend/app/api/teacher-bee/analyze-screenshot/route.ts::queenApiUrl": {
      "file": "omk-frontend/app/api/teacher-bee/analyze-screenshot/route.ts",
      "line": 10,
      "type": "function"
    },
    "omk-frontend/app/api/teacher-bee/analyze-screenshot/route.ts::queenFormData": {
      "file": "omk-frontend/app/api/teacher-bee/analyze-screenshot/route.ts",
      "line": 13,
      "type": "function"
    },
    "omk-frontend/app/api/teacher-bee/analyze-screenshot/route.ts::bytes": {
      "file": "omk-frontend/app/api/teacher-bee/analyze-screenshot/route.ts",
      "line": 19,
      "type": "function"
    },
    "omk-frontend/app/api/teacher-bee/analyze-screenshot/route.ts::buffer": {
      "file": "omk-frontend/app/api/teacher-bee/analyze-screenshot/route.ts",
      "line": 20,
      "type": "function"
    },
    "omk-frontend/app/api/teacher-bee/analyze-screenshot/route.ts::base64": {
      "file": "omk-frontend/app/api/teacher-bee/analyze-screenshot/route.ts",
      "line": 21,
      "type": "function"
    },
    "omk-frontend/app/api/teacher-bee/analyze-screenshot/route.ts::response": {
      "file": "omk-frontend/app/api/teacher-bee/analyze-screenshot/route.ts",
      "line": 28,
      "type": "function"
    },
    "omk-frontend/app/api/teacher-bee/analyze-screenshot/route.ts::data": {
      "file": "omk-frontend/app/api/teacher-bee/analyze-screenshot/route.ts",
      "line": 37,
      "type": "function"
    }
  },
  "classes": {
    "backend/queen-ai/full_pipeline_test.py::MockLogger": {
      "file": "backend/queen-ai/full_pipeline_test.py",
      "line": 24,
      "type": "class"
    },
    "backend/queen-ai/full_pipeline_test.py::MockStructlog": {
      "file": "backend/queen-ai/full_pipeline_test.py",
      "line": 30,
      "type": "class"
    },
    "backend/queen-ai/full_pipeline_test.py::TestResults": {
      "file": "backend/queen-ai/full_pipeline_test.py",
      "line": 44,
      "type": "class"
    },
    "backend/queen-ai/stop.py::SystemShutdownManager": {
      "file": "backend/queen-ai/stop.py",
      "line": 28,
      "type": "class"
    },
    "backend/queen-ai/test_private_sale.py::MockLogger": {
      "file": "backend/queen-ai/test_private_sale.py",
      "line": 12,
      "type": "class"
    },
    "backend/queen-ai/test_private_sale.py::MockStructlog": {
      "file": "backend/queen-ai/test_private_sale.py",
      "line": 18,
      "type": "class"
    },
    "backend/queen-ai/test_private_sale.py::PrivateSaleTests": {
      "file": "backend/queen-ai/test_private_sale.py",
      "line": 28,
      "type": "class"
    },
    "backend/queen-ai/start.py::SystemLifecycleManager": {
      "file": "backend/queen-ai/start.py",
      "line": 31,
      "type": "class"
    },
    "backend/queen-ai/debug.py::DebugAnalyzer": {
      "file": "backend/queen-ai/debug.py",
      "line": 30,
      "type": "class"
    },
    "backend/queen-ai/reboot.py::SystemRebootManager": {
      "file": "backend/queen-ai/reboot.py",
      "line": 27,
      "type": "class"
    },
    "backend/queen-ai/health_check.py::HealthCheckResult": {
      "file": "backend/queen-ai/health_check.py",
      "line": 28,
      "type": "class"
    },
    "backend/queen-ai/health_check.py::SystemHealthChecker": {
      "file": "backend/queen-ai/health_check.py",
      "line": 118,
      "type": "class"
    },
    "backend/queen-ai/manage.py::SystemManager": {
      "file": "backend/queen-ai/manage.py",
      "line": 30,
      "type": "class"
    },
    "backend/queen-ai/simple_bee_test.py::MockLogger": {
      "file": "backend/queen-ai/simple_bee_test.py",
      "line": 12,
      "type": "class"
    },
    "backend/queen-ai/simple_bee_test.py::MockStructlog": {
      "file": "backend/queen-ai/simple_bee_test.py",
      "line": 18,
      "type": "class"
    },
    "backend/queen-ai/status.py::StatusDashboard": {
      "file": "backend/queen-ai/status.py",
      "line": 25,
      "type": "class"
    },
    "backend/queen-ai/integration_tests/test_blockchain_integration.py::BlockchainIntegrationTests": {
      "file": "backend/queen-ai/integration_tests/test_blockchain_integration.py",
      "line": 40,
      "type": "class"
    },
    "backend/queen-ai/integration_tests/test_llm_integration.py::LLMIntegrationTests": {
      "file": "backend/queen-ai/integration_tests/test_llm_integration.py",
      "line": 34,
      "type": "class"
    },
    "backend/queen-ai/tests/test_bees.py::TestMathsBee": {
      "file": "backend/queen-ai/tests/test_bees.py",
      "line": 14,
      "type": "class"
    },
    "backend/queen-ai/tests/test_bees.py::TestSecurityBee": {
      "file": "backend/queen-ai/tests/test_bees.py",
      "line": 69,
      "type": "class"
    },
    "backend/queen-ai/tests/test_bees.py::TestDataBee": {
      "file": "backend/queen-ai/tests/test_bees.py",
      "line": 144,
      "type": "class"
    },
    "backend/queen-ai/tests/test_bees.py::TestTreasuryBee": {
      "file": "backend/queen-ai/tests/test_bees.py",
      "line": 195,
      "type": "class"
    },
    "backend/queen-ai/tests/test_bees.py::TestBeeManager": {
      "file": "backend/queen-ai/tests/test_bees.py",
      "line": 259,
      "type": "class"
    },
    "backend/queen-ai/tests/test_bees.py::TestInterBeeCoordination": {
      "file": "backend/queen-ai/tests/test_bees.py",
      "line": 314,
      "type": "class"
    },
    "backend/queen-ai/tests/test_database.py::TestDatabaseConnection": {
      "file": "backend/queen-ai/tests/test_database.py",
      "line": 25,
      "type": "class"
    },
    "backend/queen-ai/tests/test_database.py::TestUserModel": {
      "file": "backend/queen-ai/tests/test_database.py",
      "line": 60,
      "type": "class"
    },
    "backend/queen-ai/tests/test_database.py::TestOTCRequestModel": {
      "file": "backend/queen-ai/tests/test_database.py",
      "line": 106,
      "type": "class"
    },
    "backend/queen-ai/tests/test_database.py::TestSystemConfigModel": {
      "file": "backend/queen-ai/tests/test_database.py",
      "line": 134,
      "type": "class"
    },
    "backend/queen-ai/tests/test_database.py::TestAuthentication": {
      "file": "backend/queen-ai/tests/test_database.py",
      "line": 152,
      "type": "class"
    },
    "backend/queen-ai/tests/test_database.py::TestDatabaseRelations": {
      "file": "backend/queen-ai/tests/test_database.py",
      "line": 191,
      "type": "class"
    },
    "backend/queen-ai/tests/test_integration.py::TestDatabaseIntegration": {
      "file": "backend/queen-ai/tests/test_integration.py",
      "line": 28,
      "type": "class"
    },
    "backend/queen-ai/tests/test_integration.py::TestOTCFlowIntegration": {
      "file": "backend/queen-ai/tests/test_integration.py",
      "line": 57,
      "type": "class"
    },
    "backend/queen-ai/tests/test_integration.py::TestUserAuthenticationIntegration": {
      "file": "backend/queen-ai/tests/test_integration.py",
      "line": 127,
      "type": "class"
    },
    "backend/queen-ai/tests/test_integration.py::TestHealthCheck": {
      "file": "backend/queen-ai/tests/test_integration.py",
      "line": 190,
      "type": "class"
    },
    "backend/queen-ai/tests/test_integration.py::TestDatabaseConnectionResilience": {
      "file": "backend/queen-ai/tests/test_integration.py",
      "line": 203,
      "type": "class"
    },
    "backend/queen-ai/tests/test_integration.py::TestRoleBasedAccess": {
      "file": "backend/queen-ai/tests/test_integration.py",
      "line": 226,
      "type": "class"
    },
    "backend/queen-ai/tests/test_auth_endpoints.py::TestLoginEndpoint": {
      "file": "backend/queen-ai/tests/test_auth_endpoints.py",
      "line": 27,
      "type": "class"
    },
    "backend/queen-ai/tests/test_auth_endpoints.py::TestRegisterEndpoint": {
      "file": "backend/queen-ai/tests/test_auth_endpoints.py",
      "line": 92,
      "type": "class"
    },
    "backend/queen-ai/tests/test_auth_endpoints.py::TestGetCurrentUserEndpoint": {
      "file": "backend/queen-ai/tests/test_auth_endpoints.py",
      "line": 128,
      "type": "class"
    },
    "backend/queen-ai/tests/test_auth_endpoints.py::TestLogoutEndpoint": {
      "file": "backend/queen-ai/tests/test_auth_endpoints.py",
      "line": 172,
      "type": "class"
    },
    "backend/queen-ai/tests/test_auth_endpoints.py::TestAuthenticationFlow": {
      "file": "backend/queen-ai/tests/test_auth_endpoints.py",
      "line": 197,
      "type": "class"
    },
    "backend/queen-ai/tests/security/test_output_filter.py::TestOutputFilter": {
      "file": "backend/queen-ai/tests/security/test_output_filter.py",
      "line": 10,
      "type": "class"
    },
    "backend/queen-ai/tests/security/test_output_filter.py::TestOutputFilterIntegration": {
      "file": "backend/queen-ai/tests/security/test_output_filter.py",
      "line": 282,
      "type": "class"
    },
    "backend/queen-ai/tests/security/test_prompt_protection.py::TestPromptProtectionGate": {
      "file": "backend/queen-ai/tests/security/test_prompt_protection.py",
      "line": 10,
      "type": "class"
    },
    "backend/queen-ai/tests/security/test_prompt_protection.py::TestPromptProtectionIntegration": {
      "file": "backend/queen-ai/tests/security/test_prompt_protection.py",
      "line": 277,
      "type": "class"
    },
    "backend/queen-ai/app/database/models.py::UserRole": {
      "file": "backend/queen-ai/app/database/models.py",
      "line": 12,
      "type": "class"
    },
    "backend/queen-ai/app/database/models.py::OTCStatus": {
      "file": "backend/queen-ai/app/database/models.py",
      "line": 17,
      "type": "class"
    },
    "backend/queen-ai/app/database/models.py::PaymentToken": {
      "file": "backend/queen-ai/app/database/models.py",
      "line": 24,
      "type": "class"
    },
    "backend/queen-ai/app/database/models.py::User": {
      "file": "backend/queen-ai/app/database/models.py",
      "line": 32,
      "type": "class"
    },
    "backend/queen-ai/app/database/models.py::OTCRequest": {
      "file": "backend/queen-ai/app/database/models.py",
      "line": 63,
      "type": "class"
    },
    "backend/queen-ai/app/database/models.py::SystemConfig": {
      "file": "backend/queen-ai/app/database/models.py",
      "line": 101,
      "type": "class"
    },
    "backend/queen-ai/app/database/models.py::Transaction": {
      "file": "backend/queen-ai/app/database/models.py",
      "line": 112,
      "type": "class"
    },
    "backend/queen-ai/app/database/models.py::QueenAILog": {
      "file": "backend/queen-ai/app/database/models.py",
      "line": 141,
      "type": "class"
    },
    "backend/queen-ai/app/database/models.py::Property": {
      "file": "backend/queen-ai/app/database/models.py",
      "line": 159,
      "type": "class"
    },
    "backend/queen-ai/app/database/models.py::PropertyInvestment": {
      "file": "backend/queen-ai/app/database/models.py",
      "line": 196,
      "type": "class"
    },
    "backend/queen-ai/app/database/models.py::Analytics": {
      "file": "backend/queen-ai/app/database/models.py",
      "line": 219,
      "type": "class"
    },
    "backend/queen-ai/app/tools/codebase_navigator.py::CodebaseNavigator": {
      "file": "backend/queen-ai/app/tools/codebase_navigator.py",
      "line": 20,
      "type": "class"
    },
    "backend/queen-ai/app/tools/database_query_tool.py::DatabaseQueryTool": {
      "file": "backend/queen-ai/app/tools/database_query_tool.py",
      "line": 20,
      "type": "class"
    },
    "backend/queen-ai/app/llm/memory.py::ConversationMemory": {
      "file": "backend/queen-ai/app/llm/memory.py",
      "line": 13,
      "type": "class"
    },
    "backend/queen-ai/app/llm/abstraction.py::LLMProvider": {
      "file": "backend/queen-ai/app/llm/abstraction.py",
      "line": 18,
      "type": "class"
    },
    "backend/queen-ai/app/llm/abstraction.py::LLMAbstraction": {
      "file": "backend/queen-ai/app/llm/abstraction.py",
      "line": 32,
      "type": "class"
    },
    "backend/queen-ai/app/llm/system_knowledge.py::SystemKnowledge": {
      "file": "backend/queen-ai/app/llm/system_knowledge.py",
      "line": 17,
      "type": "class"
    },
    "backend/queen-ai/app/bees/security_bee.py::SecurityBee": {
      "file": "backend/queen-ai/app/bees/security_bee.py",
      "line": 11,
      "type": "class"
    },
    "backend/queen-ai/app/bees/enhanced_security_bee.py::EnhancedSecurityBee": {
      "file": "backend/queen-ai/app/bees/enhanced_security_bee.py",
      "line": 19,
      "type": "class"
    },
    "backend/queen-ai/app/bees/pattern_bee.py::PatternBee": {
      "file": "backend/queen-ai/app/bees/pattern_bee.py",
      "line": 12,
      "type": "class"
    },
    "backend/queen-ai/app/bees/user_experience_bee.py::UserExperienceBee": {
      "file": "backend/queen-ai/app/bees/user_experience_bee.py",
      "line": 22,
      "type": "class"
    },
    "backend/queen-ai/app/bees/visualization_bee.py::VisualizationBee": {
      "file": "backend/queen-ai/app/bees/visualization_bee.py",
      "line": 17,
      "type": "class"
    },
    "backend/queen-ai/app/bees/governance_bee.py::GovernanceBee": {
      "file": "backend/queen-ai/app/bees/governance_bee.py",
      "line": 16,
      "type": "class"
    },
    "backend/queen-ai/app/bees/private_sale_bee.py::PrivateSaleBee": {
      "file": "backend/queen-ai/app/bees/private_sale_bee.py",
      "line": 16,
      "type": "class"
    },
    "backend/queen-ai/app/bees/tokenization_bee.py::TokenizationBee": {
      "file": "backend/queen-ai/app/bees/tokenization_bee.py",
      "line": 15,
      "type": "class"
    },
    "backend/queen-ai/app/bees/data_bee.py::DataBee": {
      "file": "backend/queen-ai/app/bees/data_bee.py",
      "line": 31,
      "type": "class"
    },
    "backend/queen-ai/app/bees/logic_bee.py::LogicBee": {
      "file": "backend/queen-ai/app/bees/logic_bee.py",
      "line": 11,
      "type": "class"
    },
    "backend/queen-ai/app/bees/liquidity_sentinel_bee.py::LiquiditySentinelBee": {
      "file": "backend/queen-ai/app/bees/liquidity_sentinel_bee.py",
      "line": 21,
      "type": "class"
    },
    "backend/queen-ai/app/bees/purchase_bee.py::PurchaseBee": {
      "file": "backend/queen-ai/app/bees/purchase_bee.py",
      "line": 15,
      "type": "class"
    },
    "backend/queen-ai/app/bees/maths_bee.py::MathsBee": {
      "file": "backend/queen-ai/app/bees/maths_bee.py",
      "line": 11,
      "type": "class"
    },
    "backend/queen-ai/app/bees/data_pipeline_bee.py::DataPipelineBee": {
      "file": "backend/queen-ai/app/bees/data_pipeline_bee.py",
      "line": 32,
      "type": "class"
    },
    "backend/queen-ai/app/bees/monitoring_bee.py::MonitoringBee": {
      "file": "backend/queen-ai/app/bees/monitoring_bee.py",
      "line": 15,
      "type": "class"
    },
    "backend/queen-ai/app/bees/bridge_bee.py::BridgeBee": {
      "file": "backend/queen-ai/app/bees/bridge_bee.py",
      "line": 23,
      "type": "class"
    },
    "backend/queen-ai/app/bees/stake_bot_bee.py::StakeBotBee": {
      "file": "backend/queen-ai/app/bees/stake_bot_bee.py",
      "line": 15,
      "type": "class"
    },
    "backend/queen-ai/app/bees/blockchain_bee.py::BlockchainBee": {
      "file": "backend/queen-ai/app/bees/blockchain_bee.py",
      "line": 38,
      "type": "class"
    },
    "backend/queen-ai/app/bees/manager.py::BeeManager": {
      "file": "backend/queen-ai/app/bees/manager.py",
      "line": 32,
      "type": "class"
    },
    "backend/queen-ai/app/bees/base.py::BaseBee": {
      "file": "backend/queen-ai/app/bees/base.py",
      "line": 14,
      "type": "class"
    },
    "backend/queen-ai/app/bees/treasury_bee.py::TreasuryBee": {
      "file": "backend/queen-ai/app/bees/treasury_bee.py",
      "line": 12,
      "type": "class"
    },
    "backend/queen-ai/app/bees/onboarding_bee.py::OnboardingBee": {
      "file": "backend/queen-ai/app/bees/onboarding_bee.py",
      "line": 26,
      "type": "class"
    },
    "backend/queen-ai/app/core/distributed_lock.py::DistributedLock": {
      "file": "backend/queen-ai/app/core/distributed_lock.py",
      "line": 19,
      "type": "class"
    },
    "backend/queen-ai/app/core/message_bus.py::Message": {
      "file": "backend/queen-ai/app/core/message_bus.py",
      "line": 16,
      "type": "class"
    },
    "backend/queen-ai/app/core/message_bus.py::MessageBus": {
      "file": "backend/queen-ai/app/core/message_bus.py",
      "line": 38,
      "type": "class"
    },
    "backend/queen-ai/app/core/state_manager.py::StateManager": {
      "file": "backend/queen-ai/app/core/state_manager.py",
      "line": 15,
      "type": "class"
    },
    "backend/queen-ai/app/core/enhanced_claude_integration.py::ThinkingClaude": {
      "file": "backend/queen-ai/app/core/enhanced_claude_integration.py",
      "line": 14,
      "type": "class"
    },
    "backend/queen-ai/app/core/enhanced_claude_integration.py::QueenRegulator": {
      "file": "backend/queen-ai/app/core/enhanced_claude_integration.py",
      "line": 371,
      "type": "class"
    },
    "backend/queen-ai/app/core/system_reboot_manager.py::SystemRebootManager": {
      "file": "backend/queen-ai/app/core/system_reboot_manager.py",
      "line": 16,
      "type": "class"
    },
    "backend/queen-ai/app/core/hive_board.py::InformationPost": {
      "file": "backend/queen-ai/app/core/hive_board.py",
      "line": 24,
      "type": "class"
    },
    "backend/queen-ai/app/core/hive_board.py::HiveInformationBoard": {
      "file": "backend/queen-ai/app/core/hive_board.py",
      "line": 54,
      "type": "class"
    },
    "backend/queen-ai/app/core/redis_hive_board.py::RedisHiveBoard": {
      "file": "backend/queen-ai/app/core/redis_hive_board.py",
      "line": 23,
      "type": "class"
    },
    "backend/queen-ai/app/core/autonomous_fixer.py::FixApproach": {
      "file": "backend/queen-ai/app/core/autonomous_fixer.py",
      "line": 28,
      "type": "class"
    },
    "backend/queen-ai/app/core/autonomous_fixer.py::AutonomousFixer": {
      "file": "backend/queen-ai/app/core/autonomous_fixer.py",
      "line": 40,
      "type": "class"
    },
    "backend/queen-ai/app/core/security.py::SecurityManager": {
      "file": "backend/queen-ai/app/core/security.py",
      "line": 24,
      "type": "class"
    },
    "backend/queen-ai/app/core/redis_message_bus.py::RedisMessageBus": {
      "file": "backend/queen-ai/app/core/redis_message_bus.py",
      "line": 24,
      "type": "class"
    },
    "backend/queen-ai/app/core/session_manager.py::SessionManager": {
      "file": "backend/queen-ai/app/core/session_manager.py",
      "line": 15,
      "type": "class"
    },
    "backend/queen-ai/app/core/decision_engine.py::DecisionEngine": {
      "file": "backend/queen-ai/app/core/decision_engine.py",
      "line": 20,
      "type": "class"
    },
    "backend/queen-ai/app/core/enhanced_sandbox_system.py::SandboxEnvironment": {
      "file": "backend/queen-ai/app/core/enhanced_sandbox_system.py",
      "line": 18,
      "type": "class"
    },
    "backend/queen-ai/app/core/bug_analyzer.py::BugAnalyzer": {
      "file": "backend/queen-ai/app/core/bug_analyzer.py",
      "line": 17,
      "type": "class"
    },
    "backend/queen-ai/app/core/orchestrator.py::QueenOrchestrator": {
      "file": "backend/queen-ai/app/core/orchestrator.py",
      "line": 28,
      "type": "class"
    },
    "backend/queen-ai/app/core/queen_system_manager.py::QueenSystemManager": {
      "file": "backend/queen-ai/app/core/queen_system_manager.py",
      "line": 65,
      "type": "class"
    },
    "backend/queen-ai/app/core/code_proposal_system.py::ProposalStatus": {
      "file": "backend/queen-ai/app/core/code_proposal_system.py",
      "line": 16,
      "type": "class"
    },
    "backend/queen-ai/app/core/code_proposal_system.py::CodeProposalSystem": {
      "file": "backend/queen-ai/app/core/code_proposal_system.py",
      "line": 28,
      "type": "class"
    },
    "backend/queen-ai/app/core/emergency_controls.py::EmergencyLevel": {
      "file": "backend/queen-ai/app/core/emergency_controls.py",
      "line": 14,
      "type": "class"
    },
    "backend/queen-ai/app/core/emergency_controls.py::SystemState": {
      "file": "backend/queen-ai/app/core/emergency_controls.py",
      "line": 22,
      "type": "class"
    },
    "backend/queen-ai/app/core/emergency_controls.py::EmergencyControls": {
      "file": "backend/queen-ai/app/core/emergency_controls.py",
      "line": 31,
      "type": "class"
    },
    "backend/queen-ai/app/core/stateless_architecture.py::StatelessArchitectureManager": {
      "file": "backend/queen-ai/app/core/stateless_architecture.py",
      "line": 26,
      "type": "class"
    },
    "backend/queen-ai/app/config/settings.py::Settings": {
      "file": "backend/queen-ai/app/config/settings.py",
      "line": 9,
      "type": "class"
    },
    "backend/queen-ai/app/config/settings.py::Config": {
      "file": "backend/queen-ai/app/config/settings.py",
      "line": 109,
      "type": "class"
    },
    "backend/queen-ai/app/learning/observer.py::LearningObserver": {
      "file": "backend/queen-ai/app/learning/observer.py",
      "line": 19,
      "type": "class"
    },
    "backend/queen-ai/app/learning/bigquery_logger.py::BigQueryLogger": {
      "file": "backend/queen-ai/app/learning/bigquery_logger.py",
      "line": 24,
      "type": "class"
    },
    "backend/queen-ai/app/uagents/integration.py::ASIIntegration": {
      "file": "backend/queen-ai/app/uagents/integration.py",
      "line": 67,
      "type": "class"
    },
    "backend/queen-ai/app/uagents/integration.py::PoolHealthQuery": {
      "file": "backend/queen-ai/app/uagents/integration.py",
      "line": 34,
      "type": "class"
    },
    "backend/queen-ai/app/uagents/integration.py::PoolHealthResponse": {
      "file": "backend/queen-ai/app/uagents/integration.py",
      "line": 39,
      "type": "class"
    },
    "backend/queen-ai/app/uagents/integration.py::GovernanceProposal": {
      "file": "backend/queen-ai/app/uagents/integration.py",
      "line": 47,
      "type": "class"
    },
    "backend/queen-ai/app/uagents/integration.py::StakingInfo": {
      "file": "backend/queen-ai/app/uagents/integration.py",
      "line": 54,
      "type": "class"
    },
    "backend/queen-ai/app/uagents/integration.py::TreasuryStatus": {
      "file": "backend/queen-ai/app/uagents/integration.py",
      "line": 60,
      "type": "class"
    },
    "backend/queen-ai/app/agents/market_data_agent.py::MarketDataAgent": {
      "file": "backend/queen-ai/app/agents/market_data_agent.py",
      "line": 23,
      "type": "class"
    },
    "backend/queen-ai/app/utils/blockchain.py::BlockchainConnector": {
      "file": "backend/queen-ai/app/utils/blockchain.py",
      "line": 18,
      "type": "class"
    },
    "backend/queen-ai/app/models/system_config.py::OTCPhase": {
      "file": "backend/queen-ai/app/models/system_config.py",
      "line": 11,
      "type": "class"
    },
    "backend/queen-ai/app/models/system_config.py::SystemConfig": {
      "file": "backend/queen-ai/app/models/system_config.py",
      "line": 17,
      "type": "class"
    },
    "backend/queen-ai/app/models/system_config.py::Config": {
      "file": "backend/queen-ai/app/models/system_config.py",
      "line": 44,
      "type": "class"
    },
    "backend/queen-ai/app/integrations/elastic_search.py::ElasticSearchIntegration": {
      "file": "backend/queen-ai/app/integrations/elastic_search.py",
      "line": 21,
      "type": "class"
    },
    "backend/queen-ai/app/integrations/claude_integration.py::ClaudeQueenIntegration": {
      "file": "backend/queen-ai/app/integrations/claude_integration.py",
      "line": 19,
      "type": "class"
    },
    "backend/queen-ai/app/blockchain/solana_client.py::SolanaClient": {
      "file": "backend/queen-ai/app/blockchain/solana_client.py",
      "line": 64,
      "type": "class"
    },
    "backend/queen-ai/app/blockchain/solana_client.py::Confirmed": {
      "file": "backend/queen-ai/app/blockchain/solana_client.py",
      "line": 35,
      "type": "class"
    },
    "backend/queen-ai/app/blockchain/solana_client.py::Finalized": {
      "file": "backend/queen-ai/app/blockchain/solana_client.py",
      "line": 39,
      "type": "class"
    },
    "backend/queen-ai/app/blockchain/solana_client.py::TxOpts": {
      "file": "backend/queen-ai/app/blockchain/solana_client.py",
      "line": 43,
      "type": "class"
    },
    "backend/queen-ai/app/blockchain/bridge.py::BridgeDirection": {
      "file": "backend/queen-ai/app/blockchain/bridge.py",
      "line": 24,
      "type": "class"
    },
    "backend/queen-ai/app/blockchain/bridge.py::BridgeStatus": {
      "file": "backend/queen-ai/app/blockchain/bridge.py",
      "line": 30,
      "type": "class"
    },
    "backend/queen-ai/app/blockchain/bridge.py::BridgeTransaction": {
      "file": "backend/queen-ai/app/blockchain/bridge.py",
      "line": 44,
      "type": "class"
    },
    "backend/queen-ai/app/blockchain/bridge.py::CrossChainBridge": {
      "file": "backend/queen-ai/app/blockchain/bridge.py",
      "line": 97,
      "type": "class"
    },
    "backend/queen-ai/app/blockchain/solana_rpc_client.py::SolanaRPCClient": {
      "file": "backend/queen-ai/app/blockchain/solana_rpc_client.py",
      "line": 42,
      "type": "class"
    },
    "backend/queen-ai/app/blockchain/solana_rpc_client.py::AsyncClient": {
      "file": "backend/queen-ai/app/blockchain/solana_rpc_client.py",
      "line": 298,
      "type": "class"
    },
    "backend/queen-ai/app/blockchain/transaction_manager.py::TransactionStatus": {
      "file": "backend/queen-ai/app/blockchain/transaction_manager.py",
      "line": 22,
      "type": "class"
    },
    "backend/queen-ai/app/blockchain/transaction_manager.py::TransactionPriority": {
      "file": "backend/queen-ai/app/blockchain/transaction_manager.py",
      "line": 31,
      "type": "class"
    },
    "backend/queen-ai/app/blockchain/transaction_manager.py::Transaction": {
      "file": "backend/queen-ai/app/blockchain/transaction_manager.py",
      "line": 40,
      "type": "class"
    },
    "backend/queen-ai/app/blockchain/transaction_manager.py::TransactionManager": {
      "file": "backend/queen-ai/app/blockchain/transaction_manager.py",
      "line": 60,
      "type": "class"
    },
    "backend/queen-ai/app/blockchain/ethereum_client.py::EthereumClient": {
      "file": "backend/queen-ai/app/blockchain/ethereum_client.py",
      "line": 28,
      "type": "class"
    },
    "backend/queen-ai/app/blockchain/wallet_manager.py::WalletManager": {
      "file": "backend/queen-ai/app/blockchain/wallet_manager.py",
      "line": 21,
      "type": "class"
    },
    "backend/queen-ai/app/db/models.py::ProposalStatus": {
      "file": "backend/queen-ai/app/db/models.py",
      "line": 19,
      "type": "class"
    },
    "backend/queen-ai/app/db/models.py::ProposalType": {
      "file": "backend/queen-ai/app/db/models.py",
      "line": 29,
      "type": "class"
    },
    "backend/queen-ai/app/db/models.py::PurchaseStatus": {
      "file": "backend/queen-ai/app/db/models.py",
      "line": 37,
      "type": "class"
    },
    "backend/queen-ai/app/db/models.py::User": {
      "file": "backend/queen-ai/app/db/models.py",
      "line": 47,
      "type": "class"
    },
    "backend/queen-ai/app/db/models.py::GovernanceProposal": {
      "file": "backend/queen-ai/app/db/models.py",
      "line": 98,
      "type": "class"
    },
    "backend/queen-ai/app/db/models.py::Vote": {
      "file": "backend/queen-ai/app/db/models.py",
      "line": 135,
      "type": "class"
    },
    "backend/queen-ai/app/db/models.py::PrivateSalePurchase": {
      "file": "backend/queen-ai/app/db/models.py",
      "line": 152,
      "type": "class"
    },
    "backend/queen-ai/app/db/models.py::Investor": {
      "file": "backend/queen-ai/app/db/models.py",
      "line": 182,
      "type": "class"
    },
    "backend/queen-ai/app/db/models.py::HivePost": {
      "file": "backend/queen-ai/app/db/models.py",
      "line": 212,
      "type": "class"
    },
    "backend/queen-ai/app/db/models.py::Message": {
      "file": "backend/queen-ai/app/db/models.py",
      "line": 232,
      "type": "class"
    },
    "backend/queen-ai/app/db/models.py::BeeMetrics": {
      "file": "backend/queen-ai/app/db/models.py",
      "line": 251,
      "type": "class"
    },
    "backend/queen-ai/app/db/models.py::LLMConversation": {
      "file": "backend/queen-ai/app/db/models.py",
      "line": 275,
      "type": "class"
    },
    "backend/queen-ai/app/db/models.py::SystemEvent": {
      "file": "backend/queen-ai/app/db/models.py",
      "line": 294,
      "type": "class"
    },
    "backend/queen-ai/app/db/models.py::StakingPosition": {
      "file": "backend/queen-ai/app/db/models.py",
      "line": 312,
      "type": "class"
    },
    "backend/queen-ai/app/db/models.py::TreasuryTransaction": {
      "file": "backend/queen-ai/app/db/models.py",
      "line": 340,
      "type": "class"
    },
    "backend/queen-ai/app/services/context_analyzer.py::ContextAnalyzer": {
      "file": "backend/queen-ai/app/services/context_analyzer.py",
      "line": 10,
      "type": "class"
    },
    "backend/queen-ai/app/api/v1/auth.py::LoginRequest": {
      "file": "backend/queen-ai/app/api/v1/auth.py",
      "line": 26,
      "type": "class"
    },
    "backend/queen-ai/app/api/v1/auth.py::RegisterRequest": {
      "file": "backend/queen-ai/app/api/v1/auth.py",
      "line": 30,
      "type": "class"
    },
    "backend/queen-ai/app/api/v1/auth.py::TokenResponse": {
      "file": "backend/queen-ai/app/api/v1/auth.py",
      "line": 36,
      "type": "class"
    },
    "backend/queen-ai/app/api/v1/auth.py::UserResponse": {
      "file": "backend/queen-ai/app/api/v1/auth.py",
      "line": 41,
      "type": "class"
    },
    "backend/queen-ai/app/api/v1/queen_dev.py::ChatMessage": {
      "file": "backend/queen-ai/app/api/v1/queen_dev.py",
      "line": 66,
      "type": "class"
    },
    "backend/queen-ai/app/api/v1/queen_dev.py::ApproveProposal": {
      "file": "backend/queen-ai/app/api/v1/queen_dev.py",
      "line": 71,
      "type": "class"
    },
    "backend/queen-ai/app/api/v1/queen_dev.py::RejectProposal": {
      "file": "backend/queen-ai/app/api/v1/queen_dev.py",
      "line": 75,
      "type": "class"
    },
    "backend/queen-ai/app/api/v1/queen.py::RegisterBeeRequest": {
      "file": "backend/queen-ai/app/api/v1/queen.py",
      "line": 16,
      "type": "class"
    },
    "backend/queen-ai/app/api/v1/queen.py::BridgeProposalRequest": {
      "file": "backend/queen-ai/app/api/v1/queen.py",
      "line": 23,
      "type": "class"
    },
    "backend/queen-ai/app/api/v1/queen.py::TreasuryProposalRequest": {
      "file": "backend/queen-ai/app/api/v1/queen.py",
      "line": 30,
      "type": "class"
    },
    "backend/queen-ai/app/api/v1/queen.py::LLMGenerateRequest": {
      "file": "backend/queen-ai/app/api/v1/queen.py",
      "line": 154,
      "type": "class"
    },
    "backend/queen-ai/app/api/v1/frontend.py::LanguageSelectionRequest": {
      "file": "backend/queen-ai/app/api/v1/frontend.py",
      "line": 26,
      "type": "class"
    },
    "backend/queen-ai/app/api/v1/frontend.py::ThemeSelectionRequest": {
      "file": "backend/queen-ai/app/api/v1/frontend.py",
      "line": 29,
      "type": "class"
    },
    "backend/queen-ai/app/api/v1/frontend.py::EmailCheckRequest": {
      "file": "backend/queen-ai/app/api/v1/frontend.py",
      "line": 33,
      "type": "class"
    },
    "backend/queen-ai/app/api/v1/frontend.py::UserRegistrationRequest": {
      "file": "backend/queen-ai/app/api/v1/frontend.py",
      "line": 36,
      "type": "class"
    },
    "backend/queen-ai/app/api/v1/frontend.py::LoginRequest": {
      "file": "backend/queen-ai/app/api/v1/frontend.py",
      "line": 44,
      "type": "class"
    },
    "backend/queen-ai/app/api/v1/frontend.py::SessionRequest": {
      "file": "backend/queen-ai/app/api/v1/frontend.py",
      "line": 48,
      "type": "class"
    },
    "backend/queen-ai/app/api/v1/frontend.py::ConversationRequest": {
      "file": "backend/queen-ai/app/api/v1/frontend.py",
      "line": 51,
      "type": "class"
    },
    "backend/queen-ai/app/api/v1/frontend.py::MenuInteractionRequest": {
      "file": "backend/queen-ai/app/api/v1/frontend.py",
      "line": 58,
      "type": "class"
    },
    "backend/queen-ai/app/api/v1/autonomous_dev.py::BugReportRequest": {
      "file": "backend/queen-ai/app/api/v1/autonomous_dev.py",
      "line": 30,
      "type": "class"
    },
    "backend/queen-ai/app/api/v1/autonomous_dev.py::ApproveFixRequest": {
      "file": "backend/queen-ai/app/api/v1/autonomous_dev.py",
      "line": 37,
      "type": "class"
    },
    "backend/queen-ai/app/api/v1/autonomous_dev.py::RejectFixRequest": {
      "file": "backend/queen-ai/app/api/v1/autonomous_dev.py",
      "line": 41,
      "type": "class"
    },
    "backend/queen-ai/app/api/v1/autonomous_dev.py::CodeSearchRequest": {
      "file": "backend/queen-ai/app/api/v1/autonomous_dev.py",
      "line": 45,
      "type": "class"
    },
    "backend/queen-ai/app/api/v1/admin_claude.py::Recommendation": {
      "file": "backend/queen-ai/app/api/v1/admin_claude.py",
      "line": 39,
      "type": "class"
    },
    "backend/queen-ai/app/api/v1/admin_claude.py::AnalysisData": {
      "file": "backend/queen-ai/app/api/v1/admin_claude.py",
      "line": 48,
      "type": "class"
    },
    "backend/queen-ai/app/api/v1/admin_claude.py::ImplementationRequest": {
      "file": "backend/queen-ai/app/api/v1/admin_claude.py",
      "line": 57,
      "type": "class"
    },
    "backend/queen-ai/app/api/v1/admin.py::UpdateOTCPhaseRequest": {
      "file": "backend/queen-ai/app/api/v1/admin.py",
      "line": 50,
      "type": "class"
    },
    "backend/queen-ai/app/api/v1/admin.py::UpdateConfigRequest": {
      "file": "backend/queen-ai/app/api/v1/admin.py",
      "line": 53,
      "type": "class"
    },
    "backend/queen-ai/app/api/v1/admin.py::SetOMKContractRequest": {
      "file": "backend/queen-ai/app/api/v1/admin.py",
      "line": 62,
      "type": "class"
    },
    "backend/queen-ai/app/api/v1/admin.py::SetOTCPriceRequest": {
      "file": "backend/queen-ai/app/api/v1/admin.py",
      "line": 66,
      "type": "class"
    },
    "backend/queen-ai/app/api/v1/admin.py::ChatWithQueenRequest": {
      "file": "backend/queen-ai/app/api/v1/admin.py",
      "line": 71,
      "type": "class"
    },
    "backend/queen-ai/app/api/v1/admin.py::ExecuteBeeRequest": {
      "file": "backend/queen-ai/app/api/v1/admin.py",
      "line": 75,
      "type": "class"
    },
    "backend/queen-ai/app/api/v1/admin.py::CreateOTCRequestRequest": {
      "file": "backend/queen-ai/app/api/v1/admin.py",
      "line": 79,
      "type": "class"
    },
    "backend/queen-ai/app/api/v1/admin.py::UpdateTreasuryWalletsRequest": {
      "file": "backend/queen-ai/app/api/v1/admin.py",
      "line": 89,
      "type": "class"
    },
    "backend/queen-ai/app/api/v1/admin.py::UpdatePaymentMethodsRequest": {
      "file": "backend/queen-ai/app/api/v1/admin.py",
      "line": 92,
      "type": "class"
    },
    "backend/queen-ai/app/api/v1/admin.py::UpdateTGEDateRequest": {
      "file": "backend/queen-ai/app/api/v1/admin.py",
      "line": 95,
      "type": "class"
    },
    "backend/queen-ai/app/api/v1/admin.py::VerifyPaymentRequest": {
      "file": "backend/queen-ai/app/api/v1/admin.py",
      "line": 98,
      "type": "class"
    },
    "backend/queen-ai/app/api/v1/admin.py::PrivateInvestorRequest": {
      "file": "backend/queen-ai/app/api/v1/admin.py",
      "line": 103,
      "type": "class"
    },
    "backend/queen-ai/app/api/v1/admin.py::UserActionRequest": {
      "file": "backend/queen-ai/app/api/v1/admin.py",
      "line": 109,
      "type": "class"
    },
    "backend/queen-ai/app/api/v1/admin.py::SchedulePipelineRequest": {
      "file": "backend/queen-ai/app/api/v1/admin.py",
      "line": 1275,
      "type": "class"
    },
    "backend/queen-ai/app/api/v1/admin.py::ElasticSearchRequest": {
      "file": "backend/queen-ai/app/api/v1/admin.py",
      "line": 1348,
      "type": "class"
    },
    "backend/queen-ai/app/api/v1/admin.py::ElasticRAGRequest": {
      "file": "backend/queen-ai/app/api/v1/admin.py",
      "line": 1353,
      "type": "class"
    },
    "backend/queen-ai/app/api/v1/admin.py::BigQueryRequest": {
      "file": "backend/queen-ai/app/api/v1/admin.py",
      "line": 1474,
      "type": "class"
    },
    "backend/queen-ai/app/api/v1/contracts.py::CompileContractRequest": {
      "file": "backend/queen-ai/app/api/v1/contracts.py",
      "line": 31,
      "type": "class"
    },
    "backend/queen-ai/app/api/v1/contracts.py::DeployContractRequest": {
      "file": "backend/queen-ai/app/api/v1/contracts.py",
      "line": 37,
      "type": "class"
    },
    "backend/queen-ai/app/api/v1/contracts.py::BatchDeployRequest": {
      "file": "backend/queen-ai/app/api/v1/contracts.py",
      "line": 45,
      "type": "class"
    },
    "backend/queen-ai/app/api/v1/contracts.py::VerifyContractRequest": {
      "file": "backend/queen-ai/app/api/v1/contracts.py",
      "line": 50,
      "type": "class"
    },
    "backend/queen-ai/app/api/v1/notifications.py::CreateNotificationRequest": {
      "file": "backend/queen-ai/app/api/v1/notifications.py",
      "line": 26,
      "type": "class"
    },
    "backend/queen-ai/app/api/v1/claude_analysis.py::ImplementationRequest": {
      "file": "backend/queen-ai/app/api/v1/claude_analysis.py",
      "line": 44,
      "type": "class"
    },
    "backend/queen-ai/app/api/v1/claude_analysis_old_backup.py::ImplementationRequest": {
      "file": "backend/queen-ai/app/api/v1/claude_analysis_old_backup.py",
      "line": 43,
      "type": "class"
    },
    "backend/queen-ai/app/api/v1/websocket.py::ConnectionManager": {
      "file": "backend/queen-ai/app/api/v1/websocket.py",
      "line": 17,
      "type": "class"
    },
    "backend/queen-ai/app/api/v1/endpoints/teacher_bee.py::TeacherBeeRequest": {
      "file": "backend/queen-ai/app/api/v1/endpoints/teacher_bee.py",
      "line": 26,
      "type": "class"
    },
    "backend/queen-ai/app/blockchain/oracles/pyth_oracle.py::PythOracle": {
      "file": "backend/queen-ai/app/blockchain/oracles/pyth_oracle.py",
      "line": 17,
      "type": "class"
    },
    "backend/queen-ai/app/blockchain/oracles/chainlink_oracle.py::ChainlinkOracle": {
      "file": "backend/queen-ai/app/blockchain/oracles/chainlink_oracle.py",
      "line": 50,
      "type": "class"
    },
    "backend/queen-ai/app/blockchain/dex/uniswap_router.py::UniswapRouter": {
      "file": "backend/queen-ai/app/blockchain/dex/uniswap_router.py",
      "line": 135,
      "type": "class"
    },
    "backend/queen-ai/app/blockchain/dex/raydium_router.py::RaydiumRouter": {
      "file": "backend/queen-ai/app/blockchain/dex/raydium_router.py",
      "line": 19,
      "type": "class"
    },
    "backend/queen-ai/app/integrations/data_collectors/price_oracles.py::PriceOraclesConnector": {
      "file": "backend/queen-ai/app/integrations/data_collectors/price_oracles.py",
      "line": 12,
      "type": "class"
    },
    "backend/queen-ai/app/integrations/data_collectors/dex_pools.py::DEXPoolsConnector": {
      "file": "backend/queen-ai/app/integrations/data_collectors/dex_pools.py",
      "line": 12,
      "type": "class"
    },
    "backend/queen-ai/app/integrations/data_collectors/blockchain_transactions.py::BlockchainTransactionsConnector": {
      "file": "backend/queen-ai/app/integrations/data_collectors/blockchain_transactions.py",
      "line": 13,
      "type": "class"
    },
    "backend/queen-ai/app/core/security/context_manager.py::ThreatLevel": {
      "file": "backend/queen-ai/app/core/security/context_manager.py",
      "line": 15,
      "type": "class"
    },
    "backend/queen-ai/app/core/security/context_manager.py::SecurityEvent": {
      "file": "backend/queen-ai/app/core/security/context_manager.py",
      "line": 25,
      "type": "class"
    },
    "backend/queen-ai/app/core/security/context_manager.py::SecurityContext": {
      "file": "backend/queen-ai/app/core/security/context_manager.py",
      "line": 35,
      "type": "class"
    },
    "backend/queen-ai/app/core/security/context_manager.py::SecurityContextManager": {
      "file": "backend/queen-ai/app/core/security/context_manager.py",
      "line": 65,
      "type": "class"
    },
    "backend/queen-ai/app/core/security/prompt_protection.py::DetectionResult": {
      "file": "backend/queen-ai/app/core/security/prompt_protection.py",
      "line": 17,
      "type": "class"
    },
    "backend/queen-ai/app/core/security/prompt_protection.py::InvisibleChar": {
      "file": "backend/queen-ai/app/core/security/prompt_protection.py",
      "line": 28,
      "type": "class"
    },
    "backend/queen-ai/app/core/security/prompt_protection.py::PromptProtectionGate": {
      "file": "backend/queen-ai/app/core/security/prompt_protection.py",
      "line": 36,
      "type": "class"
    },
    "backend/queen-ai/app/core/security/output_filter.py::FilterResult": {
      "file": "backend/queen-ai/app/core/security/output_filter.py",
      "line": 16,
      "type": "class"
    },
    "backend/queen-ai/app/core/security/output_filter.py::OutputFilter": {
      "file": "backend/queen-ai/app/core/security/output_filter.py",
      "line": 25,
      "type": "class"
    },
    "backend/queen-ai/app/core/security/image_scanner.py::ScanResult": {
      "file": "backend/queen-ai/app/core/security/image_scanner.py",
      "line": 34,
      "type": "class"
    },
    "backend/queen-ai/app/core/security/image_scanner.py::ImageContentScanner": {
      "file": "backend/queen-ai/app/core/security/image_scanner.py",
      "line": 47,
      "type": "class"
    },
    "backend/queen-ai/app/llm/providers/gemini.py::GeminiProvider": {
      "file": "backend/queen-ai/app/llm/providers/gemini.py",
      "line": 19,
      "type": "class"
    },
    "backend/queen-ai/app/llm/providers/openai.py::OpenAIProvider": {
      "file": "backend/queen-ai/app/llm/providers/openai.py",
      "line": 19,
      "type": "class"
    },
    "backend/queen-ai/app/llm/providers/anthropic.py::AnthropicProvider": {
      "file": "backend/queen-ai/app/llm/providers/anthropic.py",
      "line": 19,
      "type": "class"
    },
    "omk-frontend/app/layout.tsx::RootLayout": {
      "file": "omk-frontend/app/layout.tsx",
      "line": 15,
      "type": "component"
    },
    "omk-frontend/app/page.tsx::GreetingScreen": {
      "file": "omk-frontend/app/page.tsx",
      "line": 15,
      "type": "component"
    },
    "omk-frontend/components/layout/AppShell.tsx::AppShell": {
      "file": "omk-frontend/components/layout/AppShell.tsx",
      "line": 8,
      "type": "component"
    },
    "omk-frontend/components/cards/PrivateInvestorCard.tsx::PrivateInvestorCard": {
      "file": "omk-frontend/components/cards/PrivateInvestorCard.tsx",
      "line": 20,
      "type": "component"
    },
    "omk-frontend/components/cards/WalletEducationCard.tsx::WalletEducationCard": {
      "file": "omk-frontend/components/cards/WalletEducationCard.tsx",
      "line": 16,
      "type": "component"
    },
    "omk-frontend/components/cards/MarketDataCard.tsx::MarketDataCard": {
      "file": "omk-frontend/components/cards/MarketDataCard.tsx",
      "line": 38,
      "type": "component"
    },
    "omk-frontend/components/cards/VisualWalletGuideCard.tsx::VisualWalletGuideCard": {
      "file": "omk-frontend/components/cards/VisualWalletGuideCard.tsx",
      "line": 14,
      "type": "component"
    },
    "omk-frontend/components/cards/PropertyCard.tsx::PropertyCard": {
      "file": "omk-frontend/components/cards/PropertyCard.tsx",
      "line": 28,
      "type": "component"
    },
    "omk-frontend/components/cards/DashboardCard.tsx::DashboardCard": {
      "file": "omk-frontend/components/cards/DashboardCard.tsx",
      "line": 19,
      "type": "component"
    },
    "omk-frontend/components/cards/SwapCard.tsx::SwapCard": {
      "file": "omk-frontend/components/cards/SwapCard.tsx",
      "line": 18,
      "type": "component"
    },
    "omk-frontend/components/cards/InfoCard.tsx::InfoCard": {
      "file": "omk-frontend/components/cards/InfoCard.tsx",
      "line": 21,
      "type": "component"
    },
    "omk-frontend/components/cards/OnboardingFlowCard.tsx::OnboardingFlowCard": {
      "file": "omk-frontend/components/cards/OnboardingFlowCard.tsx",
      "line": 14,
      "type": "component"
    },
    "omk-frontend/components/cards/WalletFundingGuideCard.tsx::WalletFundingGuideCard": {
      "file": "omk-frontend/components/cards/WalletFundingGuideCard.tsx",
      "line": 10,
      "type": "component"
    },
    "omk-frontend/components/cards/SwapCard.old.tsx::SwapCard": {
      "file": "omk-frontend/components/cards/SwapCard.old.tsx",
      "line": 18,
      "type": "component"
    },
    "omk-frontend/components/cards/WalletConnectCard.tsx::WalletConnectCard": {
      "file": "omk-frontend/components/cards/WalletConnectCard.tsx",
      "line": 39,
      "type": "component"
    },
    "omk-frontend/components/cards/OTCPurchaseCard.tsx::OTCPurchaseCard": {
      "file": "omk-frontend/components/cards/OTCPurchaseCard.tsx",
      "line": 30,
      "type": "component"
    },
    "omk-frontend/components/cards/InteractiveCard.tsx::InteractiveCard": {
      "file": "omk-frontend/components/cards/InteractiveCard.tsx",
      "line": 12,
      "type": "component"
    },
    "omk-frontend/components/providers/Web3Provider.tsx::Web3Provider": {
      "file": "omk-frontend/components/providers/Web3Provider.tsx",
      "line": 8,
      "type": "component"
    },
    "omk-frontend/components/providers/ThemeProvider.tsx::ThemeProvider": {
      "file": "omk-frontend/components/providers/ThemeProvider.tsx",
      "line": 6,
      "type": "component"
    },
    "omk-frontend/components/education/TeacherBeeChat.tsx::TeacherBeeChat": {
      "file": "omk-frontend/components/education/TeacherBeeChat.tsx",
      "line": 21,
      "type": "component"
    },
    "omk-frontend/components/web3/BalanceBubble.tsx::BalanceBubble": {
      "file": "omk-frontend/components/web3/BalanceBubble.tsx",
      "line": 12,
      "type": "component"
    },
    "omk-frontend/components/web3/WalletConnectModal.tsx::WalletConnectModal": {
      "file": "omk-frontend/components/web3/WalletConnectModal.tsx",
      "line": 14,
      "type": "component"
    },
    "omk-frontend/components/menu/FloatingMenu.tsx::FloatingMenu": {
      "file": "omk-frontend/components/menu/FloatingMenu.tsx",
      "line": 23,
      "type": "component"
    },
    "omk-frontend/components/interactive/ROICalculator.tsx::ROICalculator": {
      "file": "omk-frontend/components/interactive/ROICalculator.tsx",
      "line": 12,
      "type": "component"
    },
    "omk-frontend/components/interactive/ROICalculator.tsx::APY": {
      "file": "omk-frontend/components/interactive/ROICalculator.tsx",
      "line": 18,
      "type": "component"
    },
    "omk-frontend/app/kingdom/page.tsx::KingdomAdminPortal": {
      "file": "omk-frontend/app/kingdom/page.tsx",
      "line": 16,
      "type": "component"
    },
    "omk-frontend/app/kingdom/page.tsx::Icon": {
      "file": "omk-frontend/app/kingdom/page.tsx",
      "line": 1120,
      "type": "component"
    },
    "omk-frontend/app/kingdom/page.tsx::OverviewTab": {
      "file": "omk-frontend/app/kingdom/page.tsx",
      "line": 389,
      "type": "component"
    },
    "omk-frontend/app/kingdom/page.tsx::SystemConfigTab": {
      "file": "omk-frontend/app/kingdom/page.tsx",
      "line": 576,
      "type": "component"
    },
    "omk-frontend/app/kingdom/page.tsx::UsersTab": {
      "file": "omk-frontend/app/kingdom/page.tsx",
      "line": 968,
      "type": "component"
    },
    "omk-frontend/app/kingdom/page.tsx::UserManagement": {
      "file": "omk-frontend/app/kingdom/page.tsx",
      "line": 969,
      "type": "component"
    },
    "omk-frontend/app/kingdom/page.tsx::OTCManagementTab": {
      "file": "omk-frontend/app/kingdom/page.tsx",
      "line": 977,
      "type": "component"
    },
    "omk-frontend/app/kingdom/page.tsx::OTCRequestManager": {
      "file": "omk-frontend/app/kingdom/page.tsx",
      "line": 978,
      "type": "component"
    },
    "omk-frontend/app/kingdom/page.tsx::QueenDevelopmentTab": {
      "file": "omk-frontend/app/kingdom/page.tsx",
      "line": 987,
      "type": "component"
    },
    "omk-frontend/app/kingdom/page.tsx::QueenDevelopmentHub": {
      "file": "omk-frontend/app/kingdom/page.tsx",
      "line": 988,
      "type": "component"
    },
    "omk-frontend/app/kingdom/page.tsx::ClaudeAnalysisTab": {
      "file": "omk-frontend/app/kingdom/page.tsx",
      "line": 996,
      "type": "component"
    },
    "omk-frontend/app/kingdom/page.tsx::ClaudeSystemAnalysis": {
      "file": "omk-frontend/app/kingdom/page.tsx",
      "line": 997,
      "type": "component"
    },
    "omk-frontend/app/kingdom/page.tsx::DataPipelineManager": {
      "file": "omk-frontend/app/kingdom/page.tsx",
      "line": 1041,
      "type": "component"
    },
    "omk-frontend/app/kingdom/page.tsx::ElasticSearchDashboard": {
      "file": "omk-frontend/app/kingdom/page.tsx",
      "line": 1050,
      "type": "component"
    },
    "omk-frontend/app/kingdom/page.tsx::BigQueryAnalytics": {
      "file": "omk-frontend/app/kingdom/page.tsx",
      "line": 1059,
      "type": "component"
    },
    "omk-frontend/app/kingdom/page.tsx::HiveDashboardTab": {
      "file": "omk-frontend/app/kingdom/page.tsx",
      "line": 1008,
      "type": "component"
    },
    "omk-frontend/app/kingdom/page.tsx::HiveIntelligence": {
      "file": "omk-frontend/app/kingdom/page.tsx",
      "line": 1009,
      "type": "component"
    },
    "omk-frontend/app/kingdom/page.tsx::AnalyticsTab": {
      "file": "omk-frontend/app/kingdom/page.tsx",
      "line": 1024,
      "type": "component"
    },
    "omk-frontend/app/kingdom/page.tsx::EnhancedAnalytics": {
      "file": "omk-frontend/app/kingdom/page.tsx",
      "line": 1025,
      "type": "component"
    },
    "omk-frontend/app/kingdom/page.tsx::DataPipelineTab": {
      "file": "omk-frontend/app/kingdom/page.tsx",
      "line": 1040,
      "type": "component"
    },
    "omk-frontend/app/kingdom/page.tsx::ElasticSearchTab": {
      "file": "omk-frontend/app/kingdom/page.tsx",
      "line": 1049,
      "type": "component"
    },
    "omk-frontend/app/kingdom/page.tsx::BigQueryTab": {
      "file": "omk-frontend/app/kingdom/page.tsx",
      "line": 1058,
      "type": "component"
    },
    "omk-frontend/app/kingdom/page.tsx::ContractsTab": {
      "file": "omk-frontend/app/kingdom/page.tsx",
      "line": 1067,
      "type": "component"
    },
    "omk-frontend/app/kingdom/page.tsx::StatCard": {
      "file": "omk-frontend/app/kingdom/page.tsx",
      "line": 1083,
      "type": "component"
    },
    "omk-frontend/app/kingdom/page.tsx::QuickAction": {
      "file": "omk-frontend/app/kingdom/page.tsx",
      "line": 1103,
      "type": "component"
    },
    "omk-frontend/app/kingdom/page.tsx::HealthItem": {
      "file": "omk-frontend/app/kingdom/page.tsx",
      "line": 1112,
      "type": "component"
    },
    "omk-frontend/app/kingdom/page.tsx::ToggleOption": {
      "file": "omk-frontend/app/kingdom/page.tsx",
      "line": 1133,
      "type": "component"
    },
    "omk-frontend/app/chat/page.tsx::ChatInterface": {
      "file": "omk-frontend/app/chat/page.tsx",
      "line": 24,
      "type": "component"
    },
    "omk-frontend/app/swap/page.tsx::SwapPage": {
      "file": "omk-frontend/app/swap/page.tsx",
      "line": 18,
      "type": "component"
    },
    "omk-frontend/app/dashboard/page_old_backup.tsx::DashboardPage": {
      "file": "omk-frontend/app/dashboard/page_old_backup.tsx",
      "line": 17,
      "type": "component"
    },
    "omk-frontend/app/dashboard/page.tsx::DashboardPage": {
      "file": "omk-frontend/app/dashboard/page.tsx",
      "line": 20,
      "type": "component"
    },
    "omk-frontend/app/invest/page_old_backup.tsx::InvestPage": {
      "file": "omk-frontend/app/invest/page_old_backup.tsx",
      "line": 25,
      "type": "component"
    },
    "omk-frontend/app/invest/page.tsx::InvestPage": {
      "file": "omk-frontend/app/invest/page.tsx",
      "line": 20,
      "type": "component"
    },
    "omk-frontend/app/(auth)/connect/page.tsx::ConnectPage": {
      "file": "omk-frontend/app/(auth)/connect/page.tsx",
      "line": 8,
      "type": "component"
    },
    "omk-frontend/app/kingdom/components/ClaudeSystemAnalysis.tsx::BACKEND_URL": {
      "file": "omk-frontend/app/kingdom/components/ClaudeSystemAnalysis.tsx",
      "line": 11,
      "type": "component"
    },
    "omk-frontend/app/kingdom/components/ClaudeSystemAnalysis.tsx::ClaudeSystemAnalysis": {
      "file": "omk-frontend/app/kingdom/components/ClaudeSystemAnalysis.tsx",
      "line": 43,
      "type": "component"
    },
    "omk-frontend/app/kingdom/components/DataPipelineManager.tsx::BACKEND_URL": {
      "file": "omk-frontend/app/kingdom/components/DataPipelineManager.tsx",
      "line": 11,
      "type": "component"
    },
    "omk-frontend/app/kingdom/components/DataPipelineManager.tsx::DataPipelineManager": {
      "file": "omk-frontend/app/kingdom/components/DataPipelineManager.tsx",
      "line": 34,
      "type": "component"
    },
    "omk-frontend/app/kingdom/components/QueenDevelopmentHub.tsx::BACKEND_URL": {
      "file": "omk-frontend/app/kingdom/components/QueenDevelopmentHub.tsx",
      "line": 12,
      "type": "component"
    },
    "omk-frontend/app/kingdom/components/QueenDevelopmentHub.tsx::QueenDevelopmentHub": {
      "file": "omk-frontend/app/kingdom/components/QueenDevelopmentHub.tsx",
      "line": 35,
      "type": "component"
    },
    "omk-frontend/app/kingdom/components/QueenDevelopmentHub.tsx::ChatInterface": {
      "file": "omk-frontend/app/kingdom/components/QueenDevelopmentHub.tsx",
      "line": 308,
      "type": "component"
    },
    "omk-frontend/app/kingdom/components/QueenDevelopmentHub.tsx::MessageBubble": {
      "file": "omk-frontend/app/kingdom/components/QueenDevelopmentHub.tsx",
      "line": 362,
      "type": "component"
    },
    "omk-frontend/app/kingdom/components/QueenDevelopmentHub.tsx::ProposalsInterface": {
      "file": "omk-frontend/app/kingdom/components/QueenDevelopmentHub.tsx",
      "line": 398,
      "type": "component"
    },
    "omk-frontend/app/kingdom/components/QueenDevelopmentHub.tsx::ProposalCard": {
      "file": "omk-frontend/app/kingdom/components/QueenDevelopmentHub.tsx",
      "line": 434,
      "type": "component"
    },
    "omk-frontend/app/kingdom/components/QueenDevelopmentHub.tsx::Icon": {
      "file": "omk-frontend/app/kingdom/components/QueenDevelopmentHub.tsx",
      "line": 447,
      "type": "component"
    },
    "omk-frontend/app/kingdom/components/QueenDevelopmentHub.tsx::ProposalDetail": {
      "file": "omk-frontend/app/kingdom/components/QueenDevelopmentHub.tsx",
      "line": 480,
      "type": "component"
    },
    "omk-frontend/app/kingdom/components/QueenDevelopmentHub.tsx::MetadataCard": {
      "file": "omk-frontend/app/kingdom/components/QueenDevelopmentHub.tsx",
      "line": 638,
      "type": "component"
    },
    "omk-frontend/app/kingdom/components/QueenDevelopmentHub.tsx::ActionButton": {
      "file": "omk-frontend/app/kingdom/components/QueenDevelopmentHub.tsx",
      "line": 647,
      "type": "component"
    },
    "omk-frontend/app/kingdom/components/QueenDevelopmentHub.tsx::BugFixingMode": {
      "file": "omk-frontend/app/kingdom/components/QueenDevelopmentHub.tsx",
      "line": 673,
      "type": "component"
    },
    "omk-frontend/app/kingdom/components/QueenDevelopmentHub.tsx::AutonomousFixer": {
      "file": "omk-frontend/app/kingdom/components/QueenDevelopmentHub.tsx",
      "line": 674,
      "type": "component"
    },
    "omk-frontend/app/kingdom/components/QueenDevelopmentHub.tsx::DatabaseQueriesMode": {
      "file": "omk-frontend/app/kingdom/components/QueenDevelopmentHub.tsx",
      "line": 680,
      "type": "component"
    },
    "omk-frontend/app/kingdom/components/QueenDevelopmentHub.tsx::EXAMPLE_QUERIES": {
      "file": "omk-frontend/app/kingdom/components/QueenDevelopmentHub.tsx",
      "line": 685,
      "type": "component"
    },
    "omk-frontend/app/kingdom/components/ElasticSearchDashboard.tsx::BACKEND_URL": {
      "file": "omk-frontend/app/kingdom/components/ElasticSearchDashboard.tsx",
      "line": 11,
      "type": "component"
    },
    "omk-frontend/app/kingdom/components/ElasticSearchDashboard.tsx::ElasticSearchDashboard": {
      "file": "omk-frontend/app/kingdom/components/ElasticSearchDashboard.tsx",
      "line": 29,
      "type": "component"
    },
    "omk-frontend/app/kingdom/components/EnhancedAnalytics.tsx::BACKEND_URL": {
      "file": "omk-frontend/app/kingdom/components/EnhancedAnalytics.tsx",
      "line": 11,
      "type": "component"
    },
    "omk-frontend/app/kingdom/components/EnhancedAnalytics.tsx::EnhancedAnalytics": {
      "file": "omk-frontend/app/kingdom/components/EnhancedAnalytics.tsx",
      "line": 13,
      "type": "component"
    },
    "omk-frontend/app/kingdom/components/EnhancedAnalytics.tsx::MetricCard": {
      "file": "omk-frontend/app/kingdom/components/EnhancedAnalytics.tsx",
      "line": 176,
      "type": "component"
    },
    "omk-frontend/app/kingdom/components/EnhancedAnalytics.tsx::RevenueOverview": {
      "file": "omk-frontend/app/kingdom/components/EnhancedAnalytics.tsx",
      "line": 200,
      "type": "component"
    },
    "omk-frontend/app/kingdom/components/EnhancedAnalytics.tsx::UserGrowth": {
      "file": "omk-frontend/app/kingdom/components/EnhancedAnalytics.tsx",
      "line": 285,
      "type": "component"
    },
    "omk-frontend/app/kingdom/components/EnhancedAnalytics.tsx::TransactionActivity": {
      "file": "omk-frontend/app/kingdom/components/EnhancedAnalytics.tsx",
      "line": 318,
      "type": "component"
    },
    "omk-frontend/app/kingdom/components/EnhancedAnalytics.tsx::OTCPipeline": {
      "file": "omk-frontend/app/kingdom/components/EnhancedAnalytics.tsx",
      "line": 356,
      "type": "component"
    },
    "omk-frontend/app/kingdom/components/ContractDeployer_OLD_BACKUP.tsx::ContractDeployer": {
      "file": "omk-frontend/app/kingdom/components/ContractDeployer_OLD_BACKUP.tsx",
      "line": 38,
      "type": "component"
    },
    "omk-frontend/app/kingdom/components/ContractDeployer_OLD_BACKUP.tsx::Icon": {
      "file": "omk-frontend/app/kingdom/components/ContractDeployer_OLD_BACKUP.tsx",
      "line": 276,
      "type": "component"
    },
    "omk-frontend/app/kingdom/components/BigQueryAnalytics.tsx::BACKEND_URL": {
      "file": "omk-frontend/app/kingdom/components/BigQueryAnalytics.tsx",
      "line": 15,
      "type": "component"
    },
    "omk-frontend/app/kingdom/components/BigQueryAnalytics.tsx::BigQueryAnalytics": {
      "file": "omk-frontend/app/kingdom/components/BigQueryAnalytics.tsx",
      "line": 112,
      "type": "component"
    },
    "omk-frontend/app/kingdom/components/BigQueryAnalytics.tsx::Icon": {
      "file": "omk-frontend/app/kingdom/components/BigQueryAnalytics.tsx",
      "line": 210,
      "type": "component"
    },
    "omk-frontend/app/kingdom/components/ContractDeployer.tsx::ContractDeployer": {
      "file": "omk-frontend/app/kingdom/components/ContractDeployer.tsx",
      "line": 56,
      "type": "component"
    },
    "omk-frontend/app/kingdom/components/ContractDeployer.tsx::Icon": {
      "file": "omk-frontend/app/kingdom/components/ContractDeployer.tsx",
      "line": 321,
      "type": "component"
    },
    "omk-frontend/app/kingdom/components/UserManagement.tsx::BACKEND_URL": {
      "file": "omk-frontend/app/kingdom/components/UserManagement.tsx",
      "line": 11,
      "type": "component"
    },
    "omk-frontend/app/kingdom/components/UserManagement.tsx::UserManagement": {
      "file": "omk-frontend/app/kingdom/components/UserManagement.tsx",
      "line": 13,
      "type": "component"
    },
    "omk-frontend/app/kingdom/components/UserManagement.tsx::StatBox": {
      "file": "omk-frontend/app/kingdom/components/UserManagement.tsx",
      "line": 250,
      "type": "component"
    },
    "omk-frontend/app/kingdom/components/UserManagement.tsx::StatusBadge": {
      "file": "omk-frontend/app/kingdom/components/UserManagement.tsx",
      "line": 269,
      "type": "component"
    },
    "omk-frontend/app/kingdom/components/UserManagement.tsx::UserDetailModal": {
      "file": "omk-frontend/app/kingdom/components/UserManagement.tsx",
      "line": 285,
      "type": "component"
    },
    "omk-frontend/app/kingdom/components/TestnetUtilities.tsx::TestnetUtilities": {
      "file": "omk-frontend/app/kingdom/components/TestnetUtilities.tsx",
      "line": 14,
      "type": "component"
    },
    "omk-frontend/app/kingdom/components/QueenDevelopment.tsx::BACKEND_URL": {
      "file": "omk-frontend/app/kingdom/components/QueenDevelopment.tsx",
      "line": 12,
      "type": "component"
    },
    "omk-frontend/app/kingdom/components/QueenDevelopment.tsx::QueenDevelopment": {
      "file": "omk-frontend/app/kingdom/components/QueenDevelopment.tsx",
      "line": 35,
      "type": "component"
    },
    "omk-frontend/app/kingdom/components/QueenDevelopment.tsx::ChatInterface": {
      "file": "omk-frontend/app/kingdom/components/QueenDevelopment.tsx",
      "line": 264,
      "type": "component"
    },
    "omk-frontend/app/kingdom/components/QueenDevelopment.tsx::MessageBubble": {
      "file": "omk-frontend/app/kingdom/components/QueenDevelopment.tsx",
      "line": 318,
      "type": "component"
    },
    "omk-frontend/app/kingdom/components/QueenDevelopment.tsx::ProposalsInterface": {
      "file": "omk-frontend/app/kingdom/components/QueenDevelopment.tsx",
      "line": 354,
      "type": "component"
    },
    "omk-frontend/app/kingdom/components/QueenDevelopment.tsx::ProposalCard": {
      "file": "omk-frontend/app/kingdom/components/QueenDevelopment.tsx",
      "line": 390,
      "type": "component"
    },
    "omk-frontend/app/kingdom/components/QueenDevelopment.tsx::Icon": {
      "file": "omk-frontend/app/kingdom/components/QueenDevelopment.tsx",
      "line": 403,
      "type": "component"
    },
    "omk-frontend/app/kingdom/components/QueenDevelopment.tsx::ProposalDetail": {
      "file": "omk-frontend/app/kingdom/components/QueenDevelopment.tsx",
      "line": 436,
      "type": "component"
    },
    "omk-frontend/app/kingdom/components/QueenDevelopment.tsx::MetadataCard": {
      "file": "omk-frontend/app/kingdom/components/QueenDevelopment.tsx",
      "line": 594,
      "type": "component"
    },
    "omk-frontend/app/kingdom/components/QueenDevelopment.tsx::ActionButton": {
      "file": "omk-frontend/app/kingdom/components/QueenDevelopment.tsx",
      "line": 603,
      "type": "component"
    },
    "omk-frontend/app/kingdom/components/HiveIntelligence.tsx::BACKEND_URL": {
      "file": "omk-frontend/app/kingdom/components/HiveIntelligence.tsx",
      "line": 12,
      "type": "component"
    },
    "omk-frontend/app/kingdom/components/HiveIntelligence.tsx::HiveIntelligence": {
      "file": "omk-frontend/app/kingdom/components/HiveIntelligence.tsx",
      "line": 14,
      "type": "component"
    },
    "omk-frontend/app/kingdom/components/HiveIntelligence.tsx::StatCard": {
      "file": "omk-frontend/app/kingdom/components/HiveIntelligence.tsx",
      "line": 181,
      "type": "component"
    },
    "omk-frontend/app/kingdom/components/HiveIntelligence.tsx::LiveActivityFeed": {
      "file": "omk-frontend/app/kingdom/components/HiveIntelligence.tsx",
      "line": 205,
      "type": "component"
    },
    "omk-frontend/app/kingdom/components/HiveIntelligence.tsx::MessageBusStats": {
      "file": "omk-frontend/app/kingdom/components/HiveIntelligence.tsx",
      "line": 244,
      "type": "component"
    },
    "omk-frontend/app/kingdom/components/HiveIntelligence.tsx::BeePerformanceGrid": {
      "file": "omk-frontend/app/kingdom/components/HiveIntelligence.tsx",
      "line": 313,
      "type": "component"
    },
    "omk-frontend/app/kingdom/components/HiveIntelligence.tsx::HiveBoardStats": {
      "file": "omk-frontend/app/kingdom/components/HiveIntelligence.tsx",
      "line": 378,
      "type": "component"
    },
    "omk-frontend/app/kingdom/components/OTCRequestManager.tsx::OTCRequestManager": {
      "file": "omk-frontend/app/kingdom/components/OTCRequestManager.tsx",
      "line": 20,
      "type": "component"
    },
    "omk-frontend/app/kingdom/components/OTCRequestManager.tsx::StatusIcon": {
      "file": "omk-frontend/app/kingdom/components/OTCRequestManager.tsx",
      "line": 176,
      "type": "component"
    },
    "omk-frontend/app/kingdom/components/AutonomousFixer.tsx::BACKEND_URL": {
      "file": "omk-frontend/app/kingdom/components/AutonomousFixer.tsx",
      "line": 12,
      "type": "component"
    },
    "omk-frontend/app/kingdom/components/AutonomousFixer.tsx::AutonomousFixer": {
      "file": "omk-frontend/app/kingdom/components/AutonomousFixer.tsx",
      "line": 27,
      "type": "component"
    },
    "omk-frontend/app/kingdom/components/HiveMonitor.tsx::HiveMonitor": {
      "file": "omk-frontend/app/kingdom/components/HiveMonitor.tsx",
      "line": 18,
      "type": "component"
    },
    "omk-frontend/app/kingdom/components/HiveMonitor.tsx::StatusIcon": {
      "file": "omk-frontend/app/kingdom/components/HiveMonitor.tsx",
      "line": 139,
      "type": "component"
    },
    "omk-frontend/app/kingdom/login/page.tsx::KingdomLogin": {
      "file": "omk-frontend/app/kingdom/login/page.tsx",
      "line": 8,
      "type": "component"
    },
    "omk-frontend/app/learn/wallets/page.tsx::LearnWalletsPage": {
      "file": "omk-frontend/app/learn/wallets/page.tsx",
      "line": 9,
      "type": "component"
    },
    "omk-frontend/lib/api.ts::API_BASE_URL": {
      "file": "omk-frontend/lib/api.ts",
      "line": 3,
      "type": "component"
    },
    "omk-frontend/services/queenApi.ts::QUEEN_API_BASE": {
      "file": "omk-frontend/services/queenApi.ts",
      "line": 6,
      "type": "component"
    },
    "omk-frontend/lib/contracts/dispenser.ts::DISPENSER_ADDRESS": {
      "file": "omk-frontend/lib/contracts/dispenser.ts",
      "line": 6,
      "type": "component"
    },
    "omk-frontend/lib/contracts/dispenser.ts::DISPENSER_ABI": {
      "file": "omk-frontend/lib/contracts/dispenser.ts",
      "line": 8,
      "type": "component"
    },
    "omk-frontend/lib/contracts/dispenser.ts::SUPPORTED_TOKENS": {
      "file": "omk-frontend/lib/contracts/dispenser.ts",
      "line": 99,
      "type": "component"
    },
    "omk-frontend/lib/contracts/dispenser.ts::ERC20_ABI": {
      "file": "omk-frontend/lib/contracts/dispenser.ts",
      "line": 127,
      "type": "component"
    },
    "omk-frontend/app/hooks/useWebSocket.ts::BACKEND_URL": {
      "file": "omk-frontend/app/hooks/useWebSocket.ts",
      "line": 176,
      "type": "component"
    },
    "omk-frontend/app/api/analytics/conversion/route.ts::POST": {
      "file": "omk-frontend/app/api/analytics/conversion/route.ts",
      "line": 5,
      "type": "component"
    },
    "omk-frontend/app/api/analytics/conversion/route.ts::GET": {
      "file": "omk-frontend/app/api/analytics/conversion/route.ts",
      "line": 97,
      "type": "component"
    },
    "omk-frontend/app/api/teacher-bee/analyze-screenshot/route.ts::POST": {
      "file": "omk-frontend/app/api/teacher-bee/analyze-screenshot/route.ts",
      "line": 3,
      "type": "component"
    }
  },
  "keywords": {
    "database": [
      "backend/queen-ai/setup_database.py",
      "backend/queen-ai/setup_env.py",
      "backend/queen-ai/start.py",
      "backend/queen-ai/debug.py",
      "backend/queen-ai/test_lifecycle_management.py",
      "backend/queen-ai/health_check.py",
      "backend/queen-ai/check_env.py",
      "backend/queen-ai/manage.py",
      "backend/queen-ai/main.py",
      "backend/queen-ai/status.py",
      "backend/queen-ai/integration_tests/__init__.py",
      "backend/queen-ai/tests/test_database.py",
      "backend/queen-ai/tests/test_integration.py",
      "backend/queen-ai/tests/test_auth_endpoints.py",
      "backend/queen-ai/alembic/env.py",
      "backend/queen-ai/app/database/models.py",
      "backend/queen-ai/app/database/connection.py",
      "backend/queen-ai/app/database/seed.py",
      "backend/queen-ai/app/database/init_db.py",
      "backend/queen-ai/app/tools/database_query_tool.py",
      "backend/queen-ai/app/llm/system_knowledge.py",
      "backend/queen-ai/app/bees/security_bee.py",
      "backend/queen-ai/app/bees/pattern_bee.py",
      "backend/queen-ai/app/bees/governance_bee.py",
      "backend/queen-ai/app/bees/private_sale_bee.py",
      "backend/queen-ai/app/bees/manager.py",
      "backend/queen-ai/app/bees/onboarding_bee.py",
      "backend/queen-ai/app/core/security.py",
      "backend/queen-ai/app/core/stateless_architecture.py",
      "backend/queen-ai/app/config/settings.py",
      "backend/queen-ai/app/models/database.py",
      "backend/queen-ai/app/models/system_config.py",
      "backend/queen-ai/app/integrations/claude_integration.py",
      "backend/queen-ai/app/db/models.py",
      "backend/queen-ai/app/db/__init__.py",
      "backend/queen-ai/app/db/base.py",
      "backend/queen-ai/app/api/health.py",
      "backend/queen-ai/app/services/context_analyzer.py",
      "backend/queen-ai/app/api/v1/auth.py",
      "backend/queen-ai/app/api/v1/frontend.py",
      "backend/queen-ai/app/api/v1/admin.py",
      "backend/queen-ai/app/api/v1/contracts.py",
      "backend/queen-ai/app/api/v1/claude_analysis.py",
      "backend/queen-ai/app/api/v1/claude_analysis_old_backup.py",
      "backend/queen-ai/app/api/v1/websocket.py",
      "backend/queen-ai/app/core/security/output_filter.py",
      "omk-frontend/app/kingdom/page.tsx",
      "omk-frontend/app/kingdom/components/DataPipelineManager.tsx",
      "omk-frontend/app/kingdom/components/QueenDevelopmentHub.tsx",
      "omk-frontend/app/kingdom/components/BigQueryAnalytics.tsx",
      "omk-frontend/app/api/analytics/conversion/route.ts"
    ],
    "error": [
      "backend/queen-ai/setup_database.py",
      "backend/queen-ai/setup_env.py",
      "backend/queen-ai/initialize_elastic.py",
      "backend/queen-ai/test_data_pipeline_bee.py",
      "backend/queen-ai/full_pipeline_test.py",
      "backend/queen-ai/stop.py",
      "backend/queen-ai/test_llm_providers.py",
      "backend/queen-ai/test_private_sale.py",
      "backend/queen-ai/start.py",
      "backend/queen-ai/debug.py",
      "backend/queen-ai/reboot.py",
      "backend/queen-ai/test_lifecycle_management.py",
      "backend/queen-ai/health_check.py",
      "backend/queen-ai/check_env.py",
      "backend/queen-ai/manage.py",
      "backend/queen-ai/simple_bee_test.py",
      "backend/queen-ai/status.py",
      "backend/queen-ai/integration_tests/test_blockchain_integration.py",
      "backend/queen-ai/integration_tests/test_llm_integration.py",
      "backend/queen-ai/tests/test_bees.py",
      "backend/queen-ai/tests/test_integration.py",
      "backend/queen-ai/app/database/connection.py",
      "backend/queen-ai/app/database/init_db.py",
      "backend/queen-ai/app/tools/codebase_navigator.py",
      "backend/queen-ai/app/tools/database_query_tool.py",
      "backend/queen-ai/app/llm/memory.py",
      "backend/queen-ai/app/llm/abstraction.py",
      "backend/queen-ai/app/llm/system_knowledge.py",
      "backend/queen-ai/app/bees/security_bee.py",
      "backend/queen-ai/app/bees/enhanced_security_bee.py",
      "backend/queen-ai/app/bees/pattern_bee.py",
      "backend/queen-ai/app/bees/user_experience_bee.py",
      "backend/queen-ai/app/bees/visualization_bee.py",
      "backend/queen-ai/app/bees/governance_bee.py",
      "backend/queen-ai/app/bees/private_sale_bee.py",
      "backend/queen-ai/app/bees/tokenization_bee.py",
      "backend/queen-ai/app/bees/data_bee.py",
      "backend/queen-ai/app/bees/logic_bee.py",
      "backend/queen-ai/app/bees/liquidity_sentinel_bee.py",
      "backend/queen-ai/app/bees/purchase_bee.py",
      "backend/queen-ai/app/bees/maths_bee.py",
      "backend/queen-ai/app/bees/data_pipeline_bee.py",
      "backend/queen-ai/app/bees/monitoring_bee.py",
      "backend/queen-ai/app/bees/bridge_bee.py",
      "backend/queen-ai/app/bees/stake_bot_bee.py",
      "backend/queen-ai/app/bees/blockchain_bee.py",
      "backend/queen-ai/app/bees/manager.py",
      "backend/queen-ai/app/bees/base.py",
      "backend/queen-ai/app/bees/treasury_bee.py",
      "backend/queen-ai/app/bees/onboarding_bee.py",
      "backend/queen-ai/app/core/distributed_lock.py",
      "backend/queen-ai/app/core/state_manager.py",
      "backend/queen-ai/app/core/enhanced_claude_integration.py",
      "backend/queen-ai/app/core/system_reboot_manager.py",
      "backend/queen-ai/app/core/hive_board.py",
      "backend/queen-ai/app/core/redis_hive_board.py",
      "backend/queen-ai/app/core/autonomous_fixer.py",
      "backend/queen-ai/app/core/redis_message_bus.py",
      "backend/queen-ai/app/core/session_manager.py",
      "backend/queen-ai/app/core/decision_engine.py",
      "backend/queen-ai/app/core/enhanced_sandbox_system.py",
      "backend/queen-ai/app/core/bug_analyzer.py",
      "backend/queen-ai/app/core/orchestrator.py",
      "backend/queen-ai/app/core/queen_system_manager.py",
      "backend/queen-ai/app/core/code_proposal_system.py",
      "backend/queen-ai/app/core/emergency_controls.py",
      "backend/queen-ai/app/core/stateless_architecture.py",
      "backend/queen-ai/app/learning/observer.py",
      "backend/queen-ai/app/learning/bigquery_logger.py",
      "backend/queen-ai/app/uagents/integration.py",
      "backend/queen-ai/app/agents/market_data_agent.py",
      "backend/queen-ai/app/utils/logging_config.py",
      "backend/queen-ai/app/utils/deployment_helpers.py",
      "backend/queen-ai/app/utils/blockchain.py",
      "backend/queen-ai/app/models/database.py",
      "backend/queen-ai/app/integrations/elastic_search.py",
      "backend/queen-ai/app/integrations/test_elastic.py",
      "backend/queen-ai/app/integrations/claude_integration.py",
      "backend/queen-ai/app/blockchain/solana_client.py",
      "backend/queen-ai/app/blockchain/bridge.py",
      "backend/queen-ai/app/blockchain/solana_rpc_client.py",
      "backend/queen-ai/app/blockchain/transaction_manager.py",
      "backend/queen-ai/app/blockchain/ethereum_client.py",
      "backend/queen-ai/app/db/models.py",
      "backend/queen-ai/app/api/health.py",
      "backend/queen-ai/app/services/context_analyzer.py",
      "backend/queen-ai/app/api/v1/queen_dev.py",
      "backend/queen-ai/app/api/v1/market.py",
      "backend/queen-ai/app/api/v1/queen.py",
      "backend/queen-ai/app/api/v1/frontend.py",
      "backend/queen-ai/app/api/v1/autonomous_dev.py",
      "backend/queen-ai/app/api/v1/admin_claude.py",
      "backend/queen-ai/app/api/v1/admin.py",
      "backend/queen-ai/app/api/v1/contracts.py",
      "backend/queen-ai/app/api/v1/notifications.py",
      "backend/queen-ai/app/api/v1/claude_analysis.py",
      "backend/queen-ai/app/api/v1/claude_analysis_old_backup.py",
      "backend/queen-ai/app/api/v1/websocket.py",
      "backend/queen-ai/app/api/v1/endpoints/teacher_bee.py",
      "backend/queen-ai/app/blockchain/oracles/pyth_oracle.py",
      "backend/queen-ai/app/blockchain/oracles/chainlink_oracle.py",
      "backend/queen-ai/app/blockchain/dex/uniswap_router.py",
      "backend/queen-ai/app/blockchain/dex/raydium_router.py",
      "backend/queen-ai/app/integrations/data_collectors/price_oracles.py",
      "backend/queen-ai/app/integrations/data_collectors/dex_pools.py",
      "backend/queen-ai/app/integrations/data_collectors/blockchain_transactions.py",
      "backend/queen-ai/app/core/security/context_manager.py",
      "backend/queen-ai/app/core/security/output_filter.py",
      "backend/queen-ai/app/core/security/image_scanner.py",
      "backend/queen-ai/app/llm/providers/gemini.py",
      "backend/queen-ai/app/llm/providers/openai.py",
      "backend/queen-ai/app/llm/providers/anthropic.py",
      "omk-frontend/app/page.tsx",
      "omk-frontend/components/cards/PrivateInvestorCard.tsx",
      "omk-frontend/components/cards/MarketDataCard.tsx",
      "omk-frontend/components/cards/SwapCard.tsx",
      "omk-frontend/components/cards/WalletConnectCard.tsx",
      "omk-frontend/components/cards/OTCPurchaseCard.tsx",
      "omk-frontend/components/education/TeacherBeeChat.tsx",
      "omk-frontend/app/kingdom/page.tsx",
      "omk-frontend/app/chat/page.tsx",
      "omk-frontend/app/components/ErrorBoundary.tsx",
      "omk-frontend/app/kingdom/components/ClaudeSystemAnalysis.tsx",
      "omk-frontend/app/kingdom/components/DataPipelineManager.tsx",
      "omk-frontend/app/kingdom/components/QueenDevelopmentHub.tsx",
      "omk-frontend/app/kingdom/components/ElasticSearchDashboard.tsx",
      "omk-frontend/app/kingdom/components/EnhancedAnalytics.tsx",
      "omk-frontend/app/kingdom/components/ContractDeployer_OLD_BACKUP.tsx",
      "omk-frontend/app/kingdom/components/BigQueryAnalytics.tsx",
      "omk-frontend/app/kingdom/components/ContractDeployer.tsx",
      "omk-frontend/app/kingdom/components/UserManagement.tsx",
      "omk-frontend/app/kingdom/components/TestnetUtilities.tsx",
      "omk-frontend/app/kingdom/components/QueenDevelopment.tsx",
      "omk-frontend/app/kingdom/components/HiveIntelligence.tsx",
      "omk-frontend/app/kingdom/components/OTCRequestManager.tsx",
      "omk-frontend/app/kingdom/components/AutonomousFixer.tsx",
      "omk-frontend/app/kingdom/components/HiveMonitor.tsx",
      "omk-frontend/app/kingdom/login/page.tsx",
      "omk-frontend/lib/translations.ts",
      "omk-frontend/services/queenApi.ts",
      "omk-frontend/lib/ai/teacherBee.ts",
      "omk-frontend/app/hooks/useWebSocket.ts",
      "omk-frontend/app/api/analytics/conversion/route.ts",
      "omk-frontend/app/api/teacher-bee/analyze-screenshot/route.ts"
    ],
    "token": [
      "backend/queen-ai/run_bee_tests.py",
      "backend/queen-ai/test_private_sale.py",
      "backend/queen-ai/simple_bee_test.py",
      "backend/queen-ai/integration_tests/test_blockchain_integration.py",
      "backend/queen-ai/tests/test_bees.py",
      "backend/queen-ai/tests/test_database.py",
      "backend/queen-ai/tests/test_auth_endpoints.py",
      "backend/queen-ai/tests/security/test_output_filter.py",
      "backend/queen-ai/tests/security/test_prompt_protection.py",
      "backend/queen-ai/app/database/auth.py",
      "backend/queen-ai/app/database/models.py",
      "backend/queen-ai/app/database/seed.py",
      "backend/queen-ai/app/llm/abstraction.py",
      "backend/queen-ai/app/bees/user_experience_bee.py",
      "backend/queen-ai/app/bees/visualization_bee.py",
      "backend/queen-ai/app/bees/governance_bee.py",
      "backend/queen-ai/app/bees/private_sale_bee.py",
      "backend/queen-ai/app/bees/tokenization_bee.py",
      "backend/queen-ai/app/bees/liquidity_sentinel_bee.py",
      "backend/queen-ai/app/bees/purchase_bee.py",
      "backend/queen-ai/app/bees/maths_bee.py",
      "backend/queen-ai/app/bees/blockchain_bee.py",
      "backend/queen-ai/app/bees/manager.py",
      "backend/queen-ai/app/agents/market_data_agent.py",
      "backend/queen-ai/app/models/system_config.py",
      "backend/queen-ai/app/blockchain/solana_client.py",
      "backend/queen-ai/app/blockchain/solana_rpc_client.py",
      "backend/queen-ai/app/db/models.py",
      "backend/queen-ai/app/services/context_analyzer.py",
      "backend/queen-ai/app/api/v1/auth.py",
      "backend/queen-ai/app/api/v1/market.py",
      "backend/queen-ai/app/api/v1/frontend.py",
      "backend/queen-ai/app/api/v1/admin.py",
      "backend/queen-ai/app/api/v1/endpoints/teacher_bee.py",
      "backend/queen-ai/app/blockchain/oracles/pyth_oracle.py",
      "backend/queen-ai/app/blockchain/oracles/chainlink_oracle.py",
      "backend/queen-ai/app/blockchain/dex/uniswap_router.py",
      "backend/queen-ai/app/blockchain/dex/raydium_router.py",
      "backend/queen-ai/app/core/security/image_scanner.py",
      "omk-frontend/components/cards/PrivateInvestorCard.tsx",
      "omk-frontend/components/cards/MarketDataCard.tsx",
      "omk-frontend/components/cards/SwapCard.tsx",
      "omk-frontend/components/cards/OnboardingFlowCard.tsx",
      "omk-frontend/components/cards/SwapCard.old.tsx",
      "omk-frontend/components/cards/OTCPurchaseCard.tsx",
      "omk-frontend/components/web3/BalanceBubble.tsx",
      "omk-frontend/app/kingdom/page.tsx",
      "omk-frontend/app/chat/page.tsx",
      "omk-frontend/app/swap/page.tsx",
      "omk-frontend/app/dashboard/page_old_backup.tsx",
      "omk-frontend/app/kingdom/components/ClaudeSystemAnalysis.tsx",
      "omk-frontend/app/kingdom/components/DataPipelineManager.tsx",
      "omk-frontend/app/kingdom/components/QueenDevelopmentHub.tsx",
      "omk-frontend/app/kingdom/components/ElasticSearchDashboard.tsx",
      "omk-frontend/app/kingdom/components/EnhancedAnalytics.tsx",
      "omk-frontend/app/kingdom/components/BigQueryAnalytics.tsx",
      "omk-frontend/app/kingdom/components/ContractDeployer.tsx",
      "omk-frontend/app/kingdom/components/UserManagement.tsx",
      "omk-frontend/app/kingdom/components/QueenDevelopment.tsx",
      "omk-frontend/app/kingdom/components/HiveIntelligence.tsx",
      "omk-frontend/app/kingdom/components/OTCRequestManager.tsx",
      "omk-frontend/app/kingdom/components/AutonomousFixer.tsx",
      "omk-frontend/app/kingdom/components/HiveMonitor.tsx",
      "omk-frontend/app/kingdom/login/page.tsx",
      "omk-frontend/stores/authStore.ts",
      "omk-frontend/lib/api.ts",
      "omk-frontend/lib/translations.ts",
      "omk-frontend/lib/store.ts",
      "omk-frontend/lib/contracts/dispenser.ts",
      "omk-frontend/lib/ai/teacherBee.ts"
    ],
    "security": [
      "backend/queen-ai/run_bee_tests.py",
      "backend/queen-ai/setup_env.py",
      "backend/queen-ai/full_pipeline_test.py",
      "backend/queen-ai/health_check.py",
      "backend/queen-ai/simple_bee_test.py",
      "backend/queen-ai/tests/test_bees.py",
      "backend/queen-ai/tests/security/test_output_filter.py",
      "backend/queen-ai/tests/security/__init__.py",
      "backend/queen-ai/tests/security/test_prompt_protection.py",
      "backend/queen-ai/app/database/auth.py",
      "backend/queen-ai/app/llm/system_knowledge.py",
      "backend/queen-ai/app/bees/security_bee.py",
      "backend/queen-ai/app/bees/enhanced_security_bee.py",
      "backend/queen-ai/app/bees/user_experience_bee.py",
      "backend/queen-ai/app/bees/private_sale_bee.py",
      "backend/queen-ai/app/bees/logic_bee.py",
      "backend/queen-ai/app/bees/monitoring_bee.py",
      "backend/queen-ai/app/bees/manager.py",
      "backend/queen-ai/app/core/message_bus.py",
      "backend/queen-ai/app/core/enhanced_claude_integration.py",
      "backend/queen-ai/app/core/hive_board.py",
      "backend/queen-ai/app/core/security.py",
      "backend/queen-ai/app/core/orchestrator.py",
      "backend/queen-ai/app/core/queen_system_manager.py",
      "backend/queen-ai/app/core/emergency_controls.py",
      "backend/queen-ai/app/config/settings.py",
      "backend/queen-ai/app/uagents/integration.py",
      "backend/queen-ai/app/utils/logging_config.py",
      "backend/queen-ai/app/integrations/claude_integration.py",
      "backend/queen-ai/app/api/v1/queen_dev.py",
      "backend/queen-ai/app/api/v1/frontend.py",
      "backend/queen-ai/app/api/v1/admin_claude.py",
      "backend/queen-ai/app/api/v1/admin.py",
      "backend/queen-ai/app/api/v1/claude_analysis.py",
      "backend/queen-ai/app/api/v1/claude_analysis_old_backup.py",
      "backend/queen-ai/app/api/v1/endpoints/teacher_bee.py",
      "backend/queen-ai/app/core/security/context_manager.py",
      "backend/queen-ai/app/core/security/output_filter.py",
      "backend/queen-ai/app/core/security/__init__.py",
      "backend/queen-ai/app/core/security/image_scanner.py",
      "omk-frontend/components/cards/WalletEducationCard.tsx",
      "omk-frontend/components/cards/WalletConnectCard.tsx",
      "omk-frontend/components/education/TeacherBeeChat.tsx",
      "omk-frontend/components/web3/WalletConnectModal.tsx",
      "omk-frontend/app/chat/page.tsx",
      "omk-frontend/app/kingdom/components/ClaudeSystemAnalysis.tsx",
      "omk-frontend/app/kingdom/components/ElasticSearchDashboard.tsx",
      "omk-frontend/app/kingdom/login/page.tsx",
      "omk-frontend/app/learn/wallets/page.tsx",
      "omk-frontend/lib/ai/teacherBee.ts"
    ],
    "transaction": [
      "backend/queen-ai/run_bee_tests.py",
      "backend/queen-ai/simple_bee_test.py",
      "backend/queen-ai/integration_tests/test_blockchain_integration.py",
      "backend/queen-ai/app/database/models.py",
      "backend/queen-ai/app/bees/security_bee.py",
      "backend/queen-ai/app/bees/user_experience_bee.py",
      "backend/queen-ai/app/bees/tokenization_bee.py",
      "backend/queen-ai/app/bees/data_bee.py",
      "backend/queen-ai/app/bees/purchase_bee.py",
      "backend/queen-ai/app/bees/monitoring_bee.py",
      "backend/queen-ai/app/bees/bridge_bee.py",
      "backend/queen-ai/app/bees/blockchain_bee.py",
      "backend/queen-ai/app/core/redis_hive_board.py",
      "backend/queen-ai/app/learning/bigquery_logger.py",
      "backend/queen-ai/app/utils/logging_config.py",
      "backend/queen-ai/app/utils/deployment_helpers.py",
      "backend/queen-ai/app/utils/blockchain.py",
      "backend/queen-ai/app/models/database.py",
      "backend/queen-ai/app/integrations/elastic_search.py",
      "backend/queen-ai/app/blockchain/solana_client.py",
      "backend/queen-ai/app/blockchain/bridge.py",
      "backend/queen-ai/app/blockchain/solana_rpc_client.py",
      "backend/queen-ai/app/blockchain/transaction_manager.py",
      "backend/queen-ai/app/blockchain/ethereum_client.py",
      "backend/queen-ai/app/db/models.py",
      "backend/queen-ai/app/api/v1/frontend.py",
      "backend/queen-ai/app/api/v1/admin.py",
      "backend/queen-ai/app/api/v1/endpoints/teacher_bee.py",
      "backend/queen-ai/app/blockchain/dex/uniswap_router.py",
      "backend/queen-ai/app/blockchain/dex/raydium_router.py",
      "backend/queen-ai/app/integrations/data_collectors/blockchain_transactions.py",
      "omk-frontend/components/cards/SwapCard.tsx",
      "omk-frontend/components/cards/WalletFundingGuideCard.tsx",
      "omk-frontend/components/cards/SwapCard.old.tsx",
      "omk-frontend/components/cards/WalletConnectCard.tsx",
      "omk-frontend/components/cards/OTCPurchaseCard.tsx",
      "omk-frontend/components/web3/WalletConnectModal.tsx",
      "omk-frontend/app/chat/page.tsx",
      "omk-frontend/app/swap/page.tsx",
      "omk-frontend/app/dashboard/page_old_backup.tsx",
      "omk-frontend/app/kingdom/components/ElasticSearchDashboard.tsx",
      "omk-frontend/app/kingdom/components/EnhancedAnalytics.tsx",
      "omk-frontend/app/kingdom/components/BigQueryAnalytics.tsx",
      "omk-frontend/app/kingdom/components/ContractDeployer.tsx",
      "omk-frontend/lib/ai/teacherBee.ts"
    ],
    "query": [
      "backend/queen-ai/run_bee_tests.py",
      "backend/queen-ai/test_data_pipeline_bee.py",
      "backend/queen-ai/full_pipeline_test.py",
      "backend/queen-ai/simple_bee_test.py",
      "backend/queen-ai/integration_tests/test_blockchain_integration.py",
      "backend/queen-ai/tests/test_bees.py",
      "backend/queen-ai/tests/test_database.py",
      "backend/queen-ai/tests/test_integration.py",
      "backend/queen-ai/tests/security/test_output_filter.py",
      "backend/queen-ai/app/database/auth.py",
      "backend/queen-ai/app/database/seed.py",
      "backend/queen-ai/app/tools/database_query_tool.py",
      "backend/queen-ai/app/llm/memory.py",
      "backend/queen-ai/app/bees/governance_bee.py",
      "backend/queen-ai/app/bees/private_sale_bee.py",
      "backend/queen-ai/app/bees/tokenization_bee.py",
      "backend/queen-ai/app/bees/data_bee.py",
      "backend/queen-ai/app/bees/purchase_bee.py",
      "backend/queen-ai/app/bees/stake_bot_bee.py",
      "backend/queen-ai/app/bees/manager.py",
      "backend/queen-ai/app/bees/treasury_bee.py",
      "backend/queen-ai/app/bees/onboarding_bee.py",
      "backend/queen-ai/app/core/message_bus.py",
      "backend/queen-ai/app/core/hive_board.py",
      "backend/queen-ai/app/core/redis_hive_board.py",
      "backend/queen-ai/app/core/orchestrator.py",
      "backend/queen-ai/app/core/stateless_architecture.py",
      "backend/queen-ai/app/learning/observer.py",
      "backend/queen-ai/app/learning/bigquery_logger.py",
      "backend/queen-ai/app/uagents/integration.py",
      "backend/queen-ai/app/agents/market_data_agent.py",
      "backend/queen-ai/app/models/database.py",
      "backend/queen-ai/app/integrations/elastic_search.py",
      "backend/queen-ai/app/blockchain/bridge.py",
      "backend/queen-ai/app/api/v1/auth.py",
      "backend/queen-ai/app/api/v1/market.py",
      "backend/queen-ai/app/api/v1/autonomous_dev.py",
      "backend/queen-ai/app/api/v1/admin.py",
      "backend/queen-ai/app/blockchain/dex/raydium_router.py",
      "backend/queen-ai/app/integrations/data_collectors/dex_pools.py",
      "omk-frontend/components/cards/SwapCard.old.tsx",
      "omk-frontend/components/providers/Web3Provider.tsx",
      "omk-frontend/app/invest/page_old_backup.tsx",
      "omk-frontend/app/kingdom/components/QueenDevelopmentHub.tsx",
      "omk-frontend/app/kingdom/components/ElasticSearchDashboard.tsx",
      "omk-frontend/app/kingdom/components/BigQueryAnalytics.tsx",
      "omk-frontend/app/api/analytics/conversion/route.ts"
    ],
    "validation": [
      "backend/queen-ai/run_bee_tests.py",
      "backend/queen-ai/setup_env.py",
      "backend/queen-ai/full_pipeline_test.py",
      "backend/queen-ai/start.py",
      "backend/queen-ai/reboot.py",
      "backend/queen-ai/simple_bee_test.py",
      "backend/queen-ai/tests/test_bees.py",
      "backend/queen-ai/tests/security/test_output_filter.py",
      "backend/queen-ai/app/tools/codebase_navigator.py",
      "backend/queen-ai/app/llm/system_knowledge.py",
      "backend/queen-ai/app/bees/security_bee.py",
      "backend/queen-ai/app/bees/enhanced_security_bee.py",
      "backend/queen-ai/app/bees/governance_bee.py",
      "backend/queen-ai/app/bees/private_sale_bee.py",
      "backend/queen-ai/app/bees/base.py",
      "backend/queen-ai/app/bees/treasury_bee.py",
      "backend/queen-ai/app/bees/onboarding_bee.py",
      "backend/queen-ai/app/core/decision_engine.py",
      "backend/queen-ai/app/core/enhanced_sandbox_system.py",
      "backend/queen-ai/app/core/queen_system_manager.py",
      "backend/queen-ai/app/learning/observer.py",
      "backend/queen-ai/app/learning/bigquery_logger.py",
      "backend/queen-ai/app/uagents/integration.py",
      "backend/queen-ai/app/integrations/test_elastic.py",
      "backend/queen-ai/app/blockchain/bridge.py",
      "backend/queen-ai/app/api/v1/queen_dev.py",
      "backend/queen-ai/app/api/v1/frontend.py",
      "backend/queen-ai/app/api/v1/autonomous_dev.py",
      "backend/queen-ai/app/api/v1/admin_claude.py",
      "backend/queen-ai/app/api/v1/admin.py",
      "backend/queen-ai/app/core/security/image_scanner.py",
      "omk-frontend/components/cards/PrivateInvestorCard.tsx"
    ],
    "api": [
      "backend/queen-ai/setup_env.py",
      "backend/queen-ai/test_solana_client.py",
      "backend/queen-ai/initialize_elastic.py",
      "backend/queen-ai/test_llm_providers.py",
      "backend/queen-ai/start.py",
      "backend/queen-ai/test_elastic_connection.py",
      "backend/queen-ai/test_lifecycle_management.py",
      "backend/queen-ai/health_check.py",
      "backend/queen-ai/check_env.py",
      "backend/queen-ai/main.py",
      "backend/queen-ai/status.py",
      "backend/queen-ai/integration_tests/test_blockchain_integration.py",
      "backend/queen-ai/integration_tests/test_llm_integration.py",
      "backend/queen-ai/tests/test_integration.py",
      "backend/queen-ai/tests/test_auth_endpoints.py",
      "backend/queen-ai/tests/security/test_output_filter.py",
      "backend/queen-ai/tests/security/test_prompt_protection.py",
      "backend/queen-ai/app/llm/system_knowledge.py",
      "backend/queen-ai/app/bees/visualization_bee.py",
      "backend/queen-ai/app/bees/data_pipeline_bee.py",
      "backend/queen-ai/app/core/enhanced_claude_integration.py",
      "backend/queen-ai/app/core/security.py",
      "backend/queen-ai/app/core/orchestrator.py",
      "backend/queen-ai/app/core/queen_system_manager.py",
      "backend/queen-ai/app/config/settings.py",
      "backend/queen-ai/app/agents/market_data_agent.py",
      "backend/queen-ai/app/utils/logging_config.py",
      "backend/queen-ai/app/integrations/elastic_search.py",
      "backend/queen-ai/app/integrations/claude_integration.py",
      "backend/queen-ai/app/blockchain/solana_client.py",
      "backend/queen-ai/app/blockchain/solana_rpc_client.py",
      "backend/queen-ai/app/db/models.py",
      "backend/queen-ai/app/services/context_analyzer.py",
      "backend/queen-ai/app/api/v1/auth.py",
      "backend/queen-ai/app/api/v1/queen_dev.py",
      "backend/queen-ai/app/api/v1/market.py",
      "backend/queen-ai/app/api/v1/queen.py",
      "backend/queen-ai/app/api/v1/frontend.py",
      "backend/queen-ai/app/api/v1/__init__.py",
      "backend/queen-ai/app/api/v1/autonomous_dev.py",
      "backend/queen-ai/app/api/v1/admin_claude.py",
      "backend/queen-ai/app/api/v1/admin.py",
      "backend/queen-ai/app/api/v1/contracts.py",
      "backend/queen-ai/app/api/v1/notifications.py",
      "backend/queen-ai/app/api/v1/router.py",
      "backend/queen-ai/app/api/v1/claude_analysis.py",
      "backend/queen-ai/app/api/v1/claude_analysis_old_backup.py",
      "backend/queen-ai/app/api/v1/websocket.py",
      "backend/queen-ai/app/api/v1/endpoints/health.py",
      "backend/queen-ai/app/api/v1/endpoints/teacher_bee.py",
      "backend/queen-ai/app/integrations/data_collectors/price_oracles.py",
      "backend/queen-ai/app/integrations/data_collectors/dex_pools.py",
      "backend/queen-ai/app/core/security/prompt_protection.py",
      "backend/queen-ai/app/core/security/output_filter.py",
      "backend/queen-ai/app/core/security/image_scanner.py",
      "backend/queen-ai/app/llm/providers/gemini.py",
      "omk-frontend/app/page.tsx",
      "omk-frontend/components/cards/PrivateInvestorCard.tsx",
      "omk-frontend/components/cards/MarketDataCard.tsx",
      "omk-frontend/components/cards/OTCPurchaseCard.tsx",
      "omk-frontend/components/menu/FloatingMenu.tsx",
      "omk-frontend/app/kingdom/page.tsx",
      "omk-frontend/app/chat/page.tsx",
      "omk-frontend/app/kingdom/components/ClaudeSystemAnalysis.tsx",
      "omk-frontend/app/kingdom/components/DataPipelineManager.tsx",
      "omk-frontend/app/kingdom/components/QueenDevelopmentHub.tsx",
      "omk-frontend/app/kingdom/components/ElasticSearchDashboard.tsx",
      "omk-frontend/app/kingdom/components/EnhancedAnalytics.tsx",
      "omk-frontend/app/kingdom/components/ContractDeployer_OLD_BACKUP.tsx",
      "omk-frontend/app/kingdom/components/BigQueryAnalytics.tsx",
      "omk-frontend/app/kingdom/components/ContractDeployer.tsx",
      "omk-frontend/app/kingdom/components/UserManagement.tsx",
      "omk-frontend/app/kingdom/components/QueenDevelopment.tsx",
      "omk-frontend/app/kingdom/components/HiveIntelligence.tsx",
      "omk-frontend/app/kingdom/components/OTCRequestManager.tsx",
      "omk-frontend/app/kingdom/components/AutonomousFixer.tsx",
      "omk-frontend/app/kingdom/components/HiveMonitor.tsx",
      "omk-frontend/app/kingdom/login/page.tsx",
      "omk-frontend/lib/api.ts",
      "omk-frontend/services/queenApi.ts",
      "omk-frontend/app/api/analytics/conversion/route.ts",
      "omk-frontend/app/api/teacher-bee/analyze-screenshot/route.ts"
    ],
    "password": [
      "backend/queen-ai/setup_env.py",
      "backend/queen-ai/debug.py",
      "backend/queen-ai/check_env.py",
      "backend/queen-ai/tests/test_database.py",
      "backend/queen-ai/tests/test_integration.py",
      "backend/queen-ai/tests/test_auth_endpoints.py",
      "backend/queen-ai/app/database/auth.py",
      "backend/queen-ai/app/database/connection.py",
      "backend/queen-ai/app/database/seed.py",
      "backend/queen-ai/app/database/init_db.py",
      "backend/queen-ai/app/tools/codebase_navigator.py",
      "backend/queen-ai/app/bees/onboarding_bee.py",
      "backend/queen-ai/app/api/v1/auth.py",
      "backend/queen-ai/app/api/v1/frontend.py",
      "backend/queen-ai/app/api/v1/autonomous_dev.py",
      "backend/queen-ai/app/api/v1/endpoints/teacher_bee.py",
      "backend/queen-ai/app/core/security/prompt_protection.py",
      "backend/queen-ai/app/core/security/image_scanner.py",
      "omk-frontend/components/cards/WalletEducationCard.tsx",
      "omk-frontend/components/cards/VisualWalletGuideCard.tsx",
      "omk-frontend/app/chat/page.tsx",
      "omk-frontend/app/kingdom/components/UserManagement.tsx",
      "omk-frontend/app/kingdom/components/AutonomousFixer.tsx",
      "omk-frontend/app/kingdom/login/page.tsx",
      "omk-frontend/lib/api.ts",
      "omk-frontend/lib/ai/teacherBee.ts",
      "omk-frontend/app/api/teacher-bee/analyze-screenshot/route.ts"
    ],
    "user": [
      "backend/queen-ai/setup_env.py",
      "backend/queen-ai/test_llm_providers.py",
      "backend/queen-ai/start.py",
      "backend/queen-ai/reboot.py",
      "backend/queen-ai/test_lifecycle_management.py",
      "backend/queen-ai/tests/test_database.py",
      "backend/queen-ai/tests/test_integration.py",
      "backend/queen-ai/tests/test_auth_endpoints.py",
      "backend/queen-ai/tests/security/test_output_filter.py",
      "backend/queen-ai/app/database/auth.py",
      "backend/queen-ai/app/database/models.py",
      "backend/queen-ai/app/database/seed.py",
      "backend/queen-ai/app/tools/database_query_tool.py",
      "backend/queen-ai/app/llm/memory.py",
      "backend/queen-ai/app/llm/abstraction.py",
      "backend/queen-ai/app/bees/enhanced_security_bee.py",
      "backend/queen-ai/app/bees/user_experience_bee.py",
      "backend/queen-ai/app/bees/purchase_bee.py",
      "backend/queen-ai/app/bees/stake_bot_bee.py",
      "backend/queen-ai/app/bees/manager.py",
      "backend/queen-ai/app/bees/onboarding_bee.py",
      "backend/queen-ai/app/core/enhanced_claude_integration.py",
      "backend/queen-ai/app/core/security.py",
      "backend/queen-ai/app/core/session_manager.py",
      "backend/queen-ai/app/core/decision_engine.py",
      "backend/queen-ai/app/core/bug_analyzer.py",
      "backend/queen-ai/app/core/queen_system_manager.py",
      "backend/queen-ai/app/learning/observer.py",
      "backend/queen-ai/app/learning/bigquery_logger.py",
      "backend/queen-ai/app/models/database.py",
      "backend/queen-ai/app/integrations/elastic_search.py",
      "backend/queen-ai/app/integrations/claude_integration.py",
      "backend/queen-ai/app/blockchain/bridge.py",
      "backend/queen-ai/app/db/models.py",
      "backend/queen-ai/app/services/context_analyzer.py",
      "backend/queen-ai/app/api/v1/auth.py",
      "backend/queen-ai/app/api/v1/frontend.py",
      "backend/queen-ai/app/api/v1/admin.py",
      "backend/queen-ai/app/api/v1/websocket.py",
      "backend/queen-ai/app/api/v1/endpoints/teacher_bee.py",
      "backend/queen-ai/app/blockchain/dex/raydium_router.py",
      "backend/queen-ai/app/core/security/context_manager.py",
      "backend/queen-ai/app/llm/providers/openai.py",
      "backend/queen-ai/app/llm/providers/anthropic.py",
      "omk-frontend/components/education/TeacherBeeChat.tsx",
      "omk-frontend/components/web3/BalanceBubble.tsx",
      "omk-frontend/app/kingdom/page.tsx",
      "omk-frontend/app/chat/page.tsx",
      "omk-frontend/app/components/ErrorBoundary.tsx",
      "omk-frontend/app/kingdom/components/QueenDevelopmentHub.tsx",
      "omk-frontend/app/kingdom/components/EnhancedAnalytics.tsx",
      "omk-frontend/app/kingdom/components/UserManagement.tsx",
      "omk-frontend/app/kingdom/components/QueenDevelopment.tsx",
      "omk-frontend/app/kingdom/components/OTCRequestManager.tsx",
      "omk-frontend/app/kingdom/login/page.tsx",
      "omk-frontend/stores/authStore.ts",
      "omk-frontend/lib/api.ts",
      "omk-frontend/lib/chatEvents.ts",
      "omk-frontend/lib/store.ts",
      "omk-frontend/services/queenApi.ts",
      "omk-frontend/lib/contracts/dispenser.ts",
      "omk-frontend/lib/ai/teacherBee.ts",
      "omk-frontend/app/api/analytics/conversion/route.ts"
    ],
    "wallet": [
      "backend/queen-ai/test_solana_client.py",
      "backend/queen-ai/integration_tests/test_blockchain_integration.py",
      "backend/queen-ai/app/database/seed.py",
      "backend/queen-ai/app/tools/database_query_tool.py",
      "backend/queen-ai/app/bees/user_experience_bee.py",
      "backend/queen-ai/app/bees/blockchain_bee.py",
      "backend/queen-ai/app/bees/onboarding_bee.py",
      "backend/queen-ai/app/uagents/integration.py",
      "backend/queen-ai/app/utils/blockchain.py",
      "backend/queen-ai/app/blockchain/ethereum_client.py",
      "backend/queen-ai/app/blockchain/wallet_manager.py",
      "backend/queen-ai/app/db/models.py",
      "backend/queen-ai/app/services/context_analyzer.py",
      "backend/queen-ai/app/api/v1/frontend.py",
      "backend/queen-ai/app/api/v1/admin.py",
      "backend/queen-ai/app/api/v1/endpoints/teacher_bee.py",
      "omk-frontend/components/cards/PrivateInvestorCard.tsx",
      "omk-frontend/components/cards/WalletEducationCard.tsx",
      "omk-frontend/components/cards/VisualWalletGuideCard.tsx",
      "omk-frontend/components/cards/DashboardCard.tsx",
      "omk-frontend/components/cards/SwapCard.tsx",
      "omk-frontend/components/cards/OnboardingFlowCard.tsx",
      "omk-frontend/components/cards/WalletFundingGuideCard.tsx",
      "omk-frontend/components/cards/WalletConnectCard.tsx",
      "omk-frontend/components/cards/OTCPurchaseCard.tsx",
      "omk-frontend/components/education/TeacherBeeChat.tsx",
      "omk-frontend/components/web3/BalanceBubble.tsx",
      "omk-frontend/components/web3/WalletConnectModal.tsx",
      "omk-frontend/app/kingdom/page.tsx",
      "omk-frontend/app/chat/page.tsx",
      "omk-frontend/app/dashboard/page_old_backup.tsx",
      "omk-frontend/app/(auth)/connect/page.tsx",
      "omk-frontend/app/kingdom/components/QueenDevelopmentHub.tsx",
      "omk-frontend/app/kingdom/components/ContractDeployer.tsx",
      "omk-frontend/app/kingdom/components/UserManagement.tsx",
      "omk-frontend/app/kingdom/components/TestnetUtilities.tsx",
      "omk-frontend/app/kingdom/components/OTCRequestManager.tsx",
      "omk-frontend/app/learn/wallets/page.tsx",
      "omk-frontend/stores/authStore.ts",
      "omk-frontend/lib/api.ts",
      "omk-frontend/lib/translations.ts",
      "omk-frontend/lib/web3/config.ts",
      "omk-frontend/lib/ai/teacherBee.ts",
      "omk-frontend/app/api/analytics/conversion/route.ts",
      "omk-frontend/app/api/teacher-bee/analyze-screenshot/route.ts"
    ],
    "auth(?:entication|orization)?": [
      "backend/queen-ai/test_llm_providers.py",
      "backend/queen-ai/main.py",
      "backend/queen-ai/tests/test_database.py",
      "backend/queen-ai/tests/test_integration.py",
      "backend/queen-ai/tests/test_auth_endpoints.py",
      "backend/queen-ai/tests/security/test_output_filter.py",
      "backend/queen-ai/app/database/auth.py",
      "backend/queen-ai/app/database/seed.py",
      "backend/queen-ai/app/tools/codebase_navigator.py",
      "backend/queen-ai/app/bees/private_sale_bee.py",
      "backend/queen-ai/app/bees/monitoring_bee.py",
      "backend/queen-ai/app/bees/onboarding_bee.py",
      "backend/queen-ai/app/core/security.py",
      "backend/queen-ai/app/core/queen_system_manager.py",
      "backend/queen-ai/app/integrations/claude_integration.py",
      "backend/queen-ai/app/api/v1/auth.py",
      "backend/queen-ai/app/api/v1/queen_dev.py",
      "backend/queen-ai/app/api/v1/frontend.py",
      "backend/queen-ai/app/api/v1/autonomous_dev.py",
      "backend/queen-ai/app/api/v1/admin.py",
      "backend/queen-ai/app/api/v1/notifications.py",
      "backend/queen-ai/app/api/v1/claude_analysis.py",
      "backend/queen-ai/app/api/v1/claude_analysis_old_backup.py",
      "omk-frontend/components/cards/PrivateInvestorCard.tsx",
      "omk-frontend/components/web3/BalanceBubble.tsx",
      "omk-frontend/app/kingdom/page.tsx",
      "omk-frontend/app/kingdom/components/ClaudeSystemAnalysis.tsx",
      "omk-frontend/app/kingdom/components/DataPipelineManager.tsx",
      "omk-frontend/app/kingdom/components/QueenDevelopmentHub.tsx",
      "omk-frontend/app/kingdom/components/ElasticSearchDashboard.tsx",
      "omk-frontend/app/kingdom/components/EnhancedAnalytics.tsx",
      "omk-frontend/app/kingdom/components/ContractDeployer_OLD_BACKUP.tsx",
      "omk-frontend/app/kingdom/components/BigQueryAnalytics.tsx",
      "omk-frontend/app/kingdom/components/ContractDeployer.tsx",
      "omk-frontend/app/kingdom/components/UserManagement.tsx",
      "omk-frontend/app/kingdom/components/QueenDevelopment.tsx",
      "omk-frontend/app/kingdom/components/HiveIntelligence.tsx",
      "omk-frontend/app/kingdom/components/OTCRequestManager.tsx",
      "omk-frontend/app/kingdom/components/AutonomousFixer.tsx",
      "omk-frontend/app/kingdom/components/HiveMonitor.tsx",
      "omk-frontend/app/kingdom/login/page.tsx",
      "omk-frontend/stores/authStore.ts",
      "omk-frontend/lib/api.ts",
      "omk-frontend/lib/store.ts",
      "omk-frontend/app/api/analytics/conversion/route.ts"
    ],
    "login": [
      "backend/queen-ai/tests/test_integration.py",
      "backend/queen-ai/tests/test_auth_endpoints.py",
      "backend/queen-ai/app/database/init_db.py",
      "backend/queen-ai/app/tools/codebase_navigator.py",
      "backend/queen-ai/app/bees/user_experience_bee.py",
      "backend/queen-ai/app/bees/onboarding_bee.py",
      "backend/queen-ai/app/services/context_analyzer.py",
      "backend/queen-ai/app/api/v1/auth.py",
      "backend/queen-ai/app/api/v1/frontend.py",
      "omk-frontend/components/menu/FloatingMenu.tsx",
      "omk-frontend/app/kingdom/page.tsx",
      "omk-frontend/app/chat/page.tsx",
      "omk-frontend/app/kingdom/components/TestnetUtilities.tsx",
      "omk-frontend/app/kingdom/components/AutonomousFixer.tsx",
      "omk-frontend/app/kingdom/login/page.tsx",
      "omk-frontend/lib/api.ts"
    ]
  },
  "indexed_at": "2025-10-13T14:29:20.868014"
}